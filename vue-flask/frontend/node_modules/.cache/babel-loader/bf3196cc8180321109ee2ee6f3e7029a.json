{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Rete from \"rete\";\nimport * as Socket from \"../sockets\";\nimport Node from './Node.vue';\nexport var AddComponent = /*#__PURE__*/function (_Rete$Component) {\n  _inherits(AddComponent, _Rete$Component);\n\n  var _super = _createSuper(AddComponent);\n\n  function AddComponent() {\n    _classCallCheck(this, AddComponent);\n\n    return _super.call(this, \"+\");\n  }\n\n  _createClass(AddComponent, [{\n    key: \"builder\",\n    value: function builder(node) {\n      var inp1 = new Rete.Input('num1', \"A...\", Socket.number, true);\n      var out = new Rete.Output('num', \"Out\", Socket.number);\n      return node.addInput(inp1).addOutput(out);\n    }\n  }, {\n    key: \"worker\",\n    value: function worker(node, inputs, outputs) {\n      outputs['num'] = node.data.num1;\n    }\n  }, {\n    key: \"toJsonLogic\",\n    value: function toJsonLogic(node) {\n      var _this = this;\n\n      var inputs = node.inputs;\n      var inputNum = inputs.get('num1');\n      var connections = inputNum.connections;\n      return {\n        \"+\": connections.map(function (connection) {\n          var _connectionComponent$;\n\n          var connectionNode = connection.output.node;\n\n          var connectionComponent = _this.editor.getComponent(connectionNode.name);\n\n          return (_connectionComponent$ = connectionComponent.toJsonLogic) === null || _connectionComponent$ === void 0 ? void 0 : _connectionComponent$.call(connectionComponent, connectionNode);\n        })\n      };\n    }\n  }]);\n\n  return AddComponent;\n}(Rete.Component);","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/AddComponent.js"],"names":["Rete","Socket","Node","AddComponent","node","inp1","Input","number","out","Output","addInput","addOutput","inputs","outputs","data","num1","inputNum","get","connections","map","connection","connectionNode","output","connectionComponent","editor","getComponent","name","toJsonLogic","Component"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AACI,0BAAa;AAAA;;AAAA,6BACH,GADG;AAEZ;;AAHL;AAAA;AAAA,WAKI,iBAAQC,IAAR,EAAc;AACV,UAAIC,IAAI,GAAG,IAAIL,IAAI,CAACM,KAAT,CAAe,MAAf,EAAsB,MAAtB,EAA8BL,MAAM,CAACM,MAArC,EAA6C,IAA7C,CAAX;AACA,UAAIC,GAAG,GAAG,IAAIR,IAAI,CAACS,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8BR,MAAM,CAACM,MAArC,CAAV;AAEA,aAAOH,IAAI,CACNM,QADE,CACOL,IADP,EAEFM,SAFE,CAEQH,GAFR,CAAP;AAGH;AAZL;AAAA;AAAA,WAcI,gBAAOJ,IAAP,EAAaQ,MAAb,EAAqBC,OAArB,EAA8B;AAC1BA,MAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBT,IAAI,CAACU,IAAL,CAAUC,IAA3B;AACH;AAhBL;AAAA;AAAA,WAkBI,qBAAYX,IAAZ,EAAkB;AAAA;;AACd,UAAQQ,MAAR,GAAmBR,IAAnB,CAAQQ,MAAR;AAEA,UAAMI,QAAQ,GAAGJ,MAAM,CAACK,GAAP,CAAW,MAAX,CAAjB;AACA,UAAQC,WAAR,GAAwBF,QAAxB,CAAQE,WAAR;AAEA,aAAO;AACH,aAAKA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,UAAU,EAAI;AAAA;;AAC/B,cAAMC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBlB,IAAzC;;AACA,cAAMmB,mBAAmB,GAAG,KAAI,CAACC,MAAL,CAAYC,YAAZ,CAAyBJ,cAAc,CAACK,IAAxC,CAA5B;;AACA,0CAAOH,mBAAmB,CAACI,WAA3B,0DAAO,2BAAAJ,mBAAmB,EAAeF,cAAf,CAA1B;AACH,SAJI;AADF,OAAP;AAOH;AA/BL;;AAAA;AAAA,EAAkCrB,IAAI,CAAC4B,SAAvC","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\nimport Node from './Node.vue';\n\nexport class AddComponent extends Rete.Component {\n    constructor(){\n        super(\"+\");\n    }\n    \n    builder(node) {\n        var inp1 = new Rete.Input('num1',\"A...\", Socket.number, true);\n        var out = new Rete.Output('num', \"Out\", Socket.number);\n\n        return node\n            .addInput(inp1)\n            .addOutput(out);\n    }\n    \n    worker(node, inputs, outputs) {\n        outputs['num'] = node.data.num1;\n    } \n\n    toJsonLogic(node) {\n        const { inputs } = node;\n        \n        const inputNum = inputs.get('num1');\n        const { connections } = inputNum;\n\n        return {\n            \"+\": connections.map(connection => {\n                const connectionNode = connection.output.node;\n                const connectionComponent = this.editor.getComponent(connectionNode.name);\n                return connectionComponent.toJsonLogic?.(connectionNode)\n            })  \n        }  \n    }\n}\n"]},"metadata":{},"sourceType":"module"}