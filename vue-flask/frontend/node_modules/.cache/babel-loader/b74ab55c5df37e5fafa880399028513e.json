{"ast":null,"code":"// Styles\nimport \"../../../src/components/VSpeedDial/VSpeedDial.sass\"; // Mixins\n\nimport Toggleable from '../../mixins/toggleable';\nimport Positionable from '../../mixins/positionable';\nimport Transitionable from '../../mixins/transitionable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Types\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Positionable, Toggleable, Transitionable).extend({\n  name: 'v-speed-dial',\n  directives: {\n    ClickOutside\n  },\n  props: {\n    direction: {\n      type: String,\n      default: 'top',\n      validator: val => {\n        return ['top', 'right', 'bottom', 'left'].includes(val);\n      }\n    },\n    openOnHover: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-transition'\n    }\n  },\n  computed: {\n    classes() {\n      return {\n        'v-speed-dial': true,\n        'v-speed-dial--top': this.top,\n        'v-speed-dial--right': this.right,\n        'v-speed-dial--bottom': this.bottom,\n        'v-speed-dial--left': this.left,\n        'v-speed-dial--absolute': this.absolute,\n        'v-speed-dial--fixed': this.fixed,\n        [`v-speed-dial--direction-${this.direction}`]: true,\n        'v-speed-dial--is-active': this.isActive\n      };\n    }\n\n  },\n\n  render(h) {\n    let children = [];\n    const data = {\n      class: this.classes,\n      directives: [{\n        name: 'click-outside',\n        value: () => this.isActive = false\n      }],\n      on: {\n        click: () => this.isActive = !this.isActive\n      }\n    };\n\n    if (this.openOnHover) {\n      data.on.mouseenter = () => this.isActive = true;\n\n      data.on.mouseleave = () => this.isActive = false;\n    }\n\n    if (this.isActive) {\n      let btnCount = 0;\n      children = (this.$slots.default || []).map((b, i) => {\n        if (b.tag && typeof b.componentOptions !== 'undefined' && (b.componentOptions.Ctor.options.name === 'v-btn' || b.componentOptions.Ctor.options.name === 'v-tooltip')) {\n          btnCount++;\n          return h('div', {\n            style: {\n              transitionDelay: btnCount * 0.05 + 's'\n            },\n            key: i\n          }, [b]);\n        } else {\n          b.key = i;\n          return b;\n        }\n      });\n    }\n\n    const list = h('transition-group', {\n      class: 'v-speed-dial__list',\n      props: {\n        name: this.transition,\n        mode: this.mode,\n        origin: this.origin,\n        tag: 'div'\n      }\n    }, children);\n    return h('div', data, [this.$slots.activator, list]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["Toggleable","Positionable","Transitionable","ClickOutside","mixins","extend","name","directives","props","direction","type","String","default","validator","val","includes","openOnHover","Boolean","transition","computed","classes","top","right","bottom","left","absolute","fixed","isActive","render","h","children","data","class","value","on","click","mouseenter","mouseleave","btnCount","$slots","map","b","i","tag","componentOptions","Ctor","options","style","transitionDelay","key","list","mode","origin","activator"],"sourceRoot":"","sources":["../../../src/components/VSpeedDial/VSpeedDial.ts"],"sourcesContent":["// Styles\nimport './VSpeedDial.sass'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Positionable from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeData } from 'vue'\nimport { Prop } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Positionable, Toggleable, Transitionable).extend({\n  name: 'v-speed-dial',\n\n  directives: { ClickOutside },\n\n  props: {\n    direction: {\n      type: String as Prop<'top' | 'right' | 'bottom' | 'left'>,\n      default: 'top',\n      validator: (val: string) => {\n        return ['top', 'right', 'bottom', 'left'].includes(val)\n      },\n    },\n    openOnHover: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-transition',\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-speed-dial': true,\n        'v-speed-dial--top': this.top,\n        'v-speed-dial--right': this.right,\n        'v-speed-dial--bottom': this.bottom,\n        'v-speed-dial--left': this.left,\n        'v-speed-dial--absolute': this.absolute,\n        'v-speed-dial--fixed': this.fixed,\n        [`v-speed-dial--direction-${this.direction}`]: true,\n        'v-speed-dial--is-active': this.isActive,\n      }\n    },\n  },\n\n  render (h): VNode {\n    let children: VNode[] = []\n    const data: VNodeData = {\n      class: this.classes,\n      directives: [{\n        name: 'click-outside',\n        value: () => (this.isActive = false),\n      }],\n      on: {\n        click: () => (this.isActive = !this.isActive),\n      },\n    }\n\n    if (this.openOnHover) {\n      data.on!.mouseenter = () => (this.isActive = true)\n      data.on!.mouseleave = () => (this.isActive = false)\n    }\n\n    if (this.isActive) {\n      let btnCount = 0\n      children = (this.$slots.default || []).map((b, i) => {\n        if (b.tag && typeof b.componentOptions !== 'undefined' && (b.componentOptions.Ctor.options.name === 'v-btn' || b.componentOptions.Ctor.options.name === 'v-tooltip')) {\n          btnCount++\n          return h('div', {\n            style: {\n              transitionDelay: btnCount * 0.05 + 's',\n            },\n            key: i,\n          }, [b])\n        } else {\n          b.key = i\n          return b\n        }\n      })\n    }\n\n    const list = h('transition-group', {\n      class: 'v-speed-dial__list',\n      props: {\n        name: this.transition,\n        mode: this.mode,\n        origin: this.origin,\n        tag: 'div',\n      },\n    }, children)\n\n    return h('div', data, [this.$slots.activator, list])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}