{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ReteEditor from \"@/components/rete/ReteEditor\";\nexport default {\n  name: \"Automations\",\n  components: {\n    ReteEditor: ReteEditor\n  },\n  data: function data() {\n    var gpios = [];\n\n    for (var i = 1; i < 27; i++) {\n      gpios.push({\n        text: \"GPIO \".concat(i),\n        value: i\n      });\n    }\n\n    return {\n      gpios: gpios,\n      gpiosValues: [],\n      value: null,\n      items: [{\n        title: \"Logout\",\n        icon: \"mdi-logout\",\n        click: function click() {\n          console.log(\"logout\");\n          this.$router.push(\"/\");\n        }\n      }, {\n        title: \"Dashboard\",\n        icon: \"mdi-view-dashboard\",\n        click: function click() {\n          console.log(\"dashboard\");\n          this.$router.push(\"dashboard\");\n        }\n      }, {\n        title: \"Settings\",\n        icon: \"mdi-cogs\",\n        click: function click() {\n          console.log(\"settings\");\n          this.$router.push(\"settings\");\n        }\n      }],\n      dates: [],\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n      switch1: false,\n      AutomationName: \"\",\n      dialog: false,\n      rule_dialog: false,\n      dialogDelete: false,\n      headers: [{\n        text: \"\",\n        value: \"enable\",\n        sortable: false,\n        width: 0\n      }, {\n        text: \"Name\",\n        align: \"start\",\n        value: \"name\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      automations: [],\n      editedIndex: -1,\n      editedItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {}\n      },\n      defaultItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {}\n      },\n      editor: null,\n      editorJSON: \"\"\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New Automation\" : \"Edit Automation\";\n    },\n    dateRangeText: function dateRangeText() {\n      return this.dates.join(\" ~ \");\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    dialogDelete: function dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var response, json;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://127.0.0.1:5000/automation\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              json = _context.sent;\n              _this.automations = json.map(function (val) {\n                var startTime = new Date(val.startTime);\n                var endTime = new Date(val.endTime);\n                delete val.startTime;\n                delete val.endTime;\n                val.startHour = \"\".concat(startTime.getHours(), \":\").concat(startTime.getMinutes());\n                val.endHour = \"\".concat(endTime.getHours(), \":\").concat(endTime.getMinutes());\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    createNodeClick: function createNodeClick() {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleClick: function handleClick(index) {\n      this.items[index].click.call(this);\n    },\n    clickLogo: function clickLogo() {\n      this.$router.push(\"dashboard\");\n    },\n    editItem: function editItem(item) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this2.editedIndex = _this2.automations.indexOf(item);\n                _this2.editedItem = Object.assign({}, item);\n                _this2.dialog = true;\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                  var blueprint;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          blueprint = _this2.editedItem.blueprint; // import blueprint\n\n                          _context3.next = 3;\n                          return _this2.editor.fromJSON(blueprint);\n\n                        case 3:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                })), 200);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    createItem: function createItem() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this3.dialog = true;\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return _this3.editor.clear();\n\n                        case 2:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })), 200);\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    deleteItem: function deleteItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm: function deleteItemConfirm() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                id = _this4.editedItem.id;\n                _context7.next = 3;\n                return fetch(\"http://127.0.0.1:5000/automation?id=\".concat(id), {\n                  method: \"DELETE\"\n                });\n\n              case 3:\n                _this4.automations.splice(_this4.editedIndex, 1);\n\n                _this4.closeDelete();\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    close: function close() {\n      var _this5 = this;\n\n      this.dialog = false;\n      this.$nextTick(function () {\n        _this5.editedItem = Object.assign({}, _this5.defaultItem);\n        _this5.editedIndex = -1;\n      });\n    },\n    closeDelete: function closeDelete() {\n      var _this6 = this;\n\n      this.dialogDelete = false;\n      this.$nextTick(function () {\n        _this6.editedItem = Object.assign({}, _this6.defaultItem);\n        _this6.editedIndex = -1;\n      });\n    },\n    save: function save() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var _endComponent$toJsonL;\n\n        var editor, blueprint, endNode, endComponent, logic, dates, both_dates, selectedDate, startHour, endHour, startTime, endTime, automation, file;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                editor = _this7.editor;\n                _context8.next = 3;\n                return editor.toJSON();\n\n              case 3:\n                blueprint = _context8.sent;\n                endNode = _this7.editor.nodes.find(function (node) {\n                  return node.name === \"End\";\n                });\n                endComponent = editor.getComponent(\"End\");\n                logic = (_endComponent$toJsonL = endComponent.toJsonLogic) === null || _endComponent$toJsonL === void 0 ? void 0 : _endComponent$toJsonL.call(endComponent, endNode);\n                dates = _this7.dates;\n                both_dates = dates.toString().split(\"~\");\n                selectedDate = both_dates.toString().split(\",\");\n                startHour = _this7.editedItem.startHour;\n                endHour = _this7.editedItem.endHour;\n                startTime = selectedDate[0] + \"T\" + startHour + \":00.000Z\";\n                endTime = selectedDate[1] + \"T\" + endHour + \":00.000Z\";\n                automation = {\n                  name: _this7.editedItem.name,\n                  startTime: startTime,\n                  endTime: endTime,\n                  enable: _this7.editedItem.enable,\n                  gpios: _this7.editedItem.gpios,\n                  rules: logic,\n                  blueprint: blueprint\n                };\n                file = JSON.stringify(automation);\n                console.log(file); // Enviar POST\n\n                _context8.next = 19;\n                return fetch(\"http://127.0.0.1:5000/automation\", {\n                  method: \"POST\",\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: file\n                });\n\n              case 19:\n                // OK -> Fechar o dialog, atualizar a tabela\n                if (_this7.editedIndex > -1) {\n                  Object.assign(_this7.automations[_this7.editedIndex], _this7.editedItem);\n                } else {\n                  _this7.automations.push(_this7.editedItem);\n                }\n\n                _this7.close();\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    onExport: function onExport() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var _endComponent$toJsonL2;\n\n        var editor, endNode, endComponent;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                editor = _this8.editor;\n                endNode = _this8.editor.nodes.find(function (node) {\n                  return node.name === \"End\";\n                });\n                endComponent = editor.getComponent(\"End\");\n                console.log(JSON.stringify((_endComponent$toJsonL2 = endComponent.toJsonLogic) === null || _endComponent$toJsonL2 === void 0 ? void 0 : _endComponent$toJsonL2.call(endComponent, endNode)));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    },\n    onEditorImport: function onEditorImport() {\n      var _this9 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _this9.editor.fromJSON(JSON.parse(_this9.editorJSON));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }))();\n    },\n    onEditorSync: function onEditorSync() {\n      var _this10 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.t0 = JSON;\n                _context11.next = 3;\n                return _this10.editor.toJSON();\n\n              case 3:\n                _context11.t1 = _context11.sent;\n                _this10.editorJSON = _context11.t0.stringify.call(_context11.t0, _context11.t1);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQA;AAEA;AACAA,qBADA;AAEAC;AACAC;AADA,GAFA;AAMAC,MANA,kBAMA;AACA;;AACA;AACAC;AACAC,+BADA;AAEAC;AAFA;AAIA;;AAEA;AACAF,kBADA;AAEAG,qBAFA;AAGAD,iBAHA;AAKAE,cACA;AACAC,uBADA;AAEAC,0BAFA;AAGAC,aAHA,mBAGA;AACAC;AACA;AACA;AANA,OADA,EASA;AACAH,0BADA;AAEAC,kCAFA;AAGAC,aAHA,mBAGA;AACAC;AACA;AACA;AANA,OATA,EAiBA;AACAH,yBADA;AAEAC,wBAFA;AAGAC,aAHA,mBAGA;AACAC;AACA;AACA;AANA,OAjBA,CALA;AAgCAC,eAhCA;AAkCAC,sBAlCA;AAmCAC,oBAnCA;AAoCAC,iBApCA;AAqCAC,iBArCA;AAuCAC,oBAvCA;AAyCAC,wBAzCA;AA0CAC,mBA1CA;AA2CAC,wBA3CA;AA4CAC,yBA5CA;AA8CAC,gBACA;AACAlB,gBADA;AAEAC,uBAFA;AAGAkB,uBAHA;AAIAC;AAJA,OADA,EAOA;AACApB,oBADA;AAEAqB,sBAFA;AAGApB;AAHA,OAPA,EAYA;AAAAD;AAAAC;AAAAkB;AAAA,OAZA,CA9CA;AA4DAG,qBA5DA;AA6DAC,qBA7DA;AA8DAC;AACAC,aADA;AAEA9B,gBAFA;AAGA+B,eAHA;AAIA3B,iBAJA;AAKA4B,qBALA;AAMAC,qBANA;AAOAC,mBAPA;AAQAC;AARA,OA9DA;AAyEAC;AACAN,aADA;AAEA9B,gBAFA;AAGA+B,eAHA;AAIA3B,iBAJA;AAKA4B,qBALA;AAMAC,qBANA;AAOAC,mBAPA;AAQAC;AARA,OAzEA;AAoFAE,kBApFA;AAqFAC;AArFA;AAuFA,GAtGA;AAwGAC;AACAC,aADA,uBACA;AACA;AACA,KAHA;AAIAC,iBAJA,2BAIA;AACA;AACA;AANA,GAxGA;AAiHAC;AACAtB,UADA,kBACAuB,GADA,EACA;AACAA;AACA,KAHA;AAIArB,gBAJA,wBAIAqB,GAJA,EAIA;AACAA;AACA;AANA,GAjHA;AA0HAC,SA1HA,qBA0HA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,yCADA;;AAAA;AACAC,sBADA;AAAA;AAAA,qBAEAA,eAFA;;AAAA;AAEAC,kBAFA;AAGA;AACA;AACA;AAEA;AACA;AAEAJ;AACAA;AACA,eATA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,GAxIA;AA0IAK;AACAC,mBADA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;AAEAC,eAFA,uBAEAC,KAFA,EAEA;AACA;AACA,KAJA;AAKAC,aALA,uBAKA;AACA;AACA,KAPA;AASAC,YATA,oBASAC,IATA,EASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACApB,mCADA,GACA,2BADA,EAEA;;AAFA;AAAA,iCAGA,iCAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAIA,GAJA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KApBA;AAsBAqB,cAtBA,wBAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,qBADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,GAFA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KA5BA;AA8BAE,cA9BA,sBA8BAH,IA9BA,EA8BA;AACA;AACA;AACA;AACA,KAlCA;AAoCAI,qBApCA,+BAoCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA5B,kBAFA,GAEA,oBAFA;AAAA;AAAA,uBAGAe;AACAc;AADA,kBAHA;;AAAA;AAMA;;AACA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KA9CA;AAgDAC,SAhDA,mBAgDA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA,KAtDA;AAwDAC,eAxDA,yBAwDA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA,KA9DA;AAgEAC,QAhEA,kBAgEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAzB,sBADA,GACA,aADA;AAAA;AAAA,uBAGAA,eAHA;;AAAA;AAGAF,yBAHA;AAKA4B,uBALA,GAKA;AAAA;AAAA,kBALA;AAMAC,4BANA,GAMA3B,0BANA;AAQA4B,qBARA,4BAQAD,wBARA,0DAQA,iDARA;AAUAnD,qBAVA,GAUA,YAVA;AAWAqD,0BAXA,GAWArD,2BAXA;AAYAsD,4BAZA,GAYAD,gCAZA;AAcAjC,yBAdA,GAcA,2BAdA;AAeAC,uBAfA,GAeA,yBAfA;AAiBAkC,yBAjBA,GAiBAD,8CAjBA;AAkBAE,uBAlBA,GAkBAF,4CAlBA;AAoBAG,0BApBA,GAoBA;AACAtE,8CADA;AAEAoE,sCAFA;AAGAC,kCAHA;AAIArC,kDAJA;AAKA5B,gDALA;AAMAmE,8BANA;AAOApC;AAPA,iBApBA;AA8BAqC,oBA9BA,GA8BAC,0BA9BA;AAgCA7D,kCAhCA,CAkCA;;AAlCA;AAAA,uBAoCAiC;AACAc,gCADA;AAEApC;AAAA;AAAA,mBAFA;AAGAmD;AAHA,kBApCA;;AAAA;AAyCA;AAEA;AACAC;AACA,iBAFA,MAEA;AACA;AACA;;AAEA;;AAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA,KAlHA;AAoHAC,YApHA,sBAoHA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAvC,sBADA,GACA,aADA;AAGA0B,uBAHA,GAGA;AAAA;AAAA,kBAHA;AAIAC,4BAJA,GAIA3B,0BAJA;AAMAzB;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KA3HA;AA6HAiE,kBA7HA,4BA6HA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,qDADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KA/HA;AAiIAC,gBAjIA,0BAiIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACAL,IADA;AAAA;AAAA,uBACA,uBADA;;AAAA;AAAA;AACA,kCADA,iBACAM,SADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAnIA;AA1IA","names":["name","components","ReteEditor","data","gpios","text","value","gpiosValues","items","title","icon","click","console","dates","menuStart","menuEnd","menu1","menu2","switch1","AutomationName","dialog","rule_dialog","dialogDelete","headers","sortable","width","align","automations","editedIndex","editedItem","id","rule","enable","startHour","endHour","blueprint","defaultItem","editor","editorJSON","computed","formTitle","dateRangeText","watch","val","mounted","fetch","response","json","methods","createNodeClick","handleClick","index","clickLogo","editItem","item","setTimeout","createItem","deleteItem","deleteItemConfirm","method","close","closeDelete","save","endNode","endComponent","logic","both_dates","selectedDate","startTime","endTime","automation","rules","file","JSON","body","Object","onExport","onEditorImport","onEditorSync","stringify"],"sourceRoot":"src/views","sources":["Automations.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app-bar color=\"transparent\" dark elevation=\"0\">\n      <v-img\n        max-height=\"35\"\n        max-width=\"35\"\n        src=\"../assets/logo_simple.png\"\n        @click=\"clickLogo()\"\n      ></v-img>\n      <v-toolbar-title class=\"ml-4\">Automations</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-menu transition=\"slide-y-transition\" offset-y>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            @click=\"handleClick(index)\"\n          >\n            <v-list-item-icon>\n              <v-icon v-text=\"item.icon\"></v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"automations\"\n      class=\"elevation-24 mt-13\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title class=\"font-weight-bold\"\n            >Automations</v-toolbar-title\n          >\n          <v-spacer></v-spacer>\n          <v-btn\n                color=\"secondary\"\n                depressed\n                elevation=\"4\"\n                raised\n                mx-auto\n                rounded\n                dark\n                @click=\"createItem\"\n              >\n                <v-icon class=\"mr-3\">mdi-plus</v-icon>Create automation\n              </v-btn>\n          <v-dialog v-model=\"dialog\" full-screen>\n\n            <v-card overflow-hidden>\n              <v-card-title>\n                <span class=\"text-h4 font-weight-bold\">{{ formTitle }}</span>\n              </v-card-title>\n              <v-card-actions>\n                <v-btn color=\"blue darken-1 mr-auto\" text @click=\"save\">\n                  Save\n                </v-btn>\n                <v-btn color=\"blue darken-1 mr-auto\" text @click=\"close\">\n                  Cancel\n                </v-btn>\n              </v-card-actions>\n\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"4\" md=\"2\">\n                    <h2 class=\"mt-12\">Name</h2>\n                    <v-text-field\n                      v-model=\"editedItem.name\"\n                      label=\"Insert Automation Name Here!\"\n                      required\n                      class=\"mt-3 mb-6\"\n                    ></v-text-field>\n\n                    <div>\n                      <h2>Time</h2>\n                      <v-menu\n                        v-model=\"menu2\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        min-width=\"auto\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"dateRangeText\"\n                            label=\"Select date range\"\n                            prepend-icon=\"mdi-calendar\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mt-3\"\n                          ></v-text-field>\n                        </template>\n                        <v-date-picker v-model=\"dates\" range></v-date-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu1\"\n                        v-model=\"menuStart\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"editedItem.startHour\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"editedItem.startHour\"\n                            label=\"Start Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuStart\"\n                          v-model=\"editedItem.startHour\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu1.save(editedItem.startHour)\"\n                        ></v-time-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu2\"\n                        v-model=\"menuEnd\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"editedItem.endHour\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"editedItem.endHour\"\n                            label=\"End Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mb-6\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuEnd\"\n                          v-model=\"editedItem.endHour\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu2.save(editedItem.endHour)\"\n                        ></v-time-picker>\n                      </v-menu>\n                    </div>\n\n                    <div>\n                      <h2>Outputs</h2>\n                      <v-row>\n                        <v-autocomplete\n                          v-model=\"editedItem.gpios\"\n                          :items=\"gpios\"\n                          chips\n                          deletable-chips\n                          multiple\n                          label=\"Select GPIOS as outputs\"\n                          class=\"ml-3 mt-3 mb-6\"\n                        >\n                          <template v-slot:item=\"{ item, on, attrs }\">\n                            <v-list-item v-on=\"on\" v-bind=\"attrs\">\n                              <v-list-item-content>\n                                <v-list-item-title>\n                                  <v-chip dark color=\"primary\">\n                                    {{ item.text }}\n                                  </v-chip>\n                                </v-list-item-title>\n                              </v-list-item-content>\n                            </v-list-item>\n                          </template>\n                        </v-autocomplete>\n                      </v-row>\n                    </div>\n\n                    <div>\n                      <h2>Enable</h2>\n                      <v-switch v-model=\"editedItem.enable\"></v-switch>\n                    </div>\n\n                    <v-btn @click=\"onExport\">Export</v-btn>\n\n                    <v-textarea v-model=\"editorJSON\"></v-textarea>\n                    <v-btn @click=\"onEditorSync\">Sync</v-btn>\n                    <v-btn @click=\"onEditorImport\">Import</v-btn>\n                  </v-col>\n                  <v-col md=\"10\">\n                    <ReteEditor v-model=\"editor\" />\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-dialog>\n\n          <v-dialog v-model=\"dialogDelete\" max-width=\"573px\">\n            <v-card>\n              <v-card-title class=\"text-h5\"\n                >Are you sure you want to delete this automation?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.enable`]=\"{ item }\">\n        <v-switch\n          v-model=\"item.enable\"\n          hide-details\n          class=\"ma-0 pa-0\"\n        ></v-switch>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n        <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport ReteEditor from \"@/components/rete/ReteEditor\";\n\nexport default {\n  name: \"Automations\",\n  components: {\n    ReteEditor,\n  },\n\n  data() {\n    const gpios = [];\n    for (let i = 1; i < 27; i++) {\n      gpios.push({\n        text: `GPIO ${i}`,\n        value: i,\n      });\n    }\n\n    return {\n      gpios: gpios,\n      gpiosValues: [],\n      value: null,\n\n      items: [\n        {\n          title: \"Logout\",\n          icon: \"mdi-logout\",\n          click() {\n            console.log(\"logout\");\n            this.$router.push(\"/\");\n          },\n        },\n        {\n          title: \"Dashboard\",\n          icon: \"mdi-view-dashboard\",\n          click() {\n            console.log(\"dashboard\");\n            this.$router.push(\"dashboard\");\n          },\n        },\n        {\n          title: \"Settings\",\n          icon: \"mdi-cogs\",\n          click() {\n            console.log(\"settings\");\n            this.$router.push(\"settings\");\n          },\n        },\n      ],\n\n      dates: [],\n\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n\n      switch1: false,\n\n      AutomationName: \"\",\n      dialog: false,\n      rule_dialog: false,\n      dialogDelete: false,\n\n      headers: [\n        {\n          text: \"\",\n          value: \"enable\",\n          sortable: false,\n          width: 0,\n        },\n        {\n          text: \"Name\",\n          align: \"start\",\n          value: \"name\",\n        },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n      automations: [],\n      editedIndex: -1,\n      editedItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        startHour: \"\",\n        endHour: \"\",  \n        blueprint: {}\n      },\n\n      defaultItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {}\n      },\n\n      editor: null,\n      editorJSON: \"\",\n    };\n  },\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Automation\" : \"Edit Automation\";\n    },\n    dateRangeText() {\n      return this.dates.join(\" ~ \");\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  async mounted() {\n    const response = await fetch(\"http://127.0.0.1:5000/automation\")\n    const json = await response.json()\n    this.automations = json.map(val=> {\n      const startTime = new Date(val.startTime)\n      const endTime = new Date(val.endTime)\n      \n      delete val.startTime\n      delete val.endTime\n\n      val.startHour = `${startTime.getHours()}:${startTime.getMinutes()}`\n      val.endHour = `${endTime.getHours()}:${endTime.getMinutes()}`\n    })\n\n  },\n\n  methods: {\n    async createNodeClick() {},\n    handleClick(index) {\n      this.items[index].click.call(this);\n    },\n    clickLogo() {\n      this.$router.push(\"dashboard\");\n    },\n\n    async editItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n\n      this.dialog = true;\n\n      setTimeout(async () => {\n        const blueprint = this.editedItem.blueprint;\n        // import blueprint\n        await this.editor.fromJSON(blueprint);\n      }, 200);\n    },\n\n    async createItem() {\n      \n      this.dialog = true;\n      setTimeout(async () => {\n        await this.editor.clear()\n        }, 200);\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    async deleteItemConfirm() {\n      \n      const id = this.editedItem.id\n      await fetch(`http://127.0.0.1:5000/automation?id=${id}`, {\n        method: \"DELETE\",\n      })\n      this.automations.splice(this.editedIndex, 1);\n      this.closeDelete();\n\n\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    async save() {\n      const editor = this.editor;\n\n      const blueprint = await editor.toJSON();\n\n      const endNode = this.editor.nodes.find((node) => node.name === \"End\");\n      const endComponent = editor.getComponent(\"End\");\n\n      const logic = endComponent.toJsonLogic?.(endNode);\n\n      const dates = this.dates;\n      const both_dates = dates.toString().split(\"~\");\n      const selectedDate = both_dates.toString().split(\",\");\n\n      const startHour = this.editedItem.startHour;\n      const endHour = this.editedItem.endHour;\n\n      const startTime = selectedDate[0] + \"T\" + startHour + \":00.000Z\";\n      const endTime = selectedDate[1] + \"T\" + endHour + \":00.000Z\";\n\n      const automation = {\n        name: this.editedItem.name,\n        startTime: startTime,\n        endTime: endTime,\n        enable: this.editedItem.enable,\n        gpios: this.editedItem.gpios,\n        rules: logic,\n        blueprint: blueprint,\n      };\n\n      const file = JSON.stringify(automation);\n\n      console.log(file);\n\n      // Enviar POST\n\n      await fetch(\"http://127.0.0.1:5000/automation\", {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: file\n      });\n      // OK -> Fechar o dialog, atualizar a tabela\n\n      if (this.editedIndex > -1) {\n        Object.assign(this.automations[this.editedIndex], this.editedItem);\n      } else {\n        this.automations.push(this.editedItem);\n      }\n\n      this.close();\n    },\n\n    async onExport() {\n      const editor = this.editor;\n\n      const endNode = this.editor.nodes.find((node) => node.name === \"End\");\n      const endComponent = editor.getComponent(\"End\");\n\n      console.log(JSON.stringify(endComponent.toJsonLogic?.(endNode)));\n    },\n\n    async onEditorImport() {\n      await this.editor.fromJSON(JSON.parse(this.editorJSON));\n    },\n\n    async onEditorSync() {\n      this.editorJSON = JSON.stringify(await this.editor.toJSON());\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}