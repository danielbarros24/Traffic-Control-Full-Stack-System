{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/web_ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      step: 1,\n      age: -1\n    };\n  },\n  props: {\n    source: String\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://127.0.0.1:5000/\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              _this.age = data.idade;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACAA;AAAA;AACAC,aADA;AAEAC;AAFA;AAAA,GADA;AAKAC;AACAC;AADA,GALA;AASAC,SATA,qBASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,+BADA;;AAAA;AACAC,sBADA;AAAA;AAAA,qBAGAA,eAHA;;AAAA;AAGAP,kBAHA;AAIAQ;AAEA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAhBA","names":["data","step","age","props","source","mounted","fetch","response","console"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-content>\n      <v-container class=\"fill-height\">\n        <v-row align=\"center\" justify=\"center\">\n          <v-col cols=\"7\" md=\"4\">\n            <v-card class=\"elevation-12\">\n              <v-window v-model=\"step\">\n                  <v-card-text class=\"pt-9 pl-10 pr-16 pb-10\" flat>\n                    <v-img\n                      class=\"mb-12 mx-auto text-center\"\n                      src=\"../assets/logo.png\"\n                      max-height=\"160\"\n                      max-width=\"160\"\n                    ></v-img>\n\n                    <v-form>\n                      <v-text-field\n                        label=\"Username\"\n                        name=\"Email\"\n                        prepend-icon=\"mdi-account\"\n                        type=\"text\"\n                        color=\"deep-purple darken-3\"\n                      />\n\n                      <v-text-field\n                        id=\"password\"\n                        label=\"Password\"\n                        name=\"password\"\n                        prepend-icon=\"key\"\n                        type=\"password\"\n                        color=\"deep-purple darken-3\"\n                        :rules=\"[v => !!v || 'You must type password!']\"\n                      />\n                      <v-btn rounded color=\"deep-purple darken-3\" class=\"mt-4\" block dark to=\"/dashboard\"\n                      >SIGN IN</v-btn\n                    >\n                    </v-form>\n\n                  </v-card-text>\n              </v-window>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    step: 1,\n    age: -1\n  }),\n  props: {\n    source: String,\n  },\n\n  async mounted() {\n    const response = await fetch(\"http://127.0.0.1:5000/\")\n\n    const data = await response.json()\n    console.log(data)\n\n    this.age = data.idade\n  }\n};\n\n</script>\n\n<style>\n.v-content {\n  background: rgb(63, 154, 251);\n  background: radial-gradient(\n    circle,\n    rgba(63, 154, 251, 1) 0%,\n    rgba(140, 91, 251, 1) 45%,\n    rgba(126, 70, 252, 1) 100%\n  );\n}\n\n.v-card {\n  background: transparent;\n}\n</style>"]},"metadata":{},"sourceType":"module"}