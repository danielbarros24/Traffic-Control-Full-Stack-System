{"ast":null,"code":"// Components\nimport VIcon from '../VIcon'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { keyCodes } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('stepper', 'v-stepper-step', 'v-stepper'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-stepper-step',\n  directives: {\n    ripple\n  },\n  inject: ['stepClick'],\n  props: {\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete'\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit'\n    },\n    errorIcon: {\n      type: String,\n      default: '$error'\n    },\n    rules: {\n      type: Array,\n      default: () => []\n    },\n    step: [Number, String]\n  },\n\n  data() {\n    return {\n      isActive: false,\n      isInactive: true\n    };\n  },\n\n  computed: {\n    classes() {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete\n      };\n    },\n\n    hasError() {\n      return this.rules.some(validate => validate() !== true);\n    }\n\n  },\n\n  mounted() {\n    this.stepper && this.stepper.register(this);\n  },\n\n  beforeDestroy() {\n    this.stepper && this.stepper.unregister(this);\n  },\n\n  methods: {\n    click(e) {\n      e.stopPropagation();\n      this.$emit('click', e);\n\n      if (this.editable) {\n        this.stepClick(this.step);\n      }\n    },\n\n    genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n\n    genLabel() {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label'\n      }, this.$slots.default);\n    },\n\n    genStep() {\n      const color = !this.hasError && (this.complete || this.isActive) ? this.color : false;\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step'\n      }), this.genStepContent());\n    },\n\n    genStepContent() {\n      const children = [];\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon));\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon));\n        } else {\n          children.push(this.genIcon(this.completeIcon));\n        }\n      } else {\n        children.push(String(this.step));\n      }\n\n      return children;\n    },\n\n    keyboardClick(e) {\n      if (e.keyCode === keyCodes.space) {\n        this.click(e);\n      }\n    },\n\n    toggle(step) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isInactive = Number(step) < Number(this.step);\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      attrs: {\n        tabindex: this.editable ? 0 : -1\n      },\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable\n      }],\n      on: {\n        click: this.click,\n        keydown: this.keyboardClick\n      }\n    }, [this.genStep(), this.genLabel()]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VIcon","Colorable","inject","RegistrableInject","ripple","mixins","keyCodes","baseMixins","extend","name","directives","props","color","type","String","default","complete","Boolean","completeIcon","editable","editIcon","errorIcon","rules","Array","step","Number","data","isActive","isInactive","computed","classes","hasError","some","validate","mounted","stepper","register","beforeDestroy","unregister","methods","click","e","stopPropagation","$emit","stepClick","genIcon","icon","$createElement","genLabel","staticClass","$slots","genStep","setBackgroundColor","genStepContent","children","push","keyboardClick","keyCode","space","toggle","toString","render","h","attrs","tabindex","class","value","on","keydown"],"sourceRoot":"","sources":["../../../src/components/VStepper/VStepperStep.ts"],"sourcesContent":["// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VuetifyStepperRuleValidator = () => string | boolean\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('stepper', 'v-stepper-step', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  stepClick: (step: number | string) => void\n}\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-step',\n\n  directives: { ripple },\n\n  inject: ['stepClick'],\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete',\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit',\n    },\n    errorIcon: {\n      type: String,\n      default: '$error',\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<VuetifyStepperRuleValidator[]>,\n    step: [Number, String],\n  },\n\n  data () {\n    return {\n      isActive: false,\n      isInactive: true,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete,\n      }\n    },\n    hasError (): boolean {\n      return this.rules.some(validate => validate() !== true)\n    },\n  },\n\n  mounted () {\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      e.stopPropagation()\n\n      this.$emit('click', e)\n\n      if (this.editable) {\n        this.stepClick(this.step)\n      }\n    },\n    genIcon (icon: string) {\n      return this.$createElement(VIcon, icon)\n    },\n    genLabel () {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label',\n      }, this.$slots.default)\n    },\n    genStep () {\n      const color = (!this.hasError && (this.complete || this.isActive)) ? this.color : false\n\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step',\n      }), this.genStepContent())\n    },\n    genStepContent () {\n      const children = []\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon))\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon))\n        } else {\n          children.push(this.genIcon(this.completeIcon))\n        }\n      } else {\n        children.push(String(this.step))\n      }\n\n      return children\n    },\n    keyboardClick (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.space) {\n        this.click(e)\n      }\n    },\n    toggle (step: number | string) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isInactive = Number(step) < Number(this.step)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      attrs: {\n        tabindex: this.editable ? 0 : -1,\n      },\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable,\n      }],\n      on: {\n        click: this.click,\n        keydown: this.keyboardClick,\n      },\n    }, [\n      this.genStep(),\n      this.genLabel(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}