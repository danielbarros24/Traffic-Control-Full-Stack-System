{"ast":null,"code":"import _defineProperty from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _name$components$data;\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/web.url.to-json.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ReteEditor from \"@/components/rete/ReteEditor\";\nexport default (_name$components$data = {\n  name: \"AutoChips\",\n  components: {\n    ReteEditor: ReteEditor\n  },\n  data: function data() {\n    return {\n      enable_switch: true\n    };\n  }\n}, _defineProperty(_name$components$data, \"data\", function data() {\n  return {\n    gpios: [\"GPIO 1\", \"GPIO 2\", \"GPIO 3\", \"GPIO 4\", \"GPIO 5\", \"GPIO 6\", \"GPIO 7\", \"GPIO 8\", \"GPIO 9\", \"GPIO 10\", \"GPIO 11\", \"GPIO 12\", \"GPIO 13\", \"GPIO 14\", \"GPIO 15\", \"GPIO 16\", \"GPIO 17\", \"GPIO 18\", \"GPIO 19\", \"GPIO 20\", \"GPIO 21\", \"GPIO 22\", \"GPIO 23\", \"GPIO 24\", \"GPIO 25\", \"GPIO 26\"],\n    gpiosValues: [],\n    value: null,\n    items: [{\n      title: \"Logout\",\n      icon: \"mdi-logout\",\n      click: function click() {\n        console.log(\"logout\");\n        this.$router.push(\"/\");\n      }\n    }, {\n      title: \"Dashboard\",\n      icon: \"mdi-view-dashboard\",\n      click: function click() {\n        console.log(\"dashboard\");\n        this.$router.push(\"dashboard\");\n      }\n    }, {\n      title: \"Settings\",\n      icon: \"mdi-cogs\",\n      click: function click() {\n        console.log(\"settings\");\n        this.$router.push(\"settings\");\n      }\n    }],\n    dates: [],\n    time1: null,\n    time2: null,\n    menuStart: false,\n    menuEnd: false,\n    menu1: null,\n    menu2: null,\n    enable_switch: false,\n    AutomationName: \"\",\n    dialog: false,\n    rule_dialog: false,\n    dialogDelete: false,\n    headers: [{\n      text: \"\",\n      value: \"state\",\n      sortable: false,\n      width: 0\n    }, {\n      text: \"Name\",\n      align: \"start\",\n      value: \"name\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    automations: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n      rule: 0,\n      gpio: 0,\n      state: false\n    },\n    defaultItem: {\n      name: \"\",\n      rule: 0,\n      gpio: 0,\n      state: false\n    },\n    editor: null,\n    editorJSON: \"\"\n  };\n}), _defineProperty(_name$components$data, \"computed\", {\n  formTitle: function formTitle() {\n    return this.editedIndex === -1 ? \"New Automation\" : \"Edit Automation\";\n  },\n  dateRangeText: function dateRangeText() {\n    return this.dates.join(\" ~ \");\n  }\n}), _defineProperty(_name$components$data, \"watch\", {\n  dialog: function dialog(val) {\n    val || this.close();\n  },\n  dialogDelete: function dialogDelete(val) {\n    val || this.closeDelete();\n  }\n}), _defineProperty(_name$components$data, \"mounted\", function mounted() {\n  var _this = this;\n\n  return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.initialize();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}), _defineProperty(_name$components$data, \"methods\", {\n  createNodeClick: function createNodeClick() {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  handleClick: function handleClick(index) {\n    this.items[index].click.call(this);\n  },\n  clickLogo: function clickLogo() {\n    this.$router.push(\"dashboard\");\n  },\n  initialize: function initialize() {\n    this.automations = [{\n      name: \"Automation 1\",\n      state: false\n    }, {\n      name: \"Automation 2\",\n      state: false\n    }, {\n      name: \"Automation 3\",\n      state: false\n    }, {\n      name: \"Automation 4\",\n      state: false\n    }, {\n      name: \"Automation 5\",\n      state: false\n    }, {\n      name: \"Automation 6\",\n      state: false\n    }, {\n      name: \"Automation 7\",\n      state: false\n    }];\n  },\n  editItem: function editItem(item) {\n    this.editedIndex = this.automations.indexOf(item);\n    this.editedItem = Object.assign({}, item);\n    this.dialog = true;\n  },\n  deleteItem: function deleteItem(item) {\n    this.editedIndex = this.automations.indexOf(item);\n    this.editedItem = Object.assign({}, item);\n    this.dialogDelete = true;\n  },\n  deleteItemConfirm: function deleteItemConfirm() {\n    this.automations.splice(this.editedIndex, 1);\n    this.closeDelete();\n  },\n  close: function close() {\n    var _this2 = this;\n\n    this.dialog = false;\n    this.$nextTick(function () {\n      _this2.editedItem = Object.assign({}, _this2.defaultItem);\n      _this2.editedIndex = -1;\n    });\n  },\n  closeDelete: function closeDelete() {\n    var _this3 = this;\n\n    this.dialogDelete = false;\n    this.$nextTick(function () {\n      _this3.editedItem = Object.assign({}, _this3.defaultItem);\n      _this3.editedIndex = -1;\n    });\n  },\n  save: function save() {\n    if (this.editedIndex > -1) {\n      Object.assign(this.automations[this.editedIndex], this.editedItem);\n    } else {\n      this.automations.push(this.editedItem);\n    }\n\n    var automation = {\n      name: this.AutomationName,\n      StartTime: \"1996-10-15T00:05:32.000Z\",\n      EndTime: \"1997-10-15T00:05:32.000Z\",\n      Enable: enable_switch.toString(),\n      GPIOS: {\n        GPIO1: 1,\n        GPIO2: 2\n      },\n      NEW: true\n    };\n    var file = JSON.stringify(automation);\n    console.log(file);\n    this.close();\n  },\n  onExport: function onExport() {\n    var _this4 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var _endComponent$toJsonL;\n\n      var editor, endNode, endComponent;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              editor = _this4.editor;\n              endNode = _this4.editor.nodes.find(function (node) {\n                return node.name === \"End\";\n              });\n              endComponent = editor.getComponent(\"End\");\n              console.log(JSON.stringify((_endComponent$toJsonL = endComponent.toJsonLogic) === null || _endComponent$toJsonL === void 0 ? void 0 : _endComponent$toJsonL.call(endComponent, endNode)));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  onEditorImport: function onEditorImport() {\n    var _this5 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this5.editor.fromJSON(JSON.parse(_this5.editorJSON));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  onEditorSync: function onEditorSync() {\n    var _this6 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.t0 = JSON;\n              _context5.next = 3;\n              return _this6.editor.toJSON();\n\n            case 3:\n              _context5.t1 = _context5.sent;\n              _this6.editorJSON = _context5.t0.stringify.call(_context5.t0, _context5.t1);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n}), _name$components$data);","map":{"version":3,"mappings":"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","names":["name","components","ReteEditor","data","enable_switch","gpios","gpiosValues","value","items","title","icon","click","console","dates","time1","time2","menuStart","menuEnd","menu1","menu2","AutomationName","dialog","rule_dialog","dialogDelete","headers","text","sortable","width","align","automations","editedIndex","editedItem","rule","gpio","state","defaultItem","editor","editorJSON","formTitle","dateRangeText","val","createNodeClick","handleClick","index","clickLogo","initialize","editItem","item","deleteItem","deleteItemConfirm","close","closeDelete","save","Object","StartTime","EndTime","Enable","GPIOS","GPIO1","GPIO2","NEW","onExport","endNode","endComponent","onEditorImport","onEditorSync","JSON","stringify"],"sourceRoot":"src/views","sources":["Automations.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app-bar color=\"transparent\" dark elevation=\"0\">\n      <v-img\n        max-height=\"35\"\n        max-width=\"35\"\n        src=\"../assets/logo_simple.png\"\n        @click=\"clickLogo()\"\n      ></v-img>\n      <v-toolbar-title class=\"ml-4\">Automations</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-menu transition=\"slide-y-transition\" offset-y>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            @click=\"handleClick(index)\"\n          >\n            <v-list-item-icon>\n              <v-icon v-text=\"item.icon\"></v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"automations\"\n      class=\"elevation-24 mt-13\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title class=\"font-weight-bold\"\n            >Automations</v-toolbar-title\n          >\n          <v-spacer></v-spacer>\n\n          <v-dialog v-model=\"dialog\" full-screen>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn\n                color=\"secondary\"\n                depressed\n                elevation=\"4\"\n                raised\n                mx-auto\n                rounded\n                dark\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                <v-icon class=\"mr-3\">mdi-plus</v-icon>Create automation\n              </v-btn>\n            </template>\n\n            <v-card overflow-hidden>\n              <v-card-title>\n                <span class=\"text-h4 font-weight-bold\">{{ formTitle }}</span>\n              </v-card-title>\n              <v-card-actions>\n                <v-btn color=\"blue darken-1 mr-auto\" text @click=\"save\">\n                  Save\n                </v-btn>\n                <v-btn color=\"blue darken-1 mr-auto\" text @click=\"close\">\n                  Cancel\n                </v-btn>\n              </v-card-actions>\n\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"4\" md=\"2\">\n                    <h2 class=\"mt-12\">Name</h2>\n                    <v-text-field\n                      v-model=\"AutomationName\"\n                      label=\"Insert Automation Name Here!\"\n                      required\n                      class=\"mt-3 mb-6\"\n                    ></v-text-field>\n\n                    <div>\n                      <h2>Time</h2>\n                      <v-menu\n                        v-model=\"menu2\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        min-width=\"auto\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"dateRangeText\"\n                            label=\"Select date range\"\n                            prepend-icon=\"mdi-calendar\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mt-3\"\n                          ></v-text-field>\n                        </template>\n                        <v-date-picker v-model=\"dates\" range></v-date-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu1\"\n                        v-model=\"menuStart\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"time1\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"time1\"\n                            label=\"Start Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuStart\"\n                          v-model=\"time1\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu1.save(time1)\"\n                        ></v-time-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu2\"\n                        v-model=\"menuEnd\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"time2\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"time2\"\n                            label=\"End Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mb-6\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuEnd\"\n                          v-model=\"time2\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu2.save(time2)\"\n                        ></v-time-picker>\n                      </v-menu>\n                    </div>\n\n                    <div>\n                      <h2>Outputs</h2>\n                      <v-row>\n                        <v-autocomplete\n                          v-model=\"gpiosValues\"\n                          :items=\"gpios\"\n                          chips\n                          deletable-chips\n                          multiple\n                          label=\"Select GPIOS as outputs\"\n                          class=\"ml-3 mt-3 mb-6\"\n                        >\n                          <template v-slot:item=\"{ item, on, attrs }\">\n                            <v-list-item v-on=\"on\" v-bind=\"attrs\">\n                              <v-list-item-content>\n                                <v-list-item-title>\n                                  <v-chip dark color=\"primary\">\n                                    {{ item }}\n                                  </v-chip>\n                                </v-list-item-title>\n                              </v-list-item-content>\n                            </v-list-item>\n                          </template>\n                        </v-autocomplete>\n                      </v-row>\n                    </div>\n\n                    <div>\n                      <h2>Enable</h2>\n                      <v-switch v-model=\"enable_switch\"></v-switch>\n                    </div>\n\n                    <v-btn @click=\"onExport\">Export</v-btn>\n\n                    <v-textarea v-model=\"editorJSON\"></v-textarea>\n                    <v-btn @click=\"onEditorSync\">Sync</v-btn>\n                    <v-btn @click=\"onEditorImport\">Import</v-btn>\n                  </v-col>\n                  <v-col md=\"10\">\n                    <ReteEditor v-model=\"editor\" />\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-dialog>\n\n          <v-dialog v-model=\"dialogDelete\" max-width=\"573px\">\n            <v-card>\n              <v-card-title class=\"text-h5\"\n                >Are you sure you want to delete this automation?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.state`]=\"{ item }\">\n        <v-switch\n          v-model=\"item.state\"\n          hide-details\n          class=\"ma-0 pa-0\"\n        ></v-switch>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n        <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport ReteEditor from \"@/components/rete/ReteEditor\";\n\nexport default {\n  name: \"AutoChips\",\n  components: {\n    ReteEditor,\n  },\n\n  data() {\n    return {\n      enable_switch: true,\n    };\n  },\n  data: () => ({\n    gpios: [\n      \"GPIO 1\",\n      \"GPIO 2\",\n      \"GPIO 3\",\n      \"GPIO 4\",\n      \"GPIO 5\",\n      \"GPIO 6\",\n      \"GPIO 7\",\n      \"GPIO 8\",\n      \"GPIO 9\",\n      \"GPIO 10\",\n      \"GPIO 11\",\n      \"GPIO 12\",\n      \"GPIO 13\",\n      \"GPIO 14\",\n      \"GPIO 15\",\n      \"GPIO 16\",\n      \"GPIO 17\",\n      \"GPIO 18\",\n      \"GPIO 19\",\n      \"GPIO 20\",\n      \"GPIO 21\",\n      \"GPIO 22\",\n      \"GPIO 23\",\n      \"GPIO 24\",\n      \"GPIO 25\",\n      \"GPIO 26\",\n    ],\n    gpiosValues: [],\n    value: null,\n\n    items: [\n      {\n        title: \"Logout\",\n        icon: \"mdi-logout\",\n        click() {\n          console.log(\"logout\");\n          this.$router.push(\"/\");\n        },\n      },\n      {\n        title: \"Dashboard\",\n        icon: \"mdi-view-dashboard\",\n        click() {\n          console.log(\"dashboard\");\n          this.$router.push(\"dashboard\");\n        },\n      },\n      {\n        title: \"Settings\",\n        icon: \"mdi-cogs\",\n        click() {\n          console.log(\"settings\");\n          this.$router.push(\"settings\");\n        },\n      },\n    ],\n\n    dates: [],\n\n    time1: null,\n    time2: null,\n    menuStart: false,\n    menuEnd: false,\n    menu1: null,\n    menu2: null,\n\n    enable_switch: false, \n\n    AutomationName: \"\",\n    dialog: false,\n    rule_dialog: false,\n    dialogDelete: false,\n\n\n    headers: [\n      {\n        text: \"\",\n        value: \"state\",\n        sortable: false,\n        width: 0,\n      },\n      {\n        text: \"Name\",\n        align: \"start\",\n        value: \"name\",\n      },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    automations: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n      rule: 0,\n      gpio: 0,\n      state: false,\n    },\n\n    defaultItem: {\n      name: \"\",\n      rule: 0,\n      gpio: 0,\n      state: false,\n    },\n\n    editor: null,\n    editorJSON: \"\",\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Automation\" : \"Edit Automation\";\n    },\n    dateRangeText() {\n      return this.dates.join(\" ~ \");\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  async mounted() {\n    this.initialize();\n  },\n\n  methods: {\n    async createNodeClick() {},\n    handleClick(index) {\n      this.items[index].click.call(this);\n    },\n    clickLogo() {\n      this.$router.push(\"dashboard\");\n    },\n\n    initialize() {\n      this.automations = [\n        {\n          name: \"Automation 1\",\n          state: false,\n        },\n        {\n          name: \"Automation 2\",\n          state: false,\n        },\n        {\n          name: \"Automation 3\",\n          state: false,\n        },\n        {\n          name: \"Automation 4\",\n          state: false,\n        },\n        {\n          name: \"Automation 5\",\n          state: false,\n        },\n        {\n          name: \"Automation 6\",\n          state: false,\n        },\n        {\n          name: \"Automation 7\",\n          state: false,\n        },\n      ];\n    },\n\n    editItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.automations.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.automations[this.editedIndex], this.editedItem);\n      } else {\n        this.automations.push(this.editedItem);\n      }\n\n      const automation = {\n        name: this.AutomationName,\n        StartTime: \"1996-10-15T00:05:32.000Z\",\n        EndTime: \"1997-10-15T00:05:32.000Z\",\n        Enable: enable_switch.toString(),\n        GPIOS: { GPIO1: 1, GPIO2: 2 },\n        NEW: true,\n      };\n      const file = JSON.stringify(automation);\n\n      console.log(file);\n\n      this.close();\n    },\n\n    async onExport() {\n      const editor = this.editor;\n\n      const endNode = this.editor.nodes.find((node) => node.name === \"End\");\n      const endComponent = editor.getComponent(\"End\");\n\n      console.log(JSON.stringify(endComponent.toJsonLogic?.(endNode)));\n    },\n\n    async onEditorImport() {\n      await this.editor.fromJSON(JSON.parse(this.editorJSON));\n    },\n\n    async onEditorSync() {\n      this.editorJSON = JSON.stringify(await this.editor.toJSON());\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}