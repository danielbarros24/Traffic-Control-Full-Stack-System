{"ast":null,"code":"import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\nimport { TimeControl } from \"@/node-editor/controls/TimeControl/TimeControl\";\nimport { SelectControl } from \"@/node-editor/controls/SelectControl/SelectControl\";\nexport class FlowComponent extends Rete.Component {\n  constructor() {\n    super(\"Flow\");\n  }\n\n  builder(node) {\n    var out1 = new Rete.Output('num', \"Out\", Socket.number);\n    return node.addControl(new SelectControl(this.editor, 'type1', [{\n      text: 'Sensor 1 - Route 1',\n      value: 'T1-1'\n    }, {\n      text: 'Sensor 1 - Route 2',\n      value: 'T1-2'\n    }], \"Zone\")).addControl(new SelectControl(this.editor, 'type', [{\n      text: 'All',\n      value: 'ALL'\n    }, {\n      text: 'Car',\n      value: 'CAR'\n    }, {\n      text: 'Truck',\n      value: 'TRUCK'\n    }, {\n      text: 'Motocycle',\n      value: 'MOTO'\n    }], \"Vehicle Type\")).addControl(new TimeControl(this.editor, 'str')).addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs['num'] = node.data.num;\n  }\n\n  toJsonLogic(node) {\n    const zone = node.data.type1;\n    const vehicleType = node.data.type;\n    const duration = node.data.str;\n    return {\n      \"flow\": [zone, vehicleType, duration]\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/FlowComponent.js"],"names":["Rete","Socket","TimeControl","SelectControl","FlowComponent","Component","constructor","builder","node","out1","Output","number","addControl","editor","text","value","addOutput","worker","inputs","outputs","data","num","toJsonLogic","zone","type1","vehicleType","type","duration","str"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AAEA,SAASC,WAAT,QAA4B,gDAA5B;AACA,SAASC,aAAT,QAA8B,oDAA9B;AAEA,OAAO,MAAMC,aAAN,SAA4BJ,IAAI,CAACK,SAAjC,CAA2C;AAC9CC,EAAAA,WAAW,GAAE;AACT,UAAM,MAAN;AACH;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAO;AAEV,QAAIC,IAAI,GAAG,IAAIT,IAAI,CAACU,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8BT,MAAM,CAACU,MAArC,CAAX;AAEA,WAAOH,IAAI,CAERI,UAFI,CAEO,IAAIT,aAAJ,CAAkB,KAAKU,MAAvB,EAA+B,OAA/B,EAAwC,CAChD;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KADgD,EAEhD;AAAED,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAFgD,CAAxC,EAGT,MAHS,CAFP,EAMJH,UANI,CAMO,IAAIT,aAAJ,CAAkB,KAAKU,MAAvB,EAA+B,MAA/B,EAAuC,CACjD;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADiD,EAEjD;AAAED,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAFiD,EAGjD;AAAED,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAHiD,EAIjD;AAAED,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAJiD,CAAvC,EAKT,cALS,CANP,EAYJH,UAZI,CAYO,IAAIV,WAAJ,CAAgB,KAAKW,MAArB,EAA6B,KAA7B,CAZP,EAaJG,SAbI,CAaMP,IAbN,CAAP;AAcH;;AAEDQ,EAAAA,MAAM,CAACT,IAAD,EAAOU,MAAP,EAAeC,OAAf,EAAwB;AAC1BA,IAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBX,IAAI,CAACY,IAAL,CAAUC,GAA3B;AACH;;AACDC,EAAAA,WAAW,CAACd,IAAD,EAAO;AACd,UAAMe,IAAI,GAAGf,IAAI,CAACY,IAAL,CAAUI,KAAvB;AACA,UAAMC,WAAW,GAAGjB,IAAI,CAACY,IAAL,CAAUM,IAA9B;AACA,UAAMC,QAAQ,GAAGnB,IAAI,CAACY,IAAL,CAAUQ,GAA3B;AAEA,WAAO;AACH,cAAQ,CAAEL,IAAF,EAAQE,WAAR,EAAqBE,QAArB;AADL,KAAP;AAGH;;AApC6C","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\n\nimport { TimeControl } from \"@/node-editor/controls/TimeControl/TimeControl\";\nimport { SelectControl } from \"@/node-editor/controls/SelectControl/SelectControl\";\n\nexport class FlowComponent extends Rete.Component {\n    constructor(){\n        super(\"Flow\");\n    }\n\n    builder(node) {\n        \n        var out1 = new Rete.Output('num', \"Out\", Socket.number);\n\n        return node\n\n          .addControl(new SelectControl(this.editor, 'type1', [\n              { text: 'Sensor 1 - Route 1', value: 'T1-1' },\n              { text: 'Sensor 1 - Route 2', value: 'T1-2' }\n          ], \"Zone\"))\n          .addControl(new SelectControl(this.editor, 'type', [\n            { text: 'All', value: 'ALL' },\n            { text: 'Car', value: 'CAR' },\n            { text: 'Truck', value: 'TRUCK' },\n            { text: 'Motocycle', value: 'MOTO' }\n          ], \"Vehicle Type\"))\n          .addControl(new TimeControl(this.editor, 'str'))\n          .addOutput(out1);\n    }\n\n    worker(node, inputs, outputs) {\n        outputs['num'] = node.data.num;\n    }\n    toJsonLogic(node) {\n        const zone = node.data.type1;\n        const vehicleType = node.data.type;\n        const duration = node.data.str;\n\n        return {\n            \"flow\": [ zone, vehicleType, duration ]\n        }  \n    }\n}"]},"metadata":{},"sourceType":"module"}