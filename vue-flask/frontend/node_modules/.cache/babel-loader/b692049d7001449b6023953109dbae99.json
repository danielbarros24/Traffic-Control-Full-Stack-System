{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      valid: true,\n      invalidCredentials: false\n    };\n  },\n  props: {\n    source: String\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations([\"setUser\", \"setToken\"])), {}, {\n    postData: function postData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, urlDesktop, urlRasp, response, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$refs.form.validate();\n\n                postData = {\n                  username: _this.username,\n                  password: _this.password\n                };\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:8080\";\n                _context.next = 6;\n                return fetch(\"http://\".concat(urlDesktop, \"/login\"), {\n                  method: \"POST\",\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;charset=utf-8'\n                  },\n                  body: JSON.stringify(postData)\n                });\n\n              case 6:\n                response = _context.sent;\n                _context.next = 9;\n                return response.json();\n\n              case 9:\n                data = _context.sent;\n\n                if (data.user == username) {\n                  _this.setUser(data.user);\n\n                  _this.setToken(data.token);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    clearPostOutput: function clearPostOutput() {\n      this.postResult = null;\n    }\n  }),\n  mounted: function mounted() {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AAEA;AACAA;AAAA;AACAC,kBADA;AAEAC,kBAFA;AAGAC,iBAHA;AAIAC;AAJA;AAAA,GADA;AAOAC;AACAC;AADA,GAPA;AAWAC,2CACAC,qCADA;AAGAC,YAHA,sBAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACAA,wBAFA,GAEA;AACAR,0CADA;AAEAC;AAFA,iBAFA;AAOAQ,0BAPA,GAOA,gBAPA;AAQAC,uBARA,GAQA,oBARA;AAAA;AAAA,uBAUAC;AACAC,gCADA;AAEAC;AACA,gDADA;AAEA;AAFA,mBAFA;AAMAC;AANA,kBAVA;;AAAA;AAUAC,wBAVA;AAAA;AAAA,uBAkBAA,eAlBA;;AAAA;AAkBAhB,oBAlBA;;AAmBA;AACA;;AACA;AACA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA,KA5BA;AA6BAiB,mBA7BA,6BA6BA;AACA;AACA;AA/BA,IAXA;AA6CAC,SA7CA,qBA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA","names":["data","username","password","valid","invalidCredentials","props","source","methods","mapMutations","postData","urlDesktop","urlRasp","fetch","method","headers","body","response","clearPostOutput","mounted"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-main>\n      <v-container class=\"fill-height\">\n        <v-row align=\"center\" justify=\"center\">\n          <v-col cols=\"7\" md=\"4\">\n            <v-card class=\"elevation-12\">\n              <v-window>\n                  <v-card-text class=\"pt-9 pl-10 pr-16 pb-10\" flat>\n                    <v-img\n                      class=\"mb-12 mx-auto text-center\"\n                      src=\"../assets/logo.png\"\n                      max-height=\"160\"\n                      max-width=\"160\"\n                    ></v-img>\n\n                    <v-form ref=\"form\"\n                      v-model=\"valid\"\n                      lazy-validation>\n                      <v-text-field\n                        v-model=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        prepend-icon=\"mdi-account\"\n                        type=\"text\"\n                        color=\"primary\"\n                        required\n                        :rules=\"[v => !!v || 'You must type username!']\"\n                      />\n                      <v-text-field\n                        v-model=\"password\"\n                        id=\"password\"\n                        label=\"Password\"\n                        name=\"password\"\n                        prepend-icon=\"key\"\n                        type=\"password\"\n                        color=\"primary\"\n                        :rules=\"[v => !!v || 'You must type password!']\"\n                      />\n                      <v-btn @click=\"postData\" rounded color=\"primary\" class=\"mt-4\" block dark \n                      >SIGN IN</v-btn\n                    >\n                    <p class=\"red--text mt-3 mr-6\" v-show=\"invalidCredentials\" >\n                      Invalid Credentials!\n                    </p>\n                    </v-form>\n\n                  </v-card-text>\n              </v-window>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { mapMutations } from \"vuex\";\n\nexport default {\n  data: () => ({\n    username:'',\n    password:'',\n    valid: true,\n    invalidCredentials: false,\n  }),\n  props: {\n    source: String,\n  },\n\n  methods:{\n    ...mapMutations([\"setUser\", \"setToken\"]),\n\n    async postData() {\n      this.$refs.form.validate()\n      const postData = {\n        username: this.username,\n        password: this.password,\n      }\n\n        const urlDesktop = \"127.0.0.1:5000\"\n        const urlRasp = \"192.168.1.216:8080\"\n        \n        const response = await fetch(`http://${urlDesktop}/login`, {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=utf-8'\n          },\n          body: JSON.stringify(postData),\n        })\n        const data = await response.json();\n        if (data.user == username) {\n          this.setUser(data.user);\n          this.setToken(data.token);\n        }\n        \n\n    },\n    clearPostOutput() {\n      this.postResult = null;\n    },\n  },\n\n  async mounted() {}\n};\n\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}