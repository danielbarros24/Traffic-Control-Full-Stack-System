{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.url.to-json.js\";\n//\n//\n//\n//\n//\n//\n//\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\nimport ReteNumControl from './ReteNumControl';\nexport default {\n  data: function data() {\n    return {\n      editor: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var numSocket, vehileSocket, roadSocket, NumControl, EndComponent, StartComponent, TimeComponent, TempoDePermanenciaComponent, FluxoComponent, NumeroDeVeiculosComponent, FilaComponent, TipoDeVeiculoComponent, AddComponent, MultiplyComponent, DivisionComponent, EqualToComponent, DifferentThanComponent, GreaterThanComponent, LessThanComponent, GreaterThanOrEqualToComponent, LessThanOrEqualToComponent, ANDComponent, ORComponent, NOTComponent, container, components, editor, engine, n1, n2, add, sub;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              numSocket = new Socket('num');\n              vehileSocket = new Socket('vehicle');\n              roadSocket = new Socket('road');\n\n              NumControl = /*#__PURE__*/function (_Control) {\n                _inherits(NumControl, _Control);\n\n                var _super = _createSuper(NumControl);\n\n                function NumControl(emitter, key, readonly) {\n                  var _this2;\n\n                  _classCallCheck(this, NumControl);\n\n                  _this2 = _super.call(this, key);\n                  _this2.component = ReteNumControl;\n                  _this2.props = {\n                    emitter: emitter,\n                    ikey: key,\n                    readonly: readonly\n                  };\n                  return _this2;\n                }\n\n                _createClass(NumControl, [{\n                  key: \"setValue\",\n                  value: function setValue(val) {\n                    this.vueContext.value = val;\n                  }\n                }]);\n\n                return NumControl;\n              }(Control);\n\n              EndComponent = /*#__PURE__*/function (_Component) {\n                _inherits(EndComponent, _Component);\n\n                var _super2 = _createSuper(EndComponent);\n\n                function EndComponent() {\n                  _classCallCheck(this, EndComponent);\n\n                  return _super2.call(this, \"End\");\n                }\n\n                _createClass(EndComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"In\", numSocket);\n                    return node.addInput(inp1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return EndComponent;\n              }(Component);\n\n              StartComponent = /*#__PURE__*/function (_Component2) {\n                _inherits(StartComponent, _Component2);\n\n                var _super3 = _createSuper(StartComponent);\n\n                function StartComponent() {\n                  _classCallCheck(this, StartComponent);\n\n                  return _super3.call(this, \"Start\");\n                }\n\n                _createClass(StartComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Out\", numSocket);\n                    return node.addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return StartComponent;\n              }(Component);\n\n              TimeComponent = /*#__PURE__*/function (_Component3) {\n                _inherits(TimeComponent, _Component3);\n\n                var _super4 = _createSuper(TimeComponent);\n\n                function TimeComponent() {\n                  _classCallCheck(this, TimeComponent);\n\n                  return _super4.call(this, \"Tempo\");\n                }\n\n                _createClass(TimeComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Out\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return TimeComponent;\n              }(Component);\n\n              TempoDePermanenciaComponent = /*#__PURE__*/function (_Component4) {\n                _inherits(TempoDePermanenciaComponent, _Component4);\n\n                var _super5 = _createSuper(TempoDePermanenciaComponent);\n\n                function TempoDePermanenciaComponent() {\n                  _classCallCheck(this, TempoDePermanenciaComponent);\n\n                  return _super5.call(this, \"Tempo de permanência\");\n                }\n\n                _createClass(TempoDePermanenciaComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('str', \"vehicle\", vehileSocket);\n                    var inp2 = new Input('num', \"In\", numSocket);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp2).addInput(inp1).addControl(new NumControl(this.editor, 'num')).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return TempoDePermanenciaComponent;\n              }(Component);\n\n              FluxoComponent = /*#__PURE__*/function (_Component5) {\n                _inherits(FluxoComponent, _Component5);\n\n                var _super6 = _createSuper(FluxoComponent);\n\n                function FluxoComponent() {\n                  _classCallCheck(this, FluxoComponent);\n\n                  return _super6.call(this, \"Fluxo\");\n                }\n\n                _createClass(FluxoComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"In\", numSocket);\n                    var out1 = new Output('Out', \"Out\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return FluxoComponent;\n              }(Component);\n\n              NumeroDeVeiculosComponent = /*#__PURE__*/function (_Component6) {\n                _inherits(NumeroDeVeiculosComponent, _Component6);\n\n                var _super7 = _createSuper(NumeroDeVeiculosComponent);\n\n                function NumeroDeVeiculosComponent() {\n                  _classCallCheck(this, NumeroDeVeiculosComponent);\n\n                  return _super7.call(this, \"Número de veículos\");\n                }\n\n                _createClass(NumeroDeVeiculosComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Out\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return NumeroDeVeiculosComponent;\n              }(Component);\n\n              FilaComponent = /*#__PURE__*/function (_Component7) {\n                _inherits(FilaComponent, _Component7);\n\n                var _super8 = _createSuper(FilaComponent);\n\n                function FilaComponent() {\n                  _classCallCheck(this, FilaComponent);\n\n                  return _super8.call(this, \"Fila\");\n                }\n\n                _createClass(FilaComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Out\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'Road')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return FilaComponent;\n              }(Component);\n\n              TipoDeVeiculoComponent = /*#__PURE__*/function (_Component8) {\n                _inherits(TipoDeVeiculoComponent, _Component8);\n\n                var _super9 = _createSuper(TipoDeVeiculoComponent);\n\n                function TipoDeVeiculoComponent() {\n                  _classCallCheck(this, TipoDeVeiculoComponent);\n\n                  return _super9.call(this, \"Tipo de Veículo\");\n                }\n\n                _createClass(TipoDeVeiculoComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('str', \"Out\", vehileSocket);\n                    return node.addControl(new NumControl(this.editor, 'Road')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return TipoDeVeiculoComponent;\n              }(Component);\n\n              AddComponent = /*#__PURE__*/function (_Component9) {\n                _inherits(AddComponent, _Component9);\n\n                var _super10 = _createSuper(AddComponent);\n\n                function AddComponent() {\n                  _classCallCheck(this, AddComponent);\n\n                  return _super10.call(this, \"+\");\n                }\n\n                _createClass(AddComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum + a;\n                    }, 0);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return AddComponent;\n              }(Component);\n\n              MultiplyComponent = /*#__PURE__*/function (_Component10) {\n                _inherits(MultiplyComponent, _Component10);\n\n                var _super11 = _createSuper(MultiplyComponent);\n\n                function MultiplyComponent() {\n                  _classCallCheck(this, MultiplyComponent);\n\n                  return _super11.call(this, \"x\");\n                }\n\n                _createClass(MultiplyComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum * a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return MultiplyComponent;\n              }(Component);\n\n              DivisionComponent = /*#__PURE__*/function (_Component11) {\n                _inherits(DivisionComponent, _Component11);\n\n                var _super12 = _createSuper(DivisionComponent);\n\n                function DivisionComponent() {\n                  _classCallCheck(this, DivisionComponent);\n\n                  return _super12.call(this, \"/\");\n                }\n\n                _createClass(DivisionComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return DivisionComponent;\n              }(Component);\n\n              EqualToComponent = /*#__PURE__*/function (_Component12) {\n                _inherits(EqualToComponent, _Component12);\n\n                var _super13 = _createSuper(EqualToComponent);\n\n                function EqualToComponent() {\n                  _classCallCheck(this, EqualToComponent);\n\n                  return _super13.call(this, \"=\");\n                }\n\n                _createClass(EqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return EqualToComponent;\n              }(Component);\n\n              DifferentThanComponent = /*#__PURE__*/function (_Component13) {\n                _inherits(DifferentThanComponent, _Component13);\n\n                var _super14 = _createSuper(DifferentThanComponent);\n\n                function DifferentThanComponent() {\n                  _classCallCheck(this, DifferentThanComponent);\n\n                  return _super14.call(this, \"!=\");\n                }\n\n                _createClass(DifferentThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return DifferentThanComponent;\n              }(Component);\n\n              GreaterThanComponent = /*#__PURE__*/function (_Component14) {\n                _inherits(GreaterThanComponent, _Component14);\n\n                var _super15 = _createSuper(GreaterThanComponent);\n\n                function GreaterThanComponent() {\n                  _classCallCheck(this, GreaterThanComponent);\n\n                  return _super15.call(this, \">\");\n                }\n\n                _createClass(GreaterThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return GreaterThanComponent;\n              }(Component);\n\n              LessThanComponent = /*#__PURE__*/function (_Component15) {\n                _inherits(LessThanComponent, _Component15);\n\n                var _super16 = _createSuper(LessThanComponent);\n\n                function LessThanComponent() {\n                  _classCallCheck(this, LessThanComponent);\n\n                  return _super16.call(this, \"<\");\n                }\n\n                _createClass(LessThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return LessThanComponent;\n              }(Component);\n\n              GreaterThanOrEqualToComponent = /*#__PURE__*/function (_Component16) {\n                _inherits(GreaterThanOrEqualToComponent, _Component16);\n\n                var _super17 = _createSuper(GreaterThanOrEqualToComponent);\n\n                function GreaterThanOrEqualToComponent() {\n                  _classCallCheck(this, GreaterThanOrEqualToComponent);\n\n                  return _super17.call(this, \">=\");\n                }\n\n                _createClass(GreaterThanOrEqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return GreaterThanOrEqualToComponent;\n              }(Component);\n\n              LessThanOrEqualToComponent = /*#__PURE__*/function (_Component17) {\n                _inherits(LessThanOrEqualToComponent, _Component17);\n\n                var _super18 = _createSuper(LessThanOrEqualToComponent);\n\n                function LessThanOrEqualToComponent() {\n                  _classCallCheck(this, LessThanOrEqualToComponent);\n\n                  return _super18.call(this, \"<=\");\n                }\n\n                _createClass(LessThanOrEqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return LessThanOrEqualToComponent;\n              }(Component);\n\n              ANDComponent = /*#__PURE__*/function (_Component18) {\n                _inherits(ANDComponent, _Component18);\n\n                var _super19 = _createSuper(ANDComponent);\n\n                function ANDComponent() {\n                  _classCallCheck(this, ANDComponent);\n\n                  return _super19.call(this, \"AND\");\n                }\n\n                _createClass(ANDComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return ANDComponent;\n              }(Component);\n\n              ORComponent = /*#__PURE__*/function (_Component19) {\n                _inherits(ORComponent, _Component19);\n\n                var _super20 = _createSuper(ORComponent);\n\n                function ORComponent() {\n                  _classCallCheck(this, ORComponent);\n\n                  return _super20.call(this, \"OR\");\n                }\n\n                _createClass(ORComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return ORComponent;\n              }(Component);\n\n              NOTComponent = /*#__PURE__*/function (_Component20) {\n                _inherits(NOTComponent, _Component20);\n\n                var _super21 = _createSuper(NOTComponent);\n\n                function NOTComponent() {\n                  _classCallCheck(this, NOTComponent);\n\n                  return _super21.call(this, \"NOT\");\n                }\n\n                _createClass(NOTComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Input\", numSocket, true);\n                    var out = new Output('num', \"Out\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return NOTComponent;\n              }(Component);\n\n              container = _this.$refs.nodeEditor;\n              components = [new StartComponent(), new TimeComponent(), new TempoDePermanenciaComponent(), new FluxoComponent(), new NumeroDeVeiculosComponent(), new TipoDeVeiculoComponent(), new FilaComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent(), new DifferentThanComponent(), new GreaterThanComponent(), new LessThanComponent(), new GreaterThanOrEqualToComponent(), new LessThanOrEqualToComponent(), new ANDComponent(), new ORComponent(), new NOTComponent(), new EndComponent()];\n              editor = new NodeEditor('demo@0.1.0', container);\n              editor.use(ConnectionPlugin);\n              editor.use(VueRenderPlugin);\n              editor.use(ContextMenuPlugin);\n              editor.use(AreaPlugin);\n              editor.use(KeyboardPlugin);\n              engine = new Engine('demo@0.1.0');\n              components.map(function (c) {\n                editor.register(c);\n                engine.register(c);\n              });\n              _context2.next = 36;\n              return components[0].createNode({\n                num: 2\n              });\n\n            case 36:\n              n1 = _context2.sent;\n              _context2.next = 39;\n              return components[0].createNode({\n                num: 0\n              });\n\n            case 39:\n              n2 = _context2.sent;\n              _context2.next = 42;\n              return components[1].createNode();\n\n            case 42:\n              add = _context2.sent;\n              _context2.next = 45;\n              return components[2].createNode();\n\n            case 45:\n              sub = _context2.sent;\n              n1.position = [80, 200];\n              n2.position = [80, 400];\n              add.position = [500, 240];\n              sub.position = [800, 240];\n              editor.on('process nodecreated noderemoved connectioncreated connectionremoved', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log('process');\n                        _context.next = 3;\n                        return engine.abort();\n\n                      case 3:\n                        _context.next = 5;\n                        return engine.process(editor.toJSON());\n\n                      case 5:\n                        console.log(editor.toJSON());\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              editor.view.resize();\n              AreaPlugin.zoomAt(editor);\n              editor.trigger('process');\n\n            case 54:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["data","editor","mounted","numSocket","vehileSocket","roadSocket","NumControl","emitter","ikey","readonly","Control","EndComponent","addInput","inp1","outputs","Component","StartComponent","addOutput","out1","TimeComponent","addControl","TempoDePermanenciaComponent","inp2","out","FluxoComponent","NumeroDeVeiculosComponent","FilaComponent","TipoDeVeiculoComponent","AddComponent","MultiplyComponent","DivisionComponent","EqualToComponent","DifferentThanComponent","GreaterThanComponent","LessThanComponent","GreaterThanOrEqualToComponent","LessThanOrEqualToComponent","ANDComponent","ORComponent","NOTComponent","container","components","engine","num","n1","n2","add","sub","console","AreaPlugin"],"sourceRoot":"src/components/rete","sources":["ReteEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\"><div class=\"node-editor\" ref=\"nodeEditor\"></div></div>\n    <canvas id=\"canvasOutput\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\n\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\n\nimport ReteNumControl from './ReteNumControl'\n\nexport default {\n  data() {\n    return {\n      editor: null\n    };\n  },\n\n  async mounted() {\n    var numSocket = new Socket('num');\n    var vehileSocket = new Socket('vehicle');\n    var roadSocket = new Socket('road');\n\n    class NumControl extends Control {\n      constructor(emitter, key, readonly) {\n        super(key);\n        \n        this.component = ReteNumControl;\n        this.props = { emitter, ikey: key, readonly };\n      }\n\n      setValue(val) {\n        this.vueContext.value = val;\n      }\n    }\n\n    class EndComponent extends Component {\n        constructor(){\n            super(\"End\");\n        }\n\n        builder(node) {\n            var inp1 = new Input('num', \"In\", numSocket);\n            return node\n              .addInput(inp1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class StartComponent extends Component {\n        constructor(){\n            super(\"Start\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Out\", numSocket);\n            return node\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class TimeComponent extends Component {\n        constructor(){\n            super(\"Tempo\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Out\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class TempoDePermanenciaComponent extends Component {\n        constructor(){\n            super(\"Tempo de permanência\");\n        }\n\n        builder(node) {\n            var inp1 = new Input('str', \"vehicle\", vehileSocket);\n            var inp2 = new Input('num', \"In\", numSocket);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n\n                .addInput(inp2)\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'num'))\n                .addOutput(out);\n        }\n\n        worker(node, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class FluxoComponent extends Component {\n        constructor(){\n            super(\"Fluxo\");\n        }\n\n        builder(node) {\n\n            var inp1 = new Input('num', \"In\", numSocket);\n            var out1 = new Output('Out', \"Out\", numSocket);\n\n            return node\n\n              .addInput(inp1)\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class NumeroDeVeiculosComponent extends Component {\n        constructor(){\n            super(\"Número de veículos\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Out\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class FilaComponent extends Component {\n        constructor(){\n            super(\"Fila\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Out\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'Road'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class TipoDeVeiculoComponent extends Component {\n        constructor(){\n            super(\"Tipo de Veículo\");\n        }\n\n        builder(node) {\n            var out1 = new Output('str', \"Out\", vehileSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'Road'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class AddComponent extends Component {\n        constructor(){\n            super(\"+\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) => partialSum + a, 0);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class MultiplyComponent extends Component {\n        constructor(){\n            super(\"x\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum * a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class DivisionComponent extends Component {\n        constructor(){\n            super(\"/\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class EqualToComponent extends Component {\n        constructor(){\n            super(\"=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class DifferentThanComponent extends Component {\n        constructor(){\n            super(\"!=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class GreaterThanComponent extends Component {\n        constructor(){\n            super(\">\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class LessThanComponent extends Component {\n        constructor(){\n            super(\"<\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class GreaterThanOrEqualToComponent extends Component {\n        constructor(){\n            super(\">=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class LessThanOrEqualToComponent extends Component {\n        constructor(){\n            super(\"<=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class ANDComponent extends Component {\n        constructor(){\n            super(\"AND\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class ORComponent extends Component {\n        constructor(){\n            super(\"OR\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class NOTComponent extends Component {\n        constructor(){\n            super(\"NOT\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Input\", numSocket, true);\n            var out = new Output('num', \"Out\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n    \n\n    var container = this.$refs.nodeEditor\n    var components = [new StartComponent(), new TimeComponent(), new TempoDePermanenciaComponent(), new FluxoComponent(), new NumeroDeVeiculosComponent(), new TipoDeVeiculoComponent(),\n      new FilaComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent(), \n      new DifferentThanComponent(), new GreaterThanComponent(), new LessThanComponent(), new GreaterThanOrEqualToComponent(), new LessThanOrEqualToComponent(), \n      new ANDComponent(), new ORComponent(), new NOTComponent(), new EndComponent()];\n    var editor = new NodeEditor('demo@0.1.0', container);\n\n    editor.use(ConnectionPlugin);\n    editor.use(VueRenderPlugin);\n    editor.use(ContextMenuPlugin);\n    editor.use(AreaPlugin);\n    editor.use(KeyboardPlugin);\n\n    var engine = new Engine('demo@0.1.0');\n    components.map(c => {\n        editor.register(c);\n        engine.register(c);\n    });\n\n    var n1 = await components[0].createNode({num: 2});\n    var n2 = await components[0].createNode({num: 0});\n    var add = await components[1].createNode();\n    var sub = await components[2].createNode();\n    \n\n    n1.position = [80, 200];\n    n2.position = [80, 400];\n    add.position = [500, 240];\n    sub.position = [800, 240];\n\n    editor.on('process nodecreated noderemoved connectioncreated connectionremoved', async () => {\n      console.log('process');\n        await engine.abort();\n        await engine.process(editor.toJSON());\n        console.log(editor.toJSON())\n    });\n    \n    editor.view.resize();\n    AreaPlugin.zoomAt(editor);\n    editor.trigger('process');\n  }\n};\n</script>\n\n<style>\n.node-editor {\n  text-align: left;\n  overflow: hidden;\n}\n.node .control input, .node .input-control input {\n  width: 140px;\n}\nselect, input {\n  width: 100%;\n  border-radius: 30px;\n  background-color: white;\n  padding: 2px 6px;\n  border: 1px solid #999;\n  font-size: 110%;\n  width: 170px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}