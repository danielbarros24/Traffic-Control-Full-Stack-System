{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      valid_time: true,\n      radioGroup: 1,\n      nameRules: [function (v) {\n        return !!v;\n      }],\n      dateRules: [function (v) {\n        return !!v || \"Insert 2 dates\";\n      }, function (v) {\n        return /^\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])~\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/.test(v) || \"Insert 2 dates!\";\n      }],\n      charData: [{\n        name: \"Car Count\",\n        data: {\n          \"2017-01-01 10:30\": 3,\n          \"2017-01-02 11:30\": 4\n        }\n      }, {\n        name: \"Truck Count\",\n        data: {\n          \"2017-01-01 10:40\": 5,\n          \"2017-01-02 12:30\": 3\n        }\n      }],\n      items: [{\n        title: \"Logout\",\n        icon: \"mdi-logout\",\n        click: function click() {\n          //console.log(\"logout\");\n          this.$router.push(\"/\");\n        }\n      }, {\n        title: \"Processes\",\n        icon: \"mdi-auto-fix\",\n        click: function click() {\n          console.log(\"processes\");\n          this.$router.push(\"processes\");\n        }\n      }, {\n        title: \"Settings\",\n        icon: \"mdi-cogs\",\n        click: function click() {\n          console.log(\"settings\");\n          this.$router.push(\"settings\");\n        }\n      }],\n      editedItem: {\n        sensor: \"\",\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        task: \"\"\n      },\n      defaultItem: {\n        sensor: \"\",\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        task: \"\"\n      },\n      sensors: [],\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n      VehicleCountsGraph: false,\n      TrafficFlowAnalysisGraph: false,\n      NumberOfStayGraph: false,\n      PedestrianFlowGraph: false,\n      LenghtOfStayGraph: false\n    };\n  },\n  methods: {\n    getSensors: function getSensors() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var urlDesktop, urlRasp, responseSensors, sensors_res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:8080\";\n                _context.next = 4;\n                return fetch(\"http://\".concat(urlDesktop, \"/sensors\"));\n\n              case 4:\n                responseSensors = _context.sent;\n                _context.next = 7;\n                return responseSensors.json();\n\n              case 7:\n                sensors_res = _context.sent;\n                _this.sensors = sensors_res;\n                console.log(_this.sensors);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getData: function getData() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var urlDesktop, urlRasp, data_json, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:8080\";\n                _context2.next = 4;\n                return fetch(\"http://\".concat(urlDesktop, \"/sensors\"));\n\n              case 4:\n                data_json = _context2.sent;\n                _context2.next = 7;\n                return data_json.json();\n\n              case 7:\n                data = _context2.sent;\n                _this2.charData = data;\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleClick: function handleClick(index) {\n      this.items[index].click.call(this);\n    }\n  },\n  computed: {\n    dateRangeText: function dateRangeText() {\n      return this.editedItem.dates.join(\"~\");\n    }\n  },\n  mounted: function mounted() {\n    this.getSensors();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqQA;AACAA,MADA,kBACA;AACA;AACAC,sBADA;AAEAC,mBAFA;AAIAC;AAAA;AAAA,QAJA;AAKAC,kBACA;AAAA;AAAA,OADA,EAEA;AAAA,eACA,2GACAC,CADA,KAEA,iBAHA;AAAA,OAFA,CALA;AAaAC,iBACA;AAAAC;AAAAP;AAAA;AAAA;AAAA;AAAA,OADA,EAEA;AAAAO;AAAAP;AAAA;AAAA;AAAA;AAAA,OAFA,CAbA;AAiBAQ,cACA;AACAC,uBADA;AAEAC,0BAFA;AAGAC,aAHA,mBAGA;AACA;AACA;AACA;AANA,OADA,EASA;AACAF,0BADA;AAEAC,4BAFA;AAGAC,aAHA,mBAGA;AACAC;AACA;AACA;AANA,OATA,EAiBA;AACAH,yBADA;AAEAC,wBAFA;AAGAC,aAHA,mBAGA;AACAC;AACA;AACA;AANA,OAjBA,CAjBA;AA4CAC;AACAC,kBADA;AAEAC,iBAFA;AAGAC,qBAHA;AAIAC,mBAJA;AAKAC;AALA,OA5CA;AAoDAC;AACAL,kBADA;AAEAC,iBAFA;AAGAC,qBAHA;AAIAC,mBAJA;AAKAC;AALA,OApDA;AA2DAE,iBA3DA;AA6DAC,sBA7DA;AA8DAC,oBA9DA;AAgEAC,iBAhEA;AAiEAC,iBAjEA;AAmEAC,+BAnEA;AAoEAC,qCApEA;AAqEAC,8BArEA;AAsEAC,gCAtEA;AAuEAC;AAvEA;AAyEA,GA3EA;AA6EAC;AACAC,cADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,0BADA,GACA,gBADA;AAEAC,uBAFA,GAEA,oBAFA;AAAA;AAAA,uBAIAC,+CAJA;;AAAA;AAIAC,+BAJA;AAAA;AAAA,uBAKAA,sBALA;;AAAA;AAKAC,2BALA;AAMA;AACAxB;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAWAyB,WAXA,qBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAL,0BADA,GACA,gBADA;AAEAC,uBAFA,GAEA,oBAFA;AAAA;AAAA,uBAIAC,+CAJA;;AAAA;AAIAI,yBAJA;AAAA;AAAA,uBAKAA,gBALA;;AAAA;AAKAtC,oBALA;AAMA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAlBA;AAoBAuC,eApBA,uBAoBAC,KApBA,EAoBA;AACA;AACA;AAtBA,GA7EA;AAqGAC;AACAC,iBADA,2BACA;AACA;AACA;AAHA,GArGA;AA0GAC,SA1GA,qBA0GA;AACA;AACA;AA5GA","names":["data","valid_time","radioGroup","nameRules","dateRules","v","charData","name","items","title","icon","click","console","editedItem","sensor","dates","startHour","endHour","task","defaultItem","sensors","menuStart","menuEnd","menu1","menu2","VehicleCountsGraph","TrafficFlowAnalysisGraph","NumberOfStayGraph","PedestrianFlowGraph","LenghtOfStayGraph","methods","getSensors","urlDesktop","urlRasp","fetch","responseSensors","sensors_res","getData","data_json","handleClick","index","computed","dateRangeText","mounted"],"sourceRoot":"src/views","sources":["Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app-bar color=\"transparent\" dark elevation=\"0\">\n      <v-img\n        max-height=\"35\"\n        max-width=\"35\"\n        src=\"../assets/logo_simple.png\"\n      ></v-img>\n      <v-toolbar-title class=\"ml-4\">Dashboard</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-menu transition=\"slide-y-transition\" offset-y>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            @click=\"handleClick(index)\"\n          >\n            <v-list-item-icon>\n              <v-icon v-text=\"item.icon\"></v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n    <v-row no-gutters>\n      <v-col cols=\"1\" sm=\"3\" md=\"2\">\n        <v-card\n          class=\"d-flex ml-5 mt-13 pa-6\"\n          min-width=\"290\"\n          elevation=\"20\"\n          outlined\n        >\n          <v-card-text>\n            <h2 class=\"text-h6 text--primary\">Sensors</h2>\n            <v-radio-group v-model=\"radioGroup\" mandatory>\n              <v-radio\n                v-for=\"i in sensors\"\n                :key=\"i\"\n                :label=\"`${i.name}`\"\n                :value=\"i.id\"\n              ></v-radio>\n            </v-radio-group>\n\n            <div class=\"my-12\">\n              <v-form ref=\"form\" v-model=\"valid_time\">\n                <h2 class=\"text-h6 text--primary\">Time</h2>\n                <v-menu\n                  v-model=\"menu2\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  min-width=\"auto\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"dateRangeText\"\n                      label=\"Select date range\"\n                      prepend-icon=\"mdi-calendar\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      required\n                      :rules=\"dateRules\"\n                    ></v-text-field>\n                  </template>\n                  <v-date-picker\n                    v-model=\"editedItem.dates\"\n                    range\n                  ></v-date-picker>\n                </v-menu>\n                <v-menu\n                  ref=\"menu1\"\n                  v-model=\"menuStart\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  :return-value.sync=\"editedItem.startHour\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  max-width=\"290px\"\n                  min-width=\"290px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"editedItem.startHour\"\n                      label=\"Start Time\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      :rules=\"nameRules\"\n                      required\n                    ></v-text-field>\n                  </template>\n                  <v-time-picker\n                    v-if=\"menuStart\"\n                    v-model=\"editedItem.startHour\"\n                    format=\"24h\"\n                    scrollable\n                    full-width\n                    @click:minute=\"$refs.menu1.save(editedItem.startHour)\"\n                  ></v-time-picker>\n                </v-menu>\n\n                <v-menu\n                  ref=\"menu2\"\n                  v-model=\"menuEnd\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  :return-value.sync=\"editedItem.endHour\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  max-width=\"290px\"\n                  min-width=\"290px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"editedItem.endHour\"\n                      label=\"End Time\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      :rules=\"nameRules\"\n                      required\n                    ></v-text-field>\n                  </template>\n                  <v-time-picker\n                    v-if=\"menuEnd\"\n                    v-model=\"editedItem.endHour\"\n                    format=\"24h\"\n                    scrollable\n                    full-width\n                    @click:minute=\"$refs.menu2.save(editedItem.endHour)\"\n                  ></v-time-picker>\n                </v-menu>\n              </v-form>\n            </div>\n\n            <h2 class=\"text-h6 text--primary\">Indicators</h2>\n            <v-checkbox\n              v-on:click=\"VehicleCountsGraph = !VehicleCountsGraph\"\n              label=\"Vehicle Counts\"\n              value=\"Counts\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-on:click=\"NumberOfStayGraph = !NumberOfStayGraph\"\n              label=\"Number of Stay\"\n              value=\"Stay\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-on:click=\"LenghtOfStayGraph = !LenghtOfStayGraph\"\n              label=\"Length of Stay\"\n              value=\"length\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-on:click=\"TrafficFlowAnalysisGraph = !TrafficFlowAnalysisGraph\"\n              label=\"Traffic flow\"\n              value=\"Flow\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-on:click=\"PedestrianFlowGraph = !PedestrianFlowGraph\"\n              label=\"Pedestrian Flow\"\n              value=\"Pedestrian\"\n              hide-details\n            ></v-checkbox>\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <v-col cols=\"6\" md=\"10\" no-gutters class=\"mt-13\">\n        <v-row no-gutters max-height=\"320\">\n          <v-expand-transition>\n            <v-card\n              class=\"d-flex ml-3 mb-6 pa-6\"\n              width=\"1000\"\n              min-height=\"320\"\n              outlined\n            >\n              <area-chart\n                :data=\"charData\"\n                :colors=\"['#32a852', '#2ca7b0']\"\n                label=\"Vehicle Count\"\n                legend=\"bottom\"\n                :dataset=\"{ borderWidth: 2 }\"\n                :library=\"{ backgroundColor: '#0e2c2e' }\"\n              ></area-chart>\n            </v-card>\n          </v-expand-transition>\n          <v-expand-transition>\n            <v-card\n              class=\"d-flex ml-3 mb-6 pa-6\"\n              width=\"400\"\n              min-height=\"320\"\n              outlined\n              v-if=\"TrafficFlowAnalysisGraph\"\n            >\n            </v-card>\n          </v-expand-transition>\n        </v-row>\n\n        <v-row no-gutters max-height=\"320\">\n          <v-expand-transition>\n            <v-card\n              class=\"d-flex ml-3 pa-6\"\n              min-width=\"400\"\n              width=\"100\"\n              height=\"320\"\n              outlined\n              v-if=\"NumberOfStayGraph\"\n            >\n              <v-card-title class=\"text-center\">Number of Stay</v-card-title>\n            </v-card>\n          </v-expand-transition>\n\n          <v-expand-transition>\n            <v-card\n              class=\"d-flex ml-3 pa-6\"\n              min-width=\"400\"\n              width=\"700\"\n              height=\"320\"\n              outlined\n              v-if=\"PedestrianFlowGraph\"\n            >\n              <v-card-title class=\"text-center\">Pedestrian Flow</v-card-title>\n            </v-card>\n          </v-expand-transition>\n\n          <v-expand-transition>\n            <v-card\n              class=\"d-flex ml-3 pa-6\"\n              min-width=\"400\"\n              width=\"200\"\n              height=\"320\"\n              outlined\n              v-if=\"LenghtOfStayGraph\"\n            >\n              <v-card-title class=\"text-center\">Lenght of Stay</v-card-title>\n            </v-card>\n          </v-expand-transition>\n        </v-row>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      valid_time: true,\n      radioGroup: 1,\n\n      nameRules: [(v) => !!v],\n      dateRules: [\n        (v) => !!v || \"Insert 2 dates\",\n        (v) =>\n          /^\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])~\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/.test(\n            v\n          ) || \"Insert 2 dates!\",\n      ],\n\n      charData: [\n        { name: \"Car Count\", data: { \"2017-01-01 10:30\": 3, \"2017-01-02 11:30\": 4 } },\n        { name: \"Truck Count\", data: { \"2017-01-01 10:40\": 5, \"2017-01-02 12:30\": 3 } },\n      ],\n      items: [\n        {\n          title: \"Logout\",\n          icon: \"mdi-logout\",\n          click() {\n            //console.log(\"logout\");\n            this.$router.push(\"/\");\n          },\n        },\n        {\n          title: \"Processes\",\n          icon: \"mdi-auto-fix\",\n          click() {\n            console.log(\"processes\");\n            this.$router.push(\"processes\");\n          },\n        },\n        {\n          title: \"Settings\",\n          icon: \"mdi-cogs\",\n          click() {\n            console.log(\"settings\");\n            this.$router.push(\"settings\");\n          },\n        },\n      ],\n\n      editedItem: {\n        sensor: \"\",\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        task: \"\",\n      },\n\n      defaultItem: {\n        sensor: \"\",\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        task: \"\",\n      },\n      sensors: [],\n\n      menuStart: false,\n      menuEnd: false,\n\n      menu1: null,\n      menu2: null,\n\n      VehicleCountsGraph: false,\n      TrafficFlowAnalysisGraph: false,\n      NumberOfStayGraph: false,\n      PedestrianFlowGraph: false,\n      LenghtOfStayGraph: false,\n    };\n  },\n\n  methods: {\n    async getSensors() {\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:8080\";\n\n      const responseSensors = await fetch(`http://${urlDesktop}/sensors`);\n      const sensors_res = await responseSensors.json();\n      this.sensors = sensors_res;\n      console.log(this.sensors);\n    },\n\n    async getData() {\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:8080\";\n\n      const data_json = await fetch(`http://${urlDesktop}/sensors`);\n      const data = await data_json.json();\n      this.charData = data\n    },\n    \n    handleClick(index) {\n      this.items[index].click.call(this);\n    },\n  },\n  computed: {\n    dateRangeText() {\n      return this.editedItem.dates.join(\"~\");\n    },\n  },\n  mounted() {\n    this.getSensors();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}