{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: () => ({\n    username: '',\n    password: '',\n    valid: true,\n    invalidCredentials: false\n  }),\n  props: {\n    source: String\n  },\n  methods: {\n    async postData() {\n      this.$refs.form.validate();\n      const postData = {\n        username: this.username,\n        password: this.password\n      };\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:5000\";\n      const response = await fetch(`http://${urlRasp}/login`, {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(postData)\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        if (data.username == this.username) {\n          //this.setUser(data.username);\n          //this.setToken(data.token);\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.invalidCredentials = true;\n        }\n      } //console.log(data)\n\n    },\n\n    clearPostOutput() {\n      this.postResult = null;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACAA;AACAC,gBADA;AAEAC,gBAFA;AAGAC,eAHA;AAIAC;AAJA,IADA;AAOAC;AACAC;AADA,GAPA;AAWAC;AACA;AACA;AACA;AACAN,+BADA;AAEAC;AAFA;AAKA;AACA;AAEA;AACAM,sBADA;AAEAC;AACA,sCADA;AAEA;AAFA,SAFA;AAMAC;AANA;AASA;;AACA;AACA;AACA;AACA;AACA;AACA,SAJA,MAKA;AACA;AACA;AAEA,OA9BA,CAgCA;;AAEA,KAnCA;;AAoCAC;AACA;AACA;;AAtCA;AAXA","names":["data","username","password","valid","invalidCredentials","props","source","methods","method","headers","body","clearPostOutput"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-main>\n      <v-container class=\"fill-height\">\n        <v-row align=\"center\" justify=\"center\">\n          <v-col cols=\"7\" md=\"4\">\n            <v-card class=\"elevation-12\">\n              <v-window>\n                  <v-card-text class=\"pt-9 pl-10 pr-16 pb-10\" flat>\n                    <v-img\n                      class=\"mb-12 mx-auto text-center\"\n                      src=\"../assets/logo.png\"\n                      max-height=\"160\"\n                      max-width=\"160\"\n                    ></v-img>\n\n                    <v-form ref=\"form\"\n                      v-model=\"valid\"\n                      lazy-validation>\n                      <v-text-field\n                        v-model=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        prepend-icon=\"mdi-account\"\n                        type=\"text\"\n                        color=\"primary\"\n                        required\n                        :rules=\"[v => !!v || 'You must type username!']\"\n                      />\n                      <v-text-field\n                        v-model=\"password\"\n                        id=\"password\"\n                        label=\"Password\"\n                        name=\"password\"\n                        prepend-icon=\"key\"\n                        type=\"password\"\n                        color=\"primary\"\n                        :rules=\"[v => !!v || 'You must type password!']\"\n                      />\n                      <v-btn @click=\"postData\" rounded color=\"primary\" class=\"mt-4\" block dark \n                      >SIGN IN</v-btn\n                    >\n                    <p class=\"red--text mt-3 mr-6\" v-show=\"invalidCredentials\" >\n                      Invalid Credentials!\n                    </p>\n                    </v-form>\n                  </v-card-text>\n              </v-window>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n\n\nexport default {\n  data: () => ({\n    username:'',\n    password:'',\n    valid: true,\n    invalidCredentials: false,\n  }),\n  props: {\n    source: String,\n  },\n\n  methods:{\n    async postData() {\n      this.$refs.form.validate()\n      const postData = {\n        username: this.username,\n        password: this.password,\n      }\n\n      const urlDesktop = \"127.0.0.1:5000\"\n      const urlRasp = \"192.168.1.216:5000\"\n      \n      const response = await fetch(`http://${urlRasp}/login`, {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(postData),\n      })\n\n      const data = await response.json();\n      if(response.ok) {\n        if (data.username == this.username) {\n        //this.setUser(data.username);\n        //this.setToken(data.token);\n        this.$router.push(\"/dashboard\");\n      }\n      else {\n        this.invalidCredentials = true\n      }\n      \n      }\n      \n      //console.log(data)\n\n    },\n    clearPostOutput() {\n      this.postResult = null;\n    }\n  },\n};\n\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}