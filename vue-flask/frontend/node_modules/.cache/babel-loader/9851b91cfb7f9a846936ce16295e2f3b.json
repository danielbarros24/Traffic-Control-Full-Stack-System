{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/conditions/Node.vue\";\nexport var ORComponent = /*#__PURE__*/function (_Rete$Component) {\n  _inherits(ORComponent, _Rete$Component);\n\n  var _super = _createSuper(ORComponent);\n\n  function ORComponent() {\n    var _this;\n\n    _classCallCheck(this, ORComponent);\n\n    _this = _super.call(this, \"OR\");\n    _this.data.component = Node;\n    return _this;\n  }\n\n  _createClass(ORComponent, [{\n    key: \"builder\",\n    value: function builder(node) {\n      var inp1 = new Rete.Input('num1', \"In\", Socket.boolean, true);\n      var out = new Rete.Output('num', \"Out\", Socket.boolean);\n      return node.addInput(inp1).addOutput(out);\n    }\n  }, {\n    key: \"worker\",\n    value: function worker(node, outputs) {\n      outputs['num'] = node.data.num;\n    }\n  }, {\n    key: \"toJsonLogic\",\n    value: function toJsonLogic(node) {\n      var _this2 = this;\n\n      var inputs = node.inputs;\n      var inputNum = inputs.get('num1');\n      var connections = inputNum.connections;\n      return {\n        \"or\": connections.map(function (connection) {\n          var _connectionComponent$;\n\n          var connectionNode = connection.output.node;\n\n          var connectionComponent = _this2.editor.getComponent(connectionNode.name);\n\n          return (_connectionComponent$ = connectionComponent.toJsonLogic) === null || _connectionComponent$ === void 0 ? void 0 : _connectionComponent$.call(connectionComponent, connectionNode);\n        })\n      };\n    }\n  }]);\n\n  return ORComponent;\n}(Rete.Component);","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/conditions/ORComponent.js"],"names":["Rete","Socket","Node","ORComponent","data","component","node","inp1","Input","boolean","out","Output","addInput","addOutput","outputs","num","inputs","inputNum","get","connections","map","connection","connectionNode","output","connectionComponent","editor","getComponent","name","toJsonLogic","Component"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,yEAAjB;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AACI,yBAAa;AAAA;;AAAA;;AACT,8BAAM,IAAN;AACA,UAAKC,IAAL,CAAUC,SAAV,GAAsBH,IAAtB;AAFS;AAGZ;;AAJL;AAAA;AAAA,WAMI,iBAAQI,IAAR,EAAc;AACV,UAAIC,IAAI,GAAG,IAAIP,IAAI,CAACQ,KAAT,CAAe,MAAf,EAAsB,IAAtB,EAA4BP,MAAM,CAACQ,OAAnC,EAA4C,IAA5C,CAAX;AACA,UAAIC,GAAG,GAAG,IAAIV,IAAI,CAACW,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8BV,MAAM,CAACQ,OAArC,CAAV;AAEA,aAAOH,IAAI,CACNM,QADE,CACOL,IADP,EAEFM,SAFE,CAEQH,GAFR,CAAP;AAGH;AAbL;AAAA;AAAA,WAeI,gBAAOJ,IAAP,EAAaQ,OAAb,EAAsB;AAClBA,MAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBR,IAAI,CAACF,IAAL,CAAUW,GAA3B;AACH;AAjBL;AAAA;AAAA,WAmBI,qBAAYT,IAAZ,EAAkB;AAAA;;AACd,UAAQU,MAAR,GAAmBV,IAAnB,CAAQU,MAAR;AAEA,UAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAX,CAAjB;AACA,UAAQC,WAAR,GAAwBF,QAAxB,CAAQE,WAAR;AAEA,aAAO;AACH,cAAMA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,UAAU,EAAI;AAAA;;AAChC,cAAMC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBjB,IAAzC;;AACA,cAAMkB,mBAAmB,GAAG,MAAI,CAACC,MAAL,CAAYC,YAAZ,CAAyBJ,cAAc,CAACK,IAAxC,CAA5B;;AACA,0CAAOH,mBAAmB,CAACI,WAA3B,0DAAO,2BAAAJ,mBAAmB,EAAeF,cAAf,CAA1B;AACH,SAJK;AADH,OAAP;AAOH;AAhCL;;AAAA;AAAA,EAAiCtB,IAAI,CAAC6B,SAAtC","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/conditions/Node.vue\";\n\nexport class ORComponent extends Rete.Component {\n    constructor(){\n        super(\"OR\");\n        this.data.component = Node;\n    }\n    \n    builder(node) {\n        var inp1 = new Rete.Input('num1',\"In\", Socket.boolean, true);\n        var out = new Rete.Output('num', \"Out\", Socket.boolean);\n\n        return node\n            .addInput(inp1)\n            .addOutput(out);\n    }\n    \n    worker(node, outputs) {\n        outputs['num'] = node.data.num;\n    }\n\n    toJsonLogic(node) {\n        const { inputs } = node;\n        \n        const inputNum = inputs.get('num1');\n        const { connections } = inputNum;\n\n        return {\n            \"or\": connections.map(connection => {\n                const connectionNode = connection.output.node;\n                const connectionComponent = this.editor.getComponent(connectionNode.name);\n                return connectionComponent.toJsonLogic?.(connectionNode)\n            })  \n        }  \n    }\n}"]},"metadata":{},"sourceType":"module"}