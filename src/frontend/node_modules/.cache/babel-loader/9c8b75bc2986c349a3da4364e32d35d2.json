{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.url.to-json.js\";\n//\n//\n//\n//\n//\n//\n//\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\nimport ReteNumControl from './ReteNumControl';\nexport default {\n  data: function data() {\n    return {\n      editor: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var numSocket, NumControl, ConstantComponent, AddComponent, MultiplyComponent, DivisionComponent, EqualToComponent, container, components, editor, engine, n1, n2, add, sub;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              numSocket = new Socket('Number value');\n\n              NumControl = /*#__PURE__*/function (_Control) {\n                _inherits(NumControl, _Control);\n\n                var _super = _createSuper(NumControl);\n\n                function NumControl(emitter, key, readonly) {\n                  var _this2;\n\n                  _classCallCheck(this, NumControl);\n\n                  _this2 = _super.call(this, key);\n                  _this2.component = ReteNumControl;\n                  _this2.props = {\n                    emitter: emitter,\n                    ikey: key,\n                    readonly: readonly\n                  };\n                  return _this2;\n                }\n\n                _createClass(NumControl, [{\n                  key: \"setValue\",\n                  value: function setValue(val) {\n                    this.vueContext.value = val;\n                  }\n                }]);\n\n                return NumControl;\n              }(Control);\n\n              ConstantComponent = /*#__PURE__*/function (_Component) {\n                _inherits(ConstantComponent, _Component);\n\n                var _super2 = _createSuper(ConstantComponent);\n\n                function ConstantComponent() {\n                  _classCallCheck(this, ConstantComponent);\n\n                  return _super2.call(this, \"Constant\");\n                }\n\n                _createClass(ConstantComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Number\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return ConstantComponent;\n              }(Component);\n\n              AddComponent = /*#__PURE__*/function (_Component2) {\n                _inherits(AddComponent, _Component2);\n\n                var _super3 = _createSuper(AddComponent);\n\n                function AddComponent() {\n                  _classCallCheck(this, AddComponent);\n\n                  return _super3.call(this, \"Add\");\n                }\n\n                _createClass(AddComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum + a;\n                    }, 0);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return AddComponent;\n              }(Component);\n\n              MultiplyComponent = /*#__PURE__*/function (_Component3) {\n                _inherits(MultiplyComponent, _Component3);\n\n                var _super4 = _createSuper(MultiplyComponent);\n\n                function MultiplyComponent() {\n                  _classCallCheck(this, MultiplyComponent);\n\n                  return _super4.call(this, \"Multiply\");\n                }\n\n                _createClass(MultiplyComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum * a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return MultiplyComponent;\n              }(Component);\n\n              DivisionComponent = /*#__PURE__*/function (_Component4) {\n                _inherits(DivisionComponent, _Component4);\n\n                var _super5 = _createSuper(DivisionComponent);\n\n                function DivisionComponent() {\n                  _classCallCheck(this, DivisionComponent);\n\n                  return _super5.call(this, \"Divide\");\n                }\n\n                _createClass(DivisionComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return DivisionComponent;\n              }(Component);\n\n              EqualToComponent = /*#__PURE__*/function (_Component5) {\n                _inherits(EqualToComponent, _Component5);\n\n                var _super6 = _createSuper(EqualToComponent);\n\n                function EqualToComponent() {\n                  _classCallCheck(this, EqualToComponent);\n\n                  return _super6.call(this, \"=\");\n                }\n\n                _createClass(EqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return EqualToComponent;\n              }(Component);\n\n              container = _this.$refs.nodeEditor;\n              components = [new ConstantComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent()];\n              editor = new NodeEditor('demo@0.1.0', container);\n              editor.use(ConnectionPlugin);\n              editor.use(VueRenderPlugin);\n              editor.use(ContextMenuPlugin);\n              editor.use(AreaPlugin);\n              editor.use(KeyboardPlugin);\n              engine = new Engine('demo@0.1.0');\n              components.map(function (c) {\n                editor.register(c);\n                engine.register(c);\n              });\n              _context2.next = 19;\n              return components[0].createNode({\n                num: 2\n              });\n\n            case 19:\n              n1 = _context2.sent;\n              _context2.next = 22;\n              return components[0].createNode({\n                num: 0\n              });\n\n            case 22:\n              n2 = _context2.sent;\n              _context2.next = 25;\n              return components[1].createNode();\n\n            case 25:\n              add = _context2.sent;\n              _context2.next = 28;\n              return components[2].createNode();\n\n            case 28:\n              sub = _context2.sent;\n              n1.position = [80, 200];\n              n2.position = [80, 400];\n              add.position = [500, 240];\n              sub.position = [800, 240];\n              editor.addNode(n1);\n              editor.addNode(n2);\n              editor.addNode(add);\n              editor.addNode(sub);\n              editor.connect(n1.outputs.get('num'), add.inputs.get('num'));\n              editor.connect(n2.outputs.get('num'), add.inputs.get('num2'));\n              editor.on('process nodecreated noderemoved connectioncreated connectionremoved', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log('process');\n                        _context.next = 3;\n                        return engine.abort();\n\n                      case 3:\n                        _context.next = 5;\n                        return engine.process(editor.toJSON());\n\n                      case 5:\n                        console.log(editor.toJSON());\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              editor.view.resize();\n              AreaPlugin.zoomAt(editor);\n              editor.trigger('process');\n\n            case 43:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACAA,MADA,kBACA;AACA;AACAC;AADA;AAGA,GALA;AAOAC,SAPA,qBAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,uBADA,GACA,0BADA;;AAGAC,wBAHA;AAAA;;AAAA;;AAIA;AAAA;;AAAA;;AACA;AAEA;AACA;AAAAC;AAAAC;AAAAC;AAAA;AAJA;AAKA;;AATA;AAAA;AAAA,yBAWA;AACA;AACA;AAbA;;AAAA;AAAA,gBAGAC,OAHA;;AAgBAC,+BAhBA;AAAA;;AAAA;;AAiBA;AAAA;;AAAA,4CACA,UADA;AAEA;;AAnBA;AAAA;AAAA,yBAqBA;AACA;AACA,gCACAC,UADA,CACA,kCADA,EAEAC,SAFA,CAEAC,IAFA;AAGA;AA1BA;AAAA;AAAA,yBA4BA;AACAC;AACA;AA9BA;;AAAA;AAAA,gBAgBAC,SAhBA;;AAiCAC,0BAjCA;AAAA;;AAAA;;AAkCA;AAAA;;AAAA,4CACA,KADA;AAEA;;AApCA;AAAA;AAAA,yBAsCA;AACA;AACA;AAEA,gCACAC,QADA,CACAC,IADA,EAEAP,UAFA,CAEA,4CAFA,EAGAC,SAHA,CAGAO,GAHA;AAIA;AA9CA;AAAA;AAAA,yBAgDA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACAL;AACA;AApDA;;AAAA;AAAA,gBAiCAC,SAjCA;;AAuDAK,+BAvDA;AAAA;;AAAA;;AAwDA;AAAA;;AAAA,4CACA,UADA;AAEA;;AA1DA;AAAA;AAAA,yBA4DA;AACA;AACA;AAEA,gCACAH,QADA,CACAC,IADA,EAEAP,UAFA,CAEA,4CAFA,EAGAC,SAHA,CAGAO,GAHA;AAIA;AApEA;AAAA;AAAA,yBAsEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACAL;AACA;AA1EA;;AAAA;AAAA,gBAuDAC,SAvDA;;AA6EAM,+BA7EA;AAAA;;AAAA;;AA8EA;AAAA;;AAAA,4CACA,QADA;AAEA;;AAhFA;AAAA;AAAA,yBAkFA;AACA;AACA;AAEA,gCACAJ,QADA,CACAC,IADA,EAEAP,UAFA,CAEA,4CAFA,EAGAC,SAHA,CAGAO,GAHA;AAIA;AA1FA;AAAA;AAAA,yBA4FA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACAL;AACA;AAhGA;;AAAA;AAAA,gBA6EAC,SA7EA;;AAmGAO,8BAnGA;AAAA;;AAAA;;AAoGA;AAAA;;AAAA,4CACA,GADA;AAEA;;AAtGA;AAAA;AAAA,yBAwGA;AACA;AACA;AAEA,gCACAL,QADA,CACAC,IADA,EAEAN,SAFA,CAEAO,GAFA;AAGA;AA/GA;AAAA;AAAA,yBAiHA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACAL;AACA;AArHA;;AAAA;AAAA,gBAmGAC,SAnGA;;AAwHAQ,uBAxHA,GAwHA,sBAxHA;AAyHAC,wBAzHA,GAyHA,uHAzHA;AA0HAtB,oBA1HA,GA0HA,uCA1HA;AA4HAA;AACAA;AACAA;AACAA;AACAA;AAEAuB,oBAlIA,GAkIA,wBAlIA;AAmIAD;AACAtB;AACAuB;AACA,eAHA;AAnIA;AAAA,qBAwIAD;AAAAE;AAAA,gBAxIA;;AAAA;AAwIAC,gBAxIA;AAAA;AAAA,qBAyIAH;AAAAE;AAAA,gBAzIA;;AAAA;AAyIAE,gBAzIA;AAAA;AAAA,qBA0IAJ,0BA1IA;;AAAA;AA0IAK,iBA1IA;AAAA;AAAA,qBA2IAL,0BA3IA;;AAAA;AA2IAM,iBA3IA;AA8IAH;AACAC;AACAC;AACAC;AAEA5B;AACAA;AACAA;AACAA;AAEAA;AACAA;AACAA;AAAA;AAAA;AAAA;AAAA;AACA6B;AADA;AAAA,+BAEAN,cAFA;;AAAA;AAAA;AAAA,+BAGAA,+BAHA;;AAAA;AAIAM;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA7B;AACA8B;AACA9B;;AAnKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoKA;AA3KA","names":["data","editor","mounted","numSocket","NumControl","emitter","ikey","readonly","Control","ConstantComponent","addControl","addOutput","out1","outputs","Component","AddComponent","addInput","inp1","out","MultiplyComponent","DivisionComponent","EqualToComponent","container","components","engine","num","n1","n2","add","sub","console","AreaPlugin"],"sourceRoot":"src/components/rete","sources":["ReteEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\"><div class=\"node-editor\" ref=\"nodeEditor\"></div></div>\n    <canvas id=\"canvasOutput\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\n\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\n\nimport ReteNumControl from './ReteNumControl'\n\nexport default {\n  data() {\n    return {\n      editor: null\n    };\n  },\n\n  async mounted() {\n    var numSocket = new Socket('Number value');\n\n    class NumControl extends Control {\n      constructor(emitter, key, readonly) {\n        super(key);\n        \n        this.component = ReteNumControl;\n        this.props = { emitter, ikey: key, readonly };\n      }\n\n      setValue(val) {\n        this.vueContext.value = val;\n      }\n    }\n\n    class ConstantComponent extends Component {\n        constructor(){\n            super(\"Constant\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Number\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class AddComponent extends Component {\n        constructor(){\n            super(\"Add\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) => partialSum + a, 0);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class MultiplyComponent extends Component {\n        constructor(){\n            super(\"Multiply\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum * a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class DivisionComponent extends Component {\n        constructor(){\n            super(\"Divide\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class EqualToComponent extends Component {\n        constructor(){\n            super(\"=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    var container = this.$refs.nodeEditor\n    var components = [new ConstantComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent()];\n    var editor = new NodeEditor('demo@0.1.0', container);\n\n    editor.use(ConnectionPlugin);\n    editor.use(VueRenderPlugin);\n    editor.use(ContextMenuPlugin);\n    editor.use(AreaPlugin);\n    editor.use(KeyboardPlugin);\n\n    var engine = new Engine('demo@0.1.0');\n    components.map(c => {\n        editor.register(c);\n        engine.register(c);\n    });\n\n    var n1 = await components[0].createNode({num: 2});\n    var n2 = await components[0].createNode({num: 0});\n    var add = await components[1].createNode();\n    var sub = await components[2].createNode();\n    \n\n    n1.position = [80, 200];\n    n2.position = [80, 400];\n    add.position = [500, 240];\n    sub.position = [800, 240];\n\n    editor.addNode(n1);\n    editor.addNode(n2);\n    editor.addNode(add);\n    editor.addNode(sub);\n\n    editor.connect(n1.outputs.get('num'), add.inputs.get('num'));\n    editor.connect(n2.outputs.get('num'), add.inputs.get('num2'));\n    editor.on('process nodecreated noderemoved connectioncreated connectionremoved', async () => {\n      console.log('process');\n        await engine.abort();\n        await engine.process(editor.toJSON());\n        console.log(editor.toJSON())\n    });\n    \n    editor.view.resize();\n    AreaPlugin.zoomAt(editor);\n    editor.trigger('process');\n  }\n};\n</script>\n\n<style>\n.node-editor {\n  text-align: left;\n  overflow: hidden;\n}\n.node .control input, .node .input-control input {\n  width: 140px;\n}\nselect, input {\n  width: 100%;\n  border-radius: 30px;\n  background-color: white;\n  padding: 2px 6px;\n  border: 1px solid #999;\n  font-size: 110%;\n  width: 170px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}