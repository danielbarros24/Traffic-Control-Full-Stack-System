{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/logical-operators/Node.vue\";\nexport var NOTComponent = /*#__PURE__*/function (_Rete$Component) {\n  _inherits(NOTComponent, _Rete$Component);\n\n  var _super = _createSuper(NOTComponent);\n\n  function NOTComponent() {\n    var _this;\n\n    _classCallCheck(this, NOTComponent);\n\n    _this = _super.call(this, \"NOT\");\n    _this.data.component = Node;\n    return _this;\n  }\n\n  _createClass(NOTComponent, [{\n    key: \"builder\",\n    value: function builder(node) {\n      var inp1 = new Rete.Input('input', \"In\", Socket.boolean);\n      var out = new Rete.Output('num', \"Out\", Socket.boolean);\n      return node.addInput(inp1).addOutput(out);\n    }\n  }, {\n    key: \"worker\",\n    value: function worker(node, inputs, outputs) {\n      outputs['num'] = node.data.input;\n    }\n  }, {\n    key: \"_inputToJsonLogic\",\n    value: function _inputToJsonLogic(node, name) {\n      var _connectionComponent$;\n\n      var inputs = node.inputs;\n      var input = inputs.get(name);\n      var connections = input.connections;\n\n      if (connections.length == 0) {\n        return {};\n      }\n\n      var connection = connections[0];\n      var connectionNode = connection.output.node;\n      var connectionComponent = this.editor.getComponent(connectionNode.name);\n      return (_connectionComponent$ = connectionComponent.toJsonLogic) === null || _connectionComponent$ === void 0 ? void 0 : _connectionComponent$.call(connectionComponent, connectionNode);\n    }\n  }, {\n    key: \"toJsonLogic\",\n    value: function toJsonLogic(node) {\n      var input1 = this._inputToJsonLogic(node, 'input1');\n\n      return {\n        \"!\": input1\n      };\n    }\n  }]);\n\n  return NOTComponent;\n}(Rete.Component);","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/logical-operators/NOTComponent.js"],"names":["Rete","Socket","Node","NOTComponent","data","component","node","inp1","Input","boolean","out","Output","addInput","addOutput","inputs","outputs","input","name","get","connections","length","connection","connectionNode","output","connectionComponent","editor","getComponent","toJsonLogic","input1","_inputToJsonLogic","Component"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,gFAAjB;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AACI,0BAAa;AAAA;;AAAA;;AACT,8BAAM,KAAN;AACA,UAAKC,IAAL,CAAUC,SAAV,GAAsBH,IAAtB;AAFS;AAGZ;;AAJL;AAAA;AAAA,WAMI,iBAAQI,IAAR,EAAc;AACV,UAAIC,IAAI,GAAG,IAAIP,IAAI,CAACQ,KAAT,CAAe,OAAf,EAAuB,IAAvB,EAA6BP,MAAM,CAACQ,OAApC,CAAX;AACA,UAAIC,GAAG,GAAG,IAAIV,IAAI,CAACW,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8BV,MAAM,CAACQ,OAArC,CAAV;AAEA,aAAOH,IAAI,CACNM,QADE,CACOL,IADP,EAEFM,SAFE,CAEQH,GAFR,CAAP;AAGH;AAbL;AAAA;AAAA,WAeI,gBAAOJ,IAAP,EAAaQ,MAAb,EAAqBC,OAArB,EAA8B;AAC1BA,MAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBT,IAAI,CAACF,IAAL,CAAUY,KAA3B;AACH;AAjBL;AAAA;AAAA,WAmBI,2BAAkBV,IAAlB,EAAwBW,IAAxB,EAA8B;AAAA;;AAC1B,UAAQH,MAAR,GAAmBR,IAAnB,CAAQQ,MAAR;AAEA,UAAME,KAAK,GAAGF,MAAM,CAACI,GAAP,CAAWD,IAAX,CAAd;AACA,UAAQE,WAAR,GAAwBH,KAAxB,CAAQG,WAAR;;AAEA,UAAIA,WAAW,CAACC,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,eAAO,EAAP;AACH;;AAED,UAAMC,UAAU,GAAGF,WAAW,CAAC,CAAD,CAA9B;AACA,UAAMG,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBjB,IAAzC;AACA,UAAMkB,mBAAmB,GAAG,KAAKC,MAAL,CAAYC,YAAZ,CAAyBJ,cAAc,CAACL,IAAxC,CAA5B;AAEA,sCAAOO,mBAAmB,CAACG,WAA3B,0DAAO,2BAAAH,mBAAmB,EAAeF,cAAf,CAA1B;AACH;AAlCL;AAAA;AAAA,WAoCI,qBAAYhB,IAAZ,EAAkB;AACd,UAAMsB,MAAM,GAAG,KAAKC,iBAAL,CAAuBvB,IAAvB,EAA6B,QAA7B,CAAf;;AAEA,aAAO;AAAC,aAAMsB;AAAP,OAAP;AACH;AAxCL;;AAAA;AAAA,EAAkC5B,IAAI,CAAC8B,SAAvC","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/logical-operators/Node.vue\";\n\nexport class NOTComponent extends Rete.Component {\n    constructor(){\n        super(\"NOT\");\n        this.data.component = Node;\n    }\n    \n    builder(node) {\n        var inp1 = new Rete.Input('input',\"In\", Socket.boolean);\n        var out = new Rete.Output('num', \"Out\", Socket.boolean);\n\n        return node\n            .addInput(inp1)\n            .addOutput(out);\n    }\n    \n    worker(node, inputs, outputs) {\n        outputs['num'] = node.data.input;\n    }\n\n    _inputToJsonLogic(node, name) {\n        const { inputs } = node;\n\n        const input = inputs.get(name)\n        const { connections } = input;\n\n        if (connections.length == 0) {\n            return {};\n        }\n\n        const connection = connections[0];\n        const connectionNode = connection.output.node;\n        const connectionComponent = this.editor.getComponent(connectionNode.name);\n\n        return connectionComponent.toJsonLogic?.(connectionNode);\n    }\n\n    toJsonLogic(node) {\n        const input1 = this._inputToJsonLogic(node, 'input1')\n\n        return {\"!\" : input1}\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}