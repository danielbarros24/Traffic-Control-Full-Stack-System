{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '../router/index';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    snackbars: [],\n    username: null,\n    token: null\n  },\n  mutations: {\n    SET_SNACKBAR(state, snackbar) {\n      state.snackbars = state.snackbars.concat(snackbar);\n    },\n\n    authUser(state, userData) {\n      state.username = userData.username;\n      state.token = userData.token;\n    },\n\n    clearAuthData(state) {\n      state.username = null;\n      state.token = null;\n    }\n\n  },\n  actions: {\n    setSnackbar({\n      commit\n    }, snackbar) {\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit('SET_SNACKBAR', snackbar);\n    },\n\n    login: ({\n      commit\n    }, authData) => {\n      axios.post(':5000/login', {\n        username: authData.username,\n        password: authData.password\n      }).then(response => {\n        let success = response.data.success;\n\n        if (success === true) {\n          commit('authUser', {\n            username: authData.username,\n            token: response.data.token\n          });\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } else {\n          console.log('Login error');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    autoLogin({\n      commit\n    }) {\n      let token = localStorage.getItem('token');\n      let username = localStorage.getItem('username');\n\n      if (!token || !username) {\n        return;\n      }\n\n      commit('authUser', {\n        username: username,\n        token: token\n      });\n    },\n\n    logout: ({\n      commit\n    }) => {\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.token !== null;\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/store/index.js"],"names":["Vue","Vuex","axios","router","use","Store","state","snackbars","username","token","mutations","SET_SNACKBAR","snackbar","concat","authUser","userData","clearAuthData","actions","setSnackbar","commit","showing","color","login","authData","post","password","then","response","success","data","localStorage","setItem","replace","console","log","catch","error","autoLogin","getItem","logout","removeItem","getters","isAuthenticated","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport router from '../router/index'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    snackbars: [],\n    username: null,\n\t  token: null,\n  },\n  mutations: {\n\n    SET_SNACKBAR(state, snackbar) {\n      state.snackbars= state.snackbars.concat(snackbar)\n    },\n\n    authUser(state, userData) {\n      state.username = userData.username;\n      state.token = userData.token;\n    },\n    clearAuthData(state) {\n      state.username = null;\n      state.token = null;\n    },\n    \n  },\n  actions: {\n    setSnackbar({commit}, snackbar) {\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit ('SET_SNACKBAR', snackbar);\n    },\n\n    login: ({commit}, authData) => {\n      axios.post(':5000/login', {\n        username: authData.username,\n        password: authData.password,\n      }).then(response => {\n        let success = response.data.success;\n  \n        if (success === true) {\n          commit('authUser', { username: authData.username, token: response.data.token });\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } \n        else {\n          console.log('Login error');\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n    },\n    autoLogin({commit}) {\n      let token = localStorage.getItem('token');\n      let username = localStorage.getItem('username');\n  \n      if (!token || !username) {\n        return;\n      }\n  \n      commit('authUser', { username: username, token: token });\n    },\n    logout: ({commit}) => {\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    },\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.token !== null;\n    },\n  },\n  modules: {\n  },\n})\n"]},"metadata":{},"sourceType":"module"}