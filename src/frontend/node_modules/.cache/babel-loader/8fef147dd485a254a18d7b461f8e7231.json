{"ast":null,"code":"import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\nimport { NumControl } from '@/node-editor/controls/NumControl/NumControl';\nexport class ConstantComponent extends Rete.Component {\n  constructor() {\n    super(\"Constant\");\n  }\n\n  builder(node) {\n    var out1 = new Rete.Output('num', \"Out\", Socket.constant);\n    return node.addControl(new NumControl(this.editor, 'num1')).addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs['num'] = node.data.num1;\n  }\n\n  toJsonLogic(node) {\n    return node.data.num1;\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/ConstantComponent.js"],"names":["Rete","Socket","NumControl","ConstantComponent","Component","constructor","builder","node","out1","Output","constant","addControl","editor","addOutput","worker","inputs","outputs","data","num1","toJsonLogic"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AAEA,SAASC,UAAT,QAA2B,8CAA3B;AAEA,OAAO,MAAMC,iBAAN,SAAgCH,IAAI,CAACI,SAArC,CAA+C;AAClDC,EAAAA,WAAW,GAAE;AACT,UAAM,UAAN;AACH;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,QAAIC,IAAI,GAAG,IAAIR,IAAI,CAACS,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8BR,MAAM,CAACS,QAArC,CAAX;AACA,WAAOH,IAAI,CACRI,UADI,CACO,IAAIT,UAAJ,CAAe,KAAKU,MAApB,EAA4B,MAA5B,CADP,EAEJC,SAFI,CAEML,IAFN,CAAP;AAGH;;AAEDM,EAAAA,MAAM,CAACP,IAAD,EAAOQ,MAAP,EAAeC,OAAf,EAAwB;AAC1BA,IAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBT,IAAI,CAACU,IAAL,CAAUC,IAA3B;AACH;;AAEDC,EAAAA,WAAW,CAACZ,IAAD,EAAO;AACd,WAAOA,IAAI,CAACU,IAAL,CAAUC,IAAjB;AACH;;AAlBiD","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\n\nimport { NumControl } from '@/node-editor/controls/NumControl/NumControl'\n\nexport class ConstantComponent extends Rete.Component {\n    constructor(){\n        super(\"Constant\");\n    }\n\n    builder(node) {\n        var out1 = new Rete.Output('num', \"Out\", Socket.constant);\n        return node\n          .addControl(new NumControl(this.editor, 'num1'))\n          .addOutput(out1);\n    }\n\n    worker(node, inputs, outputs) {\n        outputs['num'] = node.data.num1;\n    }\n\n    toJsonLogic(node) {\n        return node.data.num1;\n    }\n}"]},"metadata":{},"sourceType":"module"}