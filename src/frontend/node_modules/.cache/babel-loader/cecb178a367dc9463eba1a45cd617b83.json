{"ast":null,"code":"import Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/logical-operators/Node.vue\";\nexport class ORComponent extends Rete.Component {\n  constructor() {\n    super(\"OR\");\n    this.data.component = Node;\n  }\n\n  builder(node) {\n    var inp1 = new Rete.Input('input', \"Inputs\", Socket.boolean, true);\n    var out = new Rete.Output('num', \"Out\", Socket.boolean);\n    return node.addInput(inp1).addOutput(out);\n  }\n\n  worker(node, outputs) {\n    outputs['num'] = node.data.input;\n  }\n\n  toJsonLogic(node) {\n    const {\n      inputs\n    } = node;\n    const inputNum = inputs.get('input');\n    const {\n      connections\n    } = inputNum;\n    return {\n      \"or\": connections.map(connection => {\n        const connectionNode = connection.output.node;\n        const connectionComponent = this.editor.getComponent(connectionNode.name);\n        return connectionComponent.toJsonLogic?.(connectionNode);\n      })\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/logical-operators/ORComponent.js"],"names":["Rete","Socket","Node","ORComponent","Component","constructor","data","component","builder","node","inp1","Input","boolean","out","Output","addInput","addOutput","worker","outputs","input","toJsonLogic","inputs","inputNum","get","connections","map","connection","connectionNode","output","connectionComponent","editor","getComponent","name"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,gFAAjB;AAEA,OAAO,MAAMC,WAAN,SAA0BH,IAAI,CAACI,SAA/B,CAAyC;AAC5CC,EAAAA,WAAW,GAAE;AACT,UAAM,IAAN;AACA,SAAKC,IAAL,CAAUC,SAAV,GAAsBL,IAAtB;AACH;;AAEDM,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,QAAIC,IAAI,GAAG,IAAIV,IAAI,CAACW,KAAT,CAAe,OAAf,EAAuB,QAAvB,EAAiCV,MAAM,CAACW,OAAxC,EAAiD,IAAjD,CAAX;AACA,QAAIC,GAAG,GAAG,IAAIb,IAAI,CAACc,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8Bb,MAAM,CAACW,OAArC,CAAV;AAEA,WAAOH,IAAI,CACNM,QADE,CACOL,IADP,EAEFM,SAFE,CAEQH,GAFR,CAAP;AAGH;;AAEDI,EAAAA,MAAM,CAACR,IAAD,EAAOS,OAAP,EAAgB;AAClBA,IAAAA,OAAO,CAAC,KAAD,CAAP,GAAiBT,IAAI,CAACH,IAAL,CAAUa,KAA3B;AACH;;AAEDC,EAAAA,WAAW,CAACX,IAAD,EAAO;AACd,UAAM;AAAEY,MAAAA;AAAF,QAAaZ,IAAnB;AAEA,UAAMa,QAAQ,GAAGD,MAAM,CAACE,GAAP,CAAW,OAAX,CAAjB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkBF,QAAxB;AAEA,WAAO;AACH,YAAME,WAAW,CAACC,GAAZ,CAAgBC,UAAU,IAAI;AAChC,cAAMC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBnB,IAAzC;AACA,cAAMoB,mBAAmB,GAAG,KAAKC,MAAL,CAAYC,YAAZ,CAAyBJ,cAAc,CAACK,IAAxC,CAA5B;AACA,eAAOH,mBAAmB,CAACT,WAApB,GAAkCO,cAAlC,CAAP;AACH,OAJK;AADH,KAAP;AAOH;;AAhC2C","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../../sockets\";\nimport Node from \"../../../../node_modules/rete-vue-render-plugin/src/logical-operators/Node.vue\";\n\nexport class ORComponent extends Rete.Component {\n    constructor(){\n        super(\"OR\");\n        this.data.component = Node;\n    }\n    \n    builder(node) {\n        var inp1 = new Rete.Input('input',\"Inputs\", Socket.boolean, true);\n        var out = new Rete.Output('num', \"Out\", Socket.boolean);\n\n        return node\n            .addInput(inp1)\n            .addOutput(out);\n    }\n    \n    worker(node, outputs) {\n        outputs['num'] = node.data.input;\n    }\n\n    toJsonLogic(node) {\n        const { inputs } = node;\n        \n        const inputNum = inputs.get('input');\n        const { connections } = inputNum;\n\n        return {\n            \"or\": connections.map(connection => {\n                const connectionNode = connection.output.node;\n                const connectionComponent = this.editor.getComponent(connectionNode.name);\n                return connectionComponent.toJsonLogic?.(connectionNode)\n            })  \n        }  \n    }\n}"]},"metadata":{},"sourceType":"module"}