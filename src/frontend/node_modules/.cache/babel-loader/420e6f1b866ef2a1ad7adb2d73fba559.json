{"ast":null,"code":"import _objectSpread from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as dayjs from \"dayjs\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      nameRules: [function (v) {\n        return !!v;\n      }],\n      dateRules: [function (v) {\n        return !!v || \"Insert 2 dates\";\n      }, function (v) {\n        return /^\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])~\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/.test(v) || \"Insert 2 dates!\";\n      }],\n      dataCountCar: [{\n        name: \"Car Count\",\n        data: {}\n      }],\n      dataCountTruck: [{\n        name: \"Truck Flow\",\n        data: {}\n      }],\n      dataCountBike: [{\n        name: \"Bike Flow\",\n        data: {}\n      }],\n      dataCountDoublePark: [{\n        name: \"Double-Park Flow\",\n        data: {}\n      }],\n      items: [{\n        title: \"Logout\",\n        icon: \"mdi-logout\",\n        click: function click() {\n          this.$store.dispatch('logout');\n        }\n      }, {\n        title: \"Processes\",\n        icon: \"mdi-auto-fix\",\n        click: function click() {\n          this.$router.push(\"processes\");\n        }\n      }, {\n        title: \"Settings\",\n        icon: \"mdi-cogs\",\n        click: function click() {\n          this.$router.push(\"settings\");\n        }\n      }],\n      editedItem: {\n        dates: [dayjs().format('YYYY-MM-DD'), dayjs().format('YYYY-MM-DD')],\n        startHour: \"00:00\",\n        endHour: \"23:59\",\n        indicator: \"\"\n      },\n      defaultItem: {\n        dates: [dayjs().format('YYYY-MM-DD'), dayjs().format('YYYY-MM-DD')],\n        startHour: \"00:00\",\n        endHour: \"23:59\",\n        indicator: \"\"\n      },\n      sensors: [],\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n      carCountChart: false,\n      truckCountChart: false,\n      bikeCountChart: false,\n      doubleParkVehicles: false,\n      radioGroup: \"T1\",\n      brokerFail: false\n    };\n  },\n  methods: {\n    getBrokerState: function getBrokerState() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var urlDesktop, urlRasp, responseState, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:5000\";\n                _context.next = 4;\n                return fetch(\"http://\".concat(urlRasp, \"/broker-state\"), {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n                  }\n                });\n\n              case 4:\n                responseState = _context.sent;\n                _context.next = 7;\n                return responseState.json();\n\n              case 7:\n                res = _context.sent;\n\n                if (res.state == \"ok\") {\n                  _this.brokerFail = false;\n                } else {\n                  _this.brokerFail = true;\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    submitGetData: function submitGetData() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(_this2.carCountChart === true)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return _this2.getData(1);\n\n              case 3:\n                if (!(_this2.truckCountChart === true)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 6;\n                return _this2.getData(2);\n\n              case 6:\n                if (!(_this2.bikeCountChart === true)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 9;\n                return _this2.getData(3);\n\n              case 9:\n                if (!(_this2.doubleParkVehicles === true)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 12;\n                return _this2.getData(4);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getSensors: function getSensors() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var urlDesktop, urlRasp, responseSensors, sensors_res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:5000\";\n                _context3.next = 4;\n                return fetch(\"http://\".concat(urlRasp, \"/sensors\"), {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n                  }\n                });\n\n              case 4:\n                responseSensors = _context3.sent;\n                _context3.next = 7;\n                return responseSensors.json();\n\n              case 7:\n                sensors_res = _context3.sent;\n                _this3.sensors = sensors_res;\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getData: function getData(indicator) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var urlDesktop, urlRasp, sensor, dates, startHour, endHour, startTime, endTime, id, data_json, data_array, data, chart, _chart, _chart2, _chart3;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:5000\";\n                sensor = _this4.radioGroup;\n                dates = _this4.editedItem.dates;\n                startHour = _this4.editedItem.startHour;\n                endHour = _this4.editedItem.endHour;\n                startTime = dayjs(dates[0] + \" \" + startHour).toISOString();\n                endTime = dayjs(dates[1] + \" \" + endHour).toISOString();\n                id = parseInt(indicator);\n                _context4.next = 11;\n                return fetch(\"http://\".concat(urlRasp, \"/chart?sensor=\").concat(sensor, \"&startTime=\").concat(startTime, \"&endTime=\").concat(endTime, \"&indicator=\").concat(id), {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n                  }\n                });\n\n              case 11:\n                data_json = _context4.sent;\n                _context4.next = 14;\n                return data_json.json();\n\n              case 14:\n                data_array = _context4.sent;\n                data = Object.assign.apply(Object, [{}].concat(_toConsumableArray(data_array)));\n\n                if (id === 1) {\n                  _this4.dataCountCar[0].data = data;\n                  chart = Chartkick.charts[\"car-chart\"];\n                  chart.updateData(_this4.dataCountCar);\n                }\n\n                if (id === 2) {\n                  _this4.dataCountTruck[0].data = data;\n                  _chart = Chartkick.charts[\"truck-chart\"];\n\n                  _chart.updateData(_this4.dataCountTruck);\n                }\n\n                if (id === 3) {\n                  _this4.dataCountBike[0].data = data;\n                  _chart2 = Chartkick.charts[\"bike-chart\"];\n\n                  _chart2.updateData(_this4.dataCountBike);\n                }\n\n                if (id === 4) {\n                  _this4.dataCountDoublePark[0].data = data;\n                  _chart3 = Chartkick.charts[\"doublePark-chart\"];\n\n                  _chart3.updateData(_this4.dataCountDoublePark);\n                }\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    handleClick: function handleClick(index) {\n      this.items[index].click.call(this);\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('auth', {\n    isAuth: 'isAuthenticated'\n  })), {}, {\n    dateRangeText: function dateRangeText() {\n      return this.editedItem.dates.join(\"~\");\n    }\n  }),\n  mounted: function mounted() {\n    var _this5 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.getBrokerState();\n\n            case 2:\n              _context5.next = 4;\n              return _this5.getSensors();\n\n            case 4:\n              _context5.next = 6;\n              return _this5.getData(1);\n\n            case 6:\n              _context5.next = 8;\n              return _this5.getData(1);\n\n            case 8:\n              _context5.next = 10;\n              return _this5.getData(2);\n\n            case 10:\n              _context5.next = 12;\n              return _this5.getData(3);\n\n            case 12:\n              _context5.next = 14;\n              return _this5.getData(4);\n\n            case 14:\n              _this5.interval = setInterval(function () {\n                return _this5.getBrokerState();\n              }, 1000);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  beforeDestroy: function beforeDestroy() {\n    var _this6 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              clearInterval(_this6.interval);\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,iBADA;AAGAC;AAAA;AAAA,QAHA;AAIAC,kBACA;AAAA;AAAA,OADA,EAEA;AAAA,eACA,2GACAC,CADA,KAEA,iBAHA;AAAA,OAFA,CAJA;AAYAC,qBACA;AACAC,yBADA;AAEAN;AAFA,OADA,CAZA;AAkBAO,uBACA;AACAD,0BADA;AAEAN;AAFA,OADA,CAlBA;AAwBAQ,sBACA;AACAF,yBADA;AAEAN;AAFA,OADA,CAxBA;AA8BAS,4BACA;AACAH,gCADA;AAEAN;AAFA,OADA,CA9BA;AAqCAU,cACA;AACAC,uBADA;AAEAC,0BAFA;AAGAC,aAHA,mBAGA;AACA;AACA;AALA,OADA,EAQA;AACAF,0BADA;AAEAC,4BAFA;AAGAC,aAHA,mBAGA;AACA;AACA;AALA,OARA,EAeA;AACAF,yBADA;AAEAC,wBAFA;AAGAC,aAHA,mBAGA;AACA;AACA;AALA,OAfA,CArCA;AA6DAC;AACAC,2EADA;AAEAC,0BAFA;AAGAC,wBAHA;AAIAC;AAJA,OA7DA;AAoEAC;AACAJ,2EADA;AAEAC,0BAFA;AAGAC,wBAHA;AAIAC;AAJA,OApEA;AA0EAE,iBA1EA;AA4EAC,sBA5EA;AA6EAC,oBA7EA;AA+EAC,iBA/EA;AAgFAC,iBAhFA;AAkFAC,0BAlFA;AAmFAC,4BAnFA;AAoFAC,2BApFA;AAqFAC,+BArFA;AAsFAC,sBAtFA;AAuFAC;AAvFA;AAyFA,GA3FA;AA6FAC;AACAC,kBADA,4BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,0BADA,GACA,gBADA;AAEAC,uBAFA,GAEA,oBAFA;AAAA;AAAA,uBAIAC;AAAAC;AACA;AADA;AAAA,kBAJA;;AAAA;AAIAC,6BAJA;AAAA;AAAA,uBAOAA,oBAPA;;AAAA;AAOAC,mBAPA;;AASA;AACA;AACA,iBAFA,MAGA;AACA;AACA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,KAhBA;AAiBAC,iBAjBA,2BAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,6BADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBACA,iBADA;;AAAA;AAAA,sBAEA,+BAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,iBAFA;;AAAA;AAAA,sBAGA,8BAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGA,iBAHA;;AAAA;AAAA,sBAIA,kCAJA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,iBAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KAtBA;AAuBAC,cAvBA,wBAuBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAP,0BADA,GACA,gBADA;AAEAC,uBAFA,GAEA,oBAFA;AAAA;AAAA,uBAIAC;AAAAC;AACA;AADA;AAAA,kBAJA;;AAAA;AAIAK,+BAJA;AAAA;AAAA,uBAOAA,sBAPA;;AAAA;AAOAC,2BAPA;AAQA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAhCA;AAkCAC,WAlCA,mBAkCAzB,SAlCA,EAkCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAe,0BADA,GACA,gBADA;AAEAC,uBAFA,GAEA,oBAFA;AAIAU,sBAJA,GAIA,iBAJA;AAKA7B,qBALA,GAKA,uBALA;AAOAC,yBAPA,GAOA,2BAPA;AAQAC,uBARA,GAQA,yBARA;AAUA4B,yBAVA,GAUAC,+CAVA;AAWAC,uBAXA,GAWAD,6CAXA;AAaAE,kBAbA,GAaAC,mBAbA;AAAA;AAAA,uBAeAd,uBACAD,OADA,2BACAU,MADA,wBACAC,SADA,sBACAE,OADA,wBACAC,EADA,GACA;AAAAZ;AACA;AADA;AAAA,iBADA,CAfA;;AAAA;AAeAc,yBAfA;AAAA;AAAA,uBAoBAA,gBApBA;;AAAA;AAoBAC,0BApBA;AAqBAnD,oBArBA,GAqBAoD,wEArBA;;AAuBA;AACA;AACAC,uBAFA,GAEAC,6BAFA;AAGAD;AACA;;AACA;AACA;AACAA,wBAFA,GAEAC,+BAFA;;AAGAD;AACA;;AACA;AACA;AACAA,yBAFA,GAEAC,8BAFA;;AAGAD;AACA;;AACA;AACA;AACAA,yBAFA,GAEAC,oCAFA;;AAGAD;AACA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA,KA7EA;AA+EAE,eA/EA,uBA+EAC,KA/EA,EA+EA;AACA;AACA;AAjFA,GA7FA;AAgLAC,4CACAC;AACAC;AADA,IADA;AAIAC,iBAJA,2BAIA;AACA;AACA;AANA,IAhLA;AAwLAC,SAxLA,qBAwLA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,uBAFA;;AAAA;AAAA;AAAA,qBAIA,mBAJA;;AAAA;AAAA;AAAA,qBAMA,iBANA;;AAAA;AAAA;AAAA,qBAOA,iBAPA;;AAAA;AAAA;AAAA,qBAQA,iBARA;;AAAA;AAAA;AAAA,qBASA,iBATA;;AAAA;AAAA;AAAA,qBAUA,iBAVA;;AAAA;AAYA;AAAA;AAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,GArMA;AAsMAC,eAtMA,2BAsMA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAxMA","names":["data","valid","nameRules","dateRules","v","dataCountCar","name","dataCountTruck","dataCountBike","dataCountDoublePark","items","title","icon","click","editedItem","dates","startHour","endHour","indicator","defaultItem","sensors","menuStart","menuEnd","menu1","menu2","carCountChart","truckCountChart","bikeCountChart","doubleParkVehicles","radioGroup","brokerFail","methods","getBrokerState","urlDesktop","urlRasp","fetch","headers","responseState","res","submitGetData","getSensors","responseSensors","sensors_res","getData","sensor","startTime","dayjs","endTime","id","parseInt","data_json","data_array","Object","chart","Chartkick","handleClick","index","computed","mapGetters","isAuth","dateRangeText","mounted","beforeDestroy","clearInterval"],"sourceRoot":"src/views","sources":["Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app-bar color=\"transparent\" dark elevation=\"0\">\n      <v-img\n        max-height=\"35\"\n        max-width=\"35\"\n        src=\"../assets/logo_simple.png\"\n      ></v-img>\n      <v-toolbar-title class=\"ml-4\">Dashboard</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-menu transition=\"slide-y-transition\" offset-y>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            @click=\"handleClick(index)\"\n          >\n            <v-list-item-icon>\n              <v-icon v-text=\"item.icon\"></v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n    <v-row no-gutters>\n      <v-col cols=\"1\" sm=\"1\" md=\"3\">\n        <v-card\n          class=\"d-flex ml-5 mr-2 mt-13 pa-6\"\n          width=\"290\"\n          elevation=\"20\"\n          outlined\n        >\n          <v-card-text>\n            <h2 class=\"text-h6 text--primary\">Sensors</h2>\n            <v-radio-group v-model=\"radioGroup\" mandatory>\n              <v-radio\n                v-for=\"(sensor, idx) in sensors\"\n                :key=\"idx\"\n                :label=\"`${sensor.name}`\"\n                :value=\"sensor.name\"\n              ></v-radio> \n            </v-radio-group>\n\n            <div class=\"my-5\">\n              <v-form ref=\"form\" v-model=\"valid\">\n                <h2 class=\"text-h6 text--primary\">Time</h2>\n                <v-menu\n                  v-model=\"menu2\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  min-width=\"auto\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"dateRangeText\"\n                      label=\"Select date range\"\n                      prepend-icon=\"mdi-calendar\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      required\n                      :rules=\"dateRules\"\n                    ></v-text-field>\n                  </template>\n                  <v-date-picker\n                    v-model=\"editedItem.dates\"\n                    range\n                  ></v-date-picker>\n                </v-menu>\n                <v-menu\n                  ref=\"menu1\"\n                  v-model=\"menuStart\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  :return-value.sync=\"editedItem.startHour\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  max-width=\"290px\"\n                  min-width=\"290px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"editedItem.startHour\"\n                      label=\"Start Time\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      :rules=\"nameRules\"\n                      required\n                    ></v-text-field>\n                  </template>\n                  <v-time-picker\n                    v-if=\"menuStart\"\n                    v-model=\"editedItem.startHour\"\n                    format=\"24h\"\n                    scrollable\n                    full-width\n                    @click:minute=\"$refs.menu1.save(editedItem.startHour)\"\n                  ></v-time-picker>\n                </v-menu>\n\n                <v-menu\n                  ref=\"menu2\"\n                  v-model=\"menuEnd\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  :return-value.sync=\"editedItem.endHour\"\n                  transition=\"scale-transition\"\n                  offset-y\n                  max-width=\"290px\"\n                  min-width=\"290px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field\n                      v-model=\"editedItem.endHour\"\n                      label=\"End Time\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      :rules=\"nameRules\"\n                      required\n                    ></v-text-field>\n                  </template>\n                  <v-time-picker\n                    v-if=\"menuEnd\"\n                    v-model=\"editedItem.endHour\"\n                    format=\"24h\"\n                    scrollable\n                    full-width\n                    @click:minute=\"$refs.menu2.save(editedItem.endHour)\"\n                  ></v-time-picker>\n                </v-menu>\n              </v-form>\n            </div>\n\n            <h2 class=\"text-h6 text--primary\">Indicators</h2>\n            <v-checkbox\n              v-model=\"carCountChart\"\n              label=\"Car Flow\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-model=\"truckCountChart\"\n              label=\"Truck Flow\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-model=\"bikeCountChart\"\n              label=\"Bike flow\"\n              hide-details\n            ></v-checkbox>\n            <v-checkbox\n              v-model=\"doubleParkVehicles\"\n              label=\"Double Park Vehicles\"\n              hide-details\n            ></v-checkbox>\n            <v-btn\n              depressed\n              color=\"primary\"\n              class=\"d-flex mt-10\"\n              @click=\"submitGetData\"\n              :disabled=\"!valid\"\n            >\n              Submit\n            </v-btn>\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <v-col cols=\"6\" md=\"10\" no-gutters class=\"mt-13\">\n        <v-row no-gutters max-height=\"800\">\n          <v-card\n            class=\"d-flex mb-4 pt-1 ml-3 px-5\"\n            width=\"750\"\n            height=\"380\"\n            outlined\n          >\n          <v-col>\n            <h1 class=\"d-flex justify-center mb-3 font-weight-regular\">Car Flow</h1>\n            <area-chart\n              :data=\"dataCountCar\"\n              :colors=\"['#db1e1e']\"\n              id=\"car-chart\"\n              xtitle=\"Time\"\n              ytitle=\"Number of Cars\"\n              empty=\"No data\"\n              :dataset=\"{ borderWidth: 2 }\"\n            ></area-chart>\n          </v-col>\n          </v-card>\n\n          <v-card\n            class=\"d-flex ml-3 mb-4 pt-1 px-5 flex-wrap\"\n            width=\"750\"\n            height=\"380\"\n            outlined\n          >\n          <v-col>\n            <h1 class=\"d-flex justify-center mb-3 font-weight-regular\">Truck Flow</h1>\n            <area-chart\n              :data=\"dataCountTruck\"\n              :colors=\"['#32a852']\"\n              id=\"truck-chart\"\n              xtitle=\"Time\"\n              ytitle=\"Number of Trucks\"\n              empty=\"No data\"\n              :dataset=\"{ borderWidth: 2 }\"\n            ></area-chart>\n          </v-col>\n          </v-card>\n\n          <v-card\n            class=\"d-flex ml-3 pt-1 px-5 mb-4\"\n            width=\"750\"\n            height=\"380\"\n            outlined\n          >\n          <v-col>\n             <h1 class=\"d-flex justify-center mb-3 font-weight-regular\">Bike Flow</h1>\n             <area-chart\n              :data=\"dataCountBike\"\n              :colors=\"['#dbcb1e']\"\n              id=\"bike-chart\"\n              xtitle=\"Time\"\n              ytitle=\"Number of Bikes\"\n              empty=\"No data\"\n              :dataset=\"{ borderWidth: 2 }\"\n            ></area-chart>\n          </v-col>\n           \n          </v-card>\n\n          <v-card\n            class=\"d-flex ml-3 pt-2 px-5\"\n            width=\"750\"\n            height=\"380\"\n            outlined\n          >\n          <v-col>\n            <h1 class=\"d-flex justify-center mb-3 font-weight-regular\">Double-Park Vehicles</h1>\n            <area-chart\n              :data=\"dataCountDoublePark\"\n              :colors=\"['#721edb']\"\n              id=\"doublePark-chart\"\n              xtitle=\"Time\"\n              ytitle=\"Number of Double-Parked Vehicles\"\n              empty=\"No data\"\n              :dataset=\"{ borderWidth: 2 }\"\n            ></area-chart>\n          </v-col>\n            \n          </v-card>\n        </v-row>\n      </v-col>\n    </v-row>\n\n    <div class=\"text-center\">\n      <v-snackbar v-model=\"brokerFail\" color=\"red\" >\n        <h2 class=\"font-weight-medium\">BROKER COMMUNICATION DOWN!</h2>\n\n        <template v-slot:action=\"{ attrs }\">\n          <v-btn\n            color=\"white\"\n            text\n            v-bind=\"attrs\"\n            @click=\"brokerFail = false\"\n          >\n            Close\n          </v-btn>\n        </template>\n      </v-snackbar>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport * as dayjs from \"dayjs\";\nimport { mapGetters } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      valid: true,\n      \n      nameRules: [(v) => !!v],\n      dateRules: [\n        (v) => !!v || \"Insert 2 dates\",\n        (v) =>\n          /^\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])~\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/.test(\n            v\n          ) || \"Insert 2 dates!\",\n      ],\n\n      dataCountCar: [\n        {\n          name: \"Car Count\",\n          data: {},\n        },\n      ],\n      dataCountTruck: [\n        {\n          name: \"Truck Flow\",\n          data: {},\n        },\n      ],\n      dataCountBike: [\n        {\n          name: \"Bike Flow\",\n          data: {},\n        },\n      ],\n      dataCountDoublePark: [\n        {\n          name: \"Double-Park Flow\",\n          data: {},\n        },\n      ],\n\n      items: [\n        {\n          title: \"Logout\",\n          icon: \"mdi-logout\",\n          click() {\n            this.$store.dispatch('logout');\n          },\n        },\n        {\n          title: \"Processes\",\n          icon: \"mdi-auto-fix\",\n          click() {\n            this.$router.push(\"processes\");\n          },\n        },\n        {\n          title: \"Settings\",\n          icon: \"mdi-cogs\",\n          click() {\n            this.$router.push(\"settings\");\n          },\n        },\n      ],\n      \n      editedItem: {\n        dates: [dayjs().format('YYYY-MM-DD'),dayjs().format('YYYY-MM-DD')],\n        startHour: \"00:00\",\n        endHour: \"23:59\",\n        indicator: \"\",\n      },\n\n      defaultItem: {\n        dates: [dayjs().format('YYYY-MM-DD'),dayjs().format('YYYY-MM-DD')],\n        startHour: \"00:00\",\n        endHour: \"23:59\",\n        indicator: \"\",\n      },\n      sensors: [],\n\n      menuStart: false,\n      menuEnd: false,\n\n      menu1: null,\n      menu2: null,\n\n      carCountChart: false,\n      truckCountChart: false,\n      bikeCountChart: false,\n      doubleParkVehicles: false,\n      radioGroup: \"T1\",\n      brokerFail: false\n    };\n  },\n\n  methods: {\n    async getBrokerState() {\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:5000\";\n\n      const responseState= await fetch(`http://${urlRasp}/broker-state`, {headers: {\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }});\n      const res = await responseState.json();\n\n      if (res.state == \"ok\") {\n        this.brokerFail = false\n      }\n      else {\n        this.brokerFail = true\n      }\n    },\n    async submitGetData() {\n      if (this.carCountChart === true) await this.getData(1);\n      if (this.truckCountChart === true) await this.getData(2);\n      if (this.bikeCountChart === true) await this.getData(3);\n      if (this.doubleParkVehicles === true) await this.getData(4);\n    },\n    async getSensors() {\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:5000\";\n\n      const responseSensors = await fetch(`http://${urlRasp}/sensors`, {headers: {\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }});\n      const sensors_res = await responseSensors.json();\n      this.sensors = sensors_res;\n    },\n\n    async getData(indicator) {\n      const urlDesktop = \"127.0.0.1:5000\";\n      const urlRasp = \"192.168.1.216:5000\";\n\n      const sensor = this.radioGroup;\n      const dates = this.editedItem.dates;\n\n      const startHour = this.editedItem.startHour;\n      const endHour = this.editedItem.endHour;\n\n      const startTime = dayjs(dates[0] + \" \" + startHour).toISOString();\n      const endTime = dayjs(dates[1] + \" \" + endHour).toISOString();\n\n      let id = parseInt(indicator);\n\n      const data_json = await fetch(\n        `http://${urlRasp}/chart?sensor=${sensor}&startTime=${startTime}&endTime=${endTime}&indicator=${id}`, {headers: {\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }}\n      );\n      const data_array = await data_json.json();\n      const data = Object.assign({}, ...data_array);\n      \n      if (id === 1) {\n        this.dataCountCar[0].data = data;\n        let chart = Chartkick.charts[\"car-chart\"];\n        chart.updateData(this.dataCountCar);\n      }\n      if (id === 2) {\n        this.dataCountTruck[0].data = data;\n        let chart = Chartkick.charts[\"truck-chart\"];\n        chart.updateData(this.dataCountTruck);\n      }\n      if (id === 3) {\n        this.dataCountBike[0].data = data;\n        let chart = Chartkick.charts[\"bike-chart\"];\n        chart.updateData(this.dataCountBike);\n      }\n      if (id === 4) {\n        this.dataCountDoublePark[0].data = data;\n        let chart = Chartkick.charts[\"doublePark-chart\"];\n        chart.updateData(this.dataCountDoublePark);\n      }\n    },\n\n    handleClick(index) {\n      this.items[index].click.call(this);\n    },\n  },\n  computed: {\n    ...mapGetters('auth', {\n\t\t\t\tisAuth: 'isAuthenticated',\n\t\t\t}),\n    dateRangeText() {\n      return this.editedItem.dates.join(\"~\");\n    },\n  },\n  async mounted() {\n    \n    await this.getBrokerState();\n\n    await this.getSensors();\n\n    await this.getData(1);\n    await this.getData(1);\n    await this.getData(2);\n    await this.getData(3);\n    await this.getData(4);\n    \n    this.interval = setInterval(() => this.getBrokerState(), 1000);\n  },\n  async beforeDestroy() {\n    clearInterval(this.interval)\n  },\n\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}