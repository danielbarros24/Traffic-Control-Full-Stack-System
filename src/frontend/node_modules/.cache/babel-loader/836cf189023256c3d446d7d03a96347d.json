{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Rete from \"rete\";\nimport * as Socket from \"../sockets\";\nimport Node from \"rete-vue-render-plugin/src/end/Node.vue\";\nimport { SelectControl } from \"@/node-editor/controls/SelectControl/SelectControl\";\nimport { SwitchControl } from \"@/node-editor/controls/SwitchControl/SwitchControl\";\nexport var GpioComponent = /*#__PURE__*/function (_Rete$Component) {\n  _inherits(GpioComponent, _Rete$Component);\n\n  var _super = _createSuper(GpioComponent);\n\n  function GpioComponent() {\n    var _this;\n\n    _classCallCheck(this, GpioComponent);\n\n    _this = _super.call(this, \"GPIO\");\n    _this.data.component = Node;\n    return _this;\n  }\n\n  _createClass(GpioComponent, [{\n    key: \"builder\",\n    value: function () {\n      var _builder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(node) {\n        var urlDesktop, urlRasp, responseGpios, jsonGpios, input;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                urlDesktop = \"127.0.0.1:5000\";\n                urlRasp = \"192.168.1.216:5000\";\n                _context.next = 4;\n                return fetch(\"http://\".concat(urlDesktop, \"/pins\"), {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n                  }\n                });\n\n              case 4:\n                responseGpios = _context.sent;\n                _context.next = 7;\n                return responseGpios.json();\n\n              case 7:\n                jsonGpios = _context.sent;\n\n                if (!(node.data.gpio === undefined || node.data.gpio === null)) {\n                  jsonGpios.push(node.data.gpio);\n                }\n\n                input = new Rete.Input('num', \"Input\", Socket.boolean, true);\n                return _context.abrupt(\"return\", node.addInput(input).addControl(new SelectControl(this.editor, 'gpio', jsonGpios.map(function (value) {\n                  return {\n                    text: \"GPIO \".concat(value),\n                    value: value\n                  };\n                }), \"GPIO\")).addControl(new SwitchControl(this.editor, 'inverted')));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function builder(_x) {\n        return _builder.apply(this, arguments);\n      }\n\n      return builder;\n    }()\n  }, {\n    key: \"worker\",\n    value: function worker(node, inputs, outputs) {}\n  }, {\n    key: \"toJsonLogic\",\n    value: function toJsonLogic(node) {\n      var _connectionComponent$;\n\n      var inputs = node.inputs;\n\n      if (inputs.length == 0) {\n        return {};\n      }\n\n      var inputNum = inputs.get('num');\n      var connections = inputNum.connections;\n\n      if (connections.length == 0) {\n        return {};\n      }\n\n      var connection = connections[0];\n      var connectionNode = connection.output.node;\n      var connectionComponent = this.editor.getComponent(connectionNode.name);\n      return (_connectionComponent$ = connectionComponent.toJsonLogic) === null || _connectionComponent$ === void 0 ? void 0 : _connectionComponent$.call(connectionComponent, connectionNode);\n    }\n  }, {\n    key: \"toGPIO\",\n    value: function toGPIO(node) {\n      var gpio = parseInt(node.data.gpio);\n      var inverted = node.data.inverted;\n      return {\n        gpio: gpio,\n        inverted: inverted\n      };\n    }\n  }]);\n\n  return GpioComponent;\n}(Rete.Component);","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/node-editor/components/GpioComponent.js"],"names":["Rete","Socket","Node","SelectControl","SwitchControl","GpioComponent","data","component","node","urlDesktop","urlRasp","fetch","headers","localStorage","getItem","responseGpios","json","jsonGpios","gpio","undefined","push","input","Input","boolean","addInput","addControl","editor","map","value","text","inputs","outputs","length","inputNum","get","connections","connection","connectionNode","output","connectionComponent","getComponent","name","toJsonLogic","parseInt","inverted","Component"],"mappings":"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","sourcesContent":["import Rete from \"rete\";\nimport * as Socket from \"../sockets\";\n\nimport Node from \"rete-vue-render-plugin/src/end/Node.vue\";\nimport { SelectControl } from \"@/node-editor/controls/SelectControl/SelectControl\";\nimport { SwitchControl } from \"@/node-editor/controls/SwitchControl/SwitchControl\";\n\nexport class GpioComponent extends Rete.Component {\n    constructor(){\n        super(\"GPIO\");\n        this.data.component = Node;\n    }\n\n    async builder(node) {\n        const urlDesktop = \"127.0.0.1:5000\"\n        const urlRasp = \"192.168.1.216:5000\"\n        \n        const responseGpios = await fetch(`http://${urlDesktop}/pins`, {headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n          }});\n        const jsonGpios = await responseGpios.json();\n        if (!(node.data.gpio === undefined || node.data.gpio === null)) {\n            jsonGpios.push(node.data.gpio)\n        }\n        \n      \n        var input = new Rete.Input('num', \"Input\", Socket.boolean, true);\n        return node\n          .addInput(input)\n          .addControl(new SelectControl(this.editor, 'gpio', jsonGpios.map((value) => ({\n            text: `GPIO ${value}`, value: value,\n          })), \"GPIO\"))\n          .addControl(new SwitchControl(this.editor, 'inverted'))\n    }\n\n    worker(node, inputs, outputs) {\n    }\n\n    toJsonLogic(node) {\n        const { inputs } = node;\n\n        if (inputs.length == 0) {\n            return {};\n        }\n\n        const inputNum = inputs.get('num')\n        const { connections } = inputNum;\n\n        if (connections.length == 0) {\n            return {};\n        }\n\n        const connection = connections[0];\n        const connectionNode = connection.output.node;\n        const connectionComponent = this.editor.getComponent(connectionNode.name);\n\n        return connectionComponent.toJsonLogic?.(connectionNode);\n    }\n\n    toGPIO(node) {\n        const gpio = parseInt(node.data.gpio)\n        const inverted = node.data.inverted\n\n        return {gpio, inverted}\n    }\n}"]},"metadata":{},"sourceType":"module"}