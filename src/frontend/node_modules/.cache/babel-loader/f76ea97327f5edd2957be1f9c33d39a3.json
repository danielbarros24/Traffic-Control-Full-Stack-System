{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Index from '../views/Index.vue';\nimport Dashboard from '../views/Dashboard.vue';\nimport Login from '../views/Login.vue';\nimport Processes from '../views/Processes.vue';\nimport Settings from '../views/Settings.vue';\nimport axiosAuth from '@/api/axios-auth';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/dashboard',\n  name: 'dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/processes',\n  name: 'processes',\n  component: Processes,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/settings',\n  name: 'settings',\n  component: Settings,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/',\n  name: 'index',\n  component: Index,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  let token = localStorage.getItem('token');\n  let requireAuth = to.matched.some(record => record.meta.requiresAuth);\n\n  if (!requireAuth) {\n    next();\n  }\n\n  if (requireAuth && !token) {\n    next('/login');\n  }\n\n  if (to.path === '/login') {\n    if (token) {\n      axiosAuth.post('/verify-token').then(() => {\n        next('/dashboard');\n      }).catch(() => {\n        next();\n      });\n    } else {\n      next();\n    }\n  }\n\n  if (requireAuth && token) {\n    axiosAuth.post('/verify-token').then(() => {\n      next();\n    }).catch(() => {\n      next('/login');\n    });\n  }\n});\nexport default router;","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/router/index.js"],"names":["Vue","VueRouter","Index","Dashboard","Login","Processes","Settings","axiosAuth","use","routes","path","name","component","meta","requiresAuth","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","requireAuth","matched","some","record","post","then","catch"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEAP,GAAG,CAACQ,GAAJ,CAAQP,SAAR;AAEA,MAAMQ,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAET,SAHb;AAIEU,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB;AAJR,CADa,EAOb;AACEJ,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAER;AAHb,CAPa,EAYb;AACEM,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAEP,SAHb;AAIEQ,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB;AAJR,CAZa,EAkBb;AACEJ,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAEN,QAHb;AAIEO,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB;AAJR,CAlBa,EAwBb;AACDJ,EAAAA,IAAI,EAAE,GADL;AAEDC,EAAAA,IAAI,EAAE,OAFL;AAGDC,EAAAA,SAAS,EAAEV,KAHV;AAIDW,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB;AAJL,CAxBa,CAAf;AAgCA,MAAMC,MAAM,GAAG,IAAId,SAAJ,CAAc;AAC3Be,EAAAA,IAAI,EAAE,SADqB;AAE3BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFS;AAG3BX,EAAAA;AAH2B,CAAd,CAAf;AAOAM,MAAM,CAACM,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;AACrC,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,WAAW,GAAGN,EAAE,CAACO,OAAH,CAAWC,IAAX,CAAgBC,MAAM,IAAIA,MAAM,CAAClB,IAAP,CAAYC,YAAtC,CAAlB;;AAEA,MAAI,CAACc,WAAL,EAAkB;AACjBJ,IAAAA,IAAI;AACJ;;AAED,MAAII,WAAW,IAAI,CAACH,KAApB,EAA2B;AAC1BD,IAAAA,IAAI,CAAC,QAAD,CAAJ;AACA;;AAED,MAAIF,EAAE,CAACZ,IAAH,KAAY,QAAhB,EAA0B;AACzB,QAAIe,KAAJ,EAAW;AACVlB,MAAAA,SAAS,CAACyB,IAAV,CAAe,eAAf,EAAgCC,IAAhC,CAAqC,MAAM;AAC1CT,QAAAA,IAAI,CAAC,YAAD,CAAJ;AACA,OAFD,EAEGU,KAFH,CAES,MAAM;AACdV,QAAAA,IAAI;AACJ,OAJD;AAKA,KAND,MAOK;AACJA,MAAAA,IAAI;AACJ;AACD;;AAED,MAAII,WAAW,IAAIH,KAAnB,EAA0B;AACzBlB,IAAAA,SAAS,CAACyB,IAAV,CAAe,eAAf,EAAgCC,IAAhC,CAAqC,MAAM;AAC1CT,MAAAA,IAAI;AACJ,KAFD,EAEGU,KAFH,CAES,MAAM;AACdV,MAAAA,IAAI,CAAC,QAAD,CAAJ;AACA,KAJD;AAKA;AACD,CAhCD;AAmCA,eAAeT,MAAf","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nimport Index from '../views/Index.vue'\nimport Dashboard from '../views/Dashboard.vue'\nimport Login from '../views/Login.vue'\nimport Processes from '../views/Processes.vue'\nimport Settings from '../views/Settings.vue'\nimport axiosAuth from '@/api/axios-auth'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: Dashboard,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: Login\n  },\n  {\n    path: '/processes',\n    name: 'processes',\n    component: Processes,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/settings',\n    name: 'settings',\n    component: Settings,\n    meta: { requiresAuth: true }\n  },\n  { \n\tpath: '/',\n\tname: 'index',\n\tcomponent: Index,\n\tmeta: { requiresAuth: true }\n  },\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n\nrouter.beforeEach((to, from, next) => {\n\tlet token = localStorage.getItem('token');\n\tlet requireAuth = to.matched.some(record => record.meta.requiresAuth);\n\n\tif (!requireAuth) {\n\t\tnext();\n\t}\n\n\tif (requireAuth && !token) {\n\t\tnext('/login');\n\t}\n\n\tif (to.path === '/login') {\n\t\tif (token) {\n\t\t\taxiosAuth.post('/verify-token').then(() => {\n\t\t\t\tnext('/dashboard');\n\t\t\t}).catch(() => {\n\t\t\t\tnext();\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tnext();\n\t\t}\n\t}\n\n\tif (requireAuth && token) {\n\t\taxiosAuth.post('/verify-token').then(() => {\n\t\t\tnext();\n\t\t}).catch(() => {\n\t\t\tnext('/login');\n\t\t})\n\t}\n});\n\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}