{"ast":null,"code":"import _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ReteEditor from \"@/components/rete/ReteEditor\";\nimport * as dayjs from 'dayjs';\nexport default {\n  name: \"Automations\",\n  components: {\n    ReteEditor: ReteEditor\n  },\n  data: function data() {\n    return {\n      gpios: [],\n      value: null,\n      items: [{\n        title: \"Logout\",\n        icon: \"mdi-logout\",\n        click: function click() {\n          this.$router.push(\"/\");\n        }\n      }, {\n        title: \"Dashboard\",\n        icon: \"mdi-view-dashboard\",\n        click: function click() {\n          this.$router.push(\"dashboard\");\n        }\n      }, {\n        title: \"Settings\",\n        icon: \"mdi-cogs\",\n        click: function click() {\n          this.$router.push(\"settings\");\n        }\n      }],\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n      switch1: false,\n      AutomationName: \"\",\n      dialog: false,\n      rule_dialog: false,\n      dialogDelete: false,\n      headers: [{\n        text: \"\",\n        value: \"enable\",\n        sortable: false,\n        width: 0\n      }, {\n        text: \"Name\",\n        align: \"start\",\n        value: \"name\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      automations: [],\n      editedIndex: -1,\n      editedItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {}\n      },\n      defaultItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {}\n      },\n      editor: null,\n      editorJSON: \"\",\n      nameRules: [function (v) {\n        return !!v || 'Name is required';\n      }]\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New Process\" : \"Edit Processes\";\n    },\n    dateRangeText: function dateRangeText() {\n      return this.editedItem.dates.join(\" ~ \");\n    },\n    allGpios: function allGpios() {\n      if (this.editedIndex < 0) {\n        return this.gpios.sort(function (a, b) {\n          return a.value - b.value;\n        });\n      }\n\n      return this.gpios.concat(this.automations[this.editedIndex].gpios.map(function (value) {\n        return {\n          text: \"GPIO \".concat(value),\n          value: value\n        };\n      })).sort(function (a, b) {\n        return a.value - b.value;\n      });\n    },\n    orderEditedGpios: {\n      get: function get() {\n        return this.editedItem.gpios.sort(function (a, b) {\n          return a - b;\n        });\n      },\n      set: function set(value) {\n        this.editedItem.gpios = value;\n      }\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    dialogDelete: function dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var responseAutomations, jsonAutomations;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://127.0.0.1:5000/automation\");\n\n            case 2:\n              responseAutomations = _context.sent;\n              _context.next = 5;\n              return responseAutomations.json();\n\n            case 5:\n              jsonAutomations = _context.sent;\n              _this.automations = jsonAutomations.map(function (val) {\n                var startTime = new Date(val.startTime);\n                var endTime = new Date(val.endTime);\n                delete val.startTime;\n                delete val.endTime;\n                val.dates = [\"\".concat(dayjs(startTime).format('YYYY-MM-DD')), \"\".concat(dayjs(endTime).format('YYYY-MM-DD'))];\n                val.startHour = \"\".concat(dayjs(startTime).format('HH:mm'));\n                val.endHour = \"\".concat(dayjs(endTime).format('HH:mm'));\n                return val;\n              });\n\n              _this.getPins();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    createNodeClick: function createNodeClick() {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleClick: function handleClick(index) {\n      this.items[index].click.call(this);\n    },\n    clickLogo: function clickLogo() {\n      this.$router.push(\"dashboard\");\n    },\n    getPins: function getPins() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var responseGpios, jsonGpios;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"http://127.0.0.1:5000/pins\");\n\n              case 2:\n                responseGpios = _context3.sent;\n                _context3.next = 5;\n                return responseGpios.json();\n\n              case 5:\n                jsonGpios = _context3.sent;\n                _this2.gpios = jsonGpios.map(function (value) {\n                  return {\n                    text: \"GPIO \".concat(value),\n                    value: value\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    editItem: function editItem(item) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this3.editedIndex = _this3.automations.indexOf(item);\n                _this3.editedItem = Object.assign({}, item);\n                _this3.dialog = true;\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                  var blueprint;\n                  return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          blueprint = _this3.editedItem.blueprint;\n                          _context4.next = 3;\n                          return _this3.editor.fromJSON(blueprint);\n\n                        case 3:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                })), 200);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    createItem: function createItem() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this4.dialog = true;\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                  return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return _this4.editor.clear();\n\n                        case 2:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                })), 200);\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    deleteItem: function deleteItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm: function deleteItemConfirm() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                id = _this5.editedItem.id;\n                _context8.next = 3;\n                return fetch(\"http://127.0.0.1:5000/automation?id=\".concat(id), {\n                  method: \"DELETE\"\n                });\n\n              case 3:\n                _this5.automations.splice(_this5.editedIndex, 1);\n\n                _this5.closeDelete();\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    close: function close() {\n      var _this6 = this;\n\n      this.dialog = false;\n      this.$nextTick(function () {\n        _this6.editedItem = Object.assign({}, _this6.defaultItem);\n        _this6.editedIndex = -1;\n      });\n    },\n    closeDelete: function closeDelete() {\n      var _this7 = this;\n\n      this.dialogDelete = false;\n      this.$nextTick(function () {\n        _this7.editedItem = Object.assign({}, _this7.defaultItem);\n        _this7.editedIndex = -1;\n      });\n    },\n    save: function save() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var _endComponent$toJsonL;\n\n        var editor, blueprint, endNode, endComponent, logic, dates, startHour, endHour, startTime, endTime, automation, file, id;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                editor = _this8.editor;\n                _context9.next = 3;\n                return editor.toJSON();\n\n              case 3:\n                blueprint = _context9.sent;\n                endNode = _this8.editor.nodes.find(function (node) {\n                  return node.name === \"End\";\n                });\n                endComponent = editor.getComponent(\"End\");\n                logic = (_endComponent$toJsonL = endComponent.toJsonLogic) === null || _endComponent$toJsonL === void 0 ? void 0 : _endComponent$toJsonL.call(endComponent, endNode);\n                dates = _this8.editedItem.dates;\n                startHour = _this8.editedItem.startHour;\n                endHour = _this8.editedItem.endHour;\n                startTime = dayjs(dates[0] + ' ' + startHour).toISOString();\n                endTime = dayjs(dates[1] + ' ' + endHour).toISOString();\n                automation = {\n                  name: _this8.editedItem.name,\n                  startTime: startTime,\n                  endTime: endTime,\n                  enable: _this8.editedItem.enable,\n                  gpios: _this8.editedItem.gpios,\n                  rules: logic,\n                  blueprint: blueprint\n                };\n                file = JSON.stringify(automation); //console.log(file);\n\n                if (!(_this8.editedIndex > -1)) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                id = _this8.editedItem.id;\n                _context9.next = 18;\n                return fetch(\"http://127.0.0.1:5000/automation?id=\".concat(id), {\n                  method: \"PATCH\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: file\n                });\n\n              case 18:\n                Object.assign(_this8.automations[_this8.editedIndex], _this8.editedItem);\n                _context9.next = 24;\n                break;\n\n              case 21:\n                _context9.next = 23;\n                return fetch(\"http://127.0.0.1:5000/automation\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: file\n                });\n\n              case 23:\n                _this8.automations.push(_this8.editedItem);\n\n              case 24:\n                _this8.close();\n\n              case 25:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    },\n    updateEnable: function updateEnable(event, item) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                id = item.id;\n                _context10.next = 3;\n                return fetch(\"http://127.0.0.1:5000/automation?id=\".concat(id), {\n                  method: \"PATCH\",\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    enable: !!event\n                  })\n                });\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }))();\n    },\n    onValidate: function onValidate() {\n      var _this9 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        var _endComponent$toJsonL2;\n\n        var editor, endNode, endComponent;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                editor = _this9.editor;\n                endNode = _this9.editor.nodes.find(function (node) {\n                  return node.name === \"End\";\n                });\n                endComponent = editor.getComponent(\"End\");\n\n                _this9.$refs.form.validate();\n\n                console.log(JSON.stringify((_endComponent$toJsonL2 = endComponent.toJsonLogic) === null || _endComponent$toJsonL2 === void 0 ? void 0 : _endComponent$toJsonL2.call(endComponent, endNode)));\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }))();\n    }\n    /*async onEditorImport() {\n      await this.editor.fromJSON(JSON.parse(this.editorJSON));\n    },\n     async onEditorSync() {\n      this.editorJSON = JSON.stringify(await this.editor.toJSON());\n    },*/\n\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","ReteEditor","data","gpios","value","items","title","icon","click","menuStart","menuEnd","menu1","menu2","switch1","AutomationName","dialog","rule_dialog","dialogDelete","headers","text","sortable","width","align","automations","editedIndex","editedItem","id","rule","enable","dates","startHour","endHour","blueprint","defaultItem","editor","editorJSON","nameRules","computed","formTitle","dateRangeText","allGpios","orderEditedGpios","get","set","watch","val","mounted","fetch","responseAutomations","jsonAutomations","dayjs","methods","createNodeClick","handleClick","index","clickLogo","getPins","responseGpios","jsonGpios","editItem","item","setTimeout","createItem","deleteItem","deleteItemConfirm","method","close","closeDelete","save","endNode","endComponent","logic","startTime","endTime","automation","rules","file","JSON","body","Object","updateEnable","event","onValidate","console"],"sourceRoot":"src/views","sources":["Processes.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app-bar color=\"transparent\" dark elevation=\"0\">\n      <v-img\n        max-height=\"35\"\n        max-width=\"35\"\n        src=\"../assets/logo_simple.png\"\n        @click=\"clickLogo()\"\n      ></v-img>\n      <v-toolbar-title class=\"ml-4\">Processes</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-menu transition=\"slide-y-transition\" offset-y>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            @click=\"handleClick(index)\"\n          >\n            <v-list-item-icon>\n              <v-icon v-text=\"item.icon\"></v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"automations\"\n      class=\"elevation-24 mt-13\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title class=\"font-weight-bold\"\n            >Processes</v-toolbar-title\n          >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            depressed\n            elevation=\"4\"\n            raised\n            mx-auto\n            rounded\n            dark\n            @click=\"createItem(); getPins();\"\n          >\n            <v-icon class=\"mr-3\">mdi-plus</v-icon>Create process\n          </v-btn>\n          <v-dialog v-model=\"dialog\" full-screen>\n            <v-card overflow-hidden>\n              <v-card-title>\n                <span class=\"text-h4 font-weight-bold\">{{ formTitle }}</span>\n              </v-card-title>\n              <v-card-actions>\n                <v-btn color=\"primary\" text @click=\"save\">\n                  Save\n                </v-btn>\n                <v-btn color=\"primary\" text @click=\"close\">\n                  Cancel\n                </v-btn>\n              </v-card-actions>\n\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"4\" md=\"2\">\n                    <h2 class=\"mt-12\">Name</h2>\n                    <v-text-field\n                      v-model=\"editedItem.name\"\n                      label=\"Insert process Name Here!\"\n                      class=\"mt-3 mb-6\"\n                      required\n                      :rules=\"nameRules\"\n                    ></v-text-field>\n\n                    <div>\n                      <h2>Time</h2>\n                      <v-menu\n                        v-model=\"menu2\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        min-width=\"auto\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"dateRangeText\"\n                            label=\"Select date range\"\n                            prepend-icon=\"mdi-calendar\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mt-3\"\n                            required\n                          ></v-text-field>\n                        </template>\n                        <v-date-picker\n                          v-model=\"editedItem.dates\"\n                          range\n                        ></v-date-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu1\"\n                        v-model=\"menuStart\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"editedItem.startHour\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"editedItem.startHour\"\n                            label=\"Start Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            required\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuStart\"\n                          v-model=\"editedItem.startHour\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu1.save(editedItem.startHour)\"\n                        ></v-time-picker>\n                      </v-menu>\n\n                      <v-menu\n                        ref=\"menu2\"\n                        v-model=\"menuEnd\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"editedItem.endHour\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"editedItem.endHour\"\n                            label=\"End Time\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            class=\"mb-6\"\n                            required\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker\n                          v-if=\"menuEnd\"\n                          v-model=\"editedItem.endHour\"\n                          format=\"24h\"\n                          scrollable\n                          full-width\n                          @click:minute=\"$refs.menu2.save(editedItem.endHour)\"\n                        ></v-time-picker>\n                      </v-menu>\n                    </div>\n\n                    <div>\n                      <h2>Outputs</h2>\n                      <v-row>\n                        <v-autocomplete\n                          v-model=\"orderEditedGpios\"\n                          :items=\"allGpios\"\n                          chips\n                          deletable-chips\n                          multiple\n                          label=\"Select GPIOS as outputs\"\n                          class=\"ml-3 mt-3 mb-6\"\n                          required\n                        >\n                          <template v-slot:item=\"{ item, on, attrs }\">\n                            <v-list-item v-on=\"on\" v-bind=\"attrs\">\n                              <v-list-item-content>\n                                <v-list-item-title>\n                                  <v-chip dark color=\"primary\">\n                                    {{ item.text }}\n                                  </v-chip>\n                                </v-list-item-title>\n                              </v-list-item-content>\n                            </v-list-item>\n                          </template>\n                        </v-autocomplete>\n                      </v-row>\n                    </div>\n\n                    <div>\n                      <h2>Enable</h2>\n                      <v-switch color=\"primary\" v-model=\"editedItem.enable\"></v-switch>\n                    </div>\n\n                    <v-btn @click=\"onValidate\">Validate</v-btn>\n\n                    <!-- <v-textarea v-model=\"editorJSON\"></v-textarea> -->\n                    <!-- <v-btn @click=\"onEditorSync\">Sync</v-btn> -->\n                    <!-- <v-btn @click=\"onEditorImport\">Import</v-btn> --> \n                  </v-col>\n                  <v-col md=\"10\">\n                    <ReteEditor v-model=\"editor\" />\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-dialog>\n\n          <v-dialog v-model=\"dialogDelete\" max-width=\"573px\">\n            <v-card>\n              <v-card-title class=\"text-h5\"\n                >Are you sure you want to delete this processs?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"primary\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"primary\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.enable`]=\"{ item }\">\n        <v-switch\n          :input-value=\"item.enable\"\n          @change=\"updateEnable($event, item)\"\n          hide-details\n          class=\"ma-0 pa-0\"\n          color=\"primary\"\n        ></v-switch>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n        <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport ReteEditor from \"@/components/rete/ReteEditor\";\nimport * as dayjs from 'dayjs'\n\n\nexport default {\n  name: \"Automations\",\n  components: {\n    ReteEditor,\n  },\n\n  data() {\n\n    return {\n      gpios: [],\n      value: null,\n\n      items: [\n        {\n          title: \"Logout\",\n          icon: \"mdi-logout\",\n          click() {\n            this.$router.push(\"/\");\n          },\n        },\n        {\n          title: \"Dashboard\",\n          icon: \"mdi-view-dashboard\",\n          click() {\n            this.$router.push(\"dashboard\");\n          },\n        },\n        {\n          title: \"Settings\",\n          icon: \"mdi-cogs\",\n          click() {\n            this.$router.push(\"settings\");\n          },\n        },\n      ],\n\n      menuStart: false,\n      menuEnd: false,\n      menu1: null,\n      menu2: null,\n\n      switch1: false,\n\n      AutomationName: \"\",\n      dialog: false,\n      rule_dialog: false,\n      dialogDelete: false,\n      \n      headers: [\n        {\n          text: \"\",\n          value: \"enable\",\n          sortable: false,\n          width: 0,\n        },\n        {\n          text: \"Name\",\n          align: \"start\",\n          value: \"name\",\n        },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n      automations: [],\n      editedIndex: -1,\n      editedItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {},\n      },\n\n      defaultItem: {\n        id: 0,\n        name: \"\",\n        rule: 0,\n        gpios: [],\n        enable: false,\n        dates: [],\n        startHour: \"\",\n        endHour: \"\",\n        blueprint: {},\n      },\n\n      editor: null,\n      editorJSON: \"\",\n\n      nameRules : [v => !!v || 'Name is required']\n    };\n  },\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Process\" : \"Edit Processes\";\n    },\n    dateRangeText() {\n      return this.editedItem.dates.join(\" ~ \");\n    },\n    allGpios() {\n      if(this.editedIndex < 0) {\n        return this.gpios.sort((a, b) => a.value - b.value)\n      }\n      return this.gpios.concat(this.automations[this.editedIndex].gpios.map(value => ({ text: `GPIO ${value}`, value: value }))).sort((a, b) => a.value - b.value)\n    },\n    orderEditedGpios: {\n      get() {\n        return this.editedItem.gpios.sort((a, b) => a - b)\n      },\n      set(value) {\n        this.editedItem.gpios = value\n      }\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  async mounted() {\n    const responseAutomations = await fetch(\"http://127.0.0.1:5000/automation\");\n    const jsonAutomations = await responseAutomations.json();\n    this.automations = jsonAutomations.map((val) => {\n      const startTime = new Date(val.startTime);\n      const endTime = new Date(val.endTime);\n\n      delete val.startTime;\n      delete val.endTime;\n\n      val.dates = [\n        `${dayjs(startTime).format('YYYY-MM-DD')}`,\n        `${dayjs(endTime).format('YYYY-MM-DD')}`,\n      ];\n      val.startHour = `${dayjs(startTime).format('HH:mm')}`;\n      val.endHour = `${dayjs(endTime).format('HH:mm')}`;\n\n      return val;\n    });\n\n    this.getPins()\n    \n  },\n\n  methods: {\n    async createNodeClick() {},\n    handleClick(index) {\n      this.items[index].click.call(this);\n    },\n    clickLogo() {\n      this.$router.push(\"dashboard\");\n    },\n\n    async getPins() {\n      const responseGpios = await fetch(\"http://127.0.0.1:5000/pins\");\n      const jsonGpios = await responseGpios.json();\n    \n      this.gpios = jsonGpios.map(value => ({ text: `GPIO ${value}`, value: value }))\n    },\n\n    async editItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n\n      this.dialog = true;\n\n      setTimeout(async () => {\n        const blueprint = this.editedItem.blueprint;\n        await this.editor.fromJSON(blueprint);\n      }, 200);\n    },\n\n    async createItem() {\n      this.dialog = true;\n      setTimeout(async () => {\n        await this.editor.clear();\n      }, 200);\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.automations.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    async deleteItemConfirm() {\n      const id = this.editedItem.id;\n      await fetch(`http://127.0.0.1:5000/automation?id=${id}`, {\n        method: \"DELETE\",\n      });\n      this.automations.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    async save() {\n      const editor = this.editor;\n\n      const blueprint = await editor.toJSON();\n\n      const endNode = this.editor.nodes.find((node) => node.name === \"End\");\n      const endComponent = editor.getComponent(\"End\");\n\n      const logic = endComponent.toJsonLogic?.(endNode);\n\n      const dates = this.editedItem.dates;\n\n      const startHour = this.editedItem.startHour;\n      const endHour = this.editedItem.endHour;\n\n      const startTime = dayjs(dates[0] + ' ' + startHour).toISOString();\n      const endTime = dayjs(dates[1] + ' ' +  endHour).toISOString();\n\n      const automation = {\n        name: this.editedItem.name,\n        startTime: startTime,\n        endTime: endTime,\n        enable: this.editedItem.enable,\n        gpios: this.editedItem.gpios,\n        rules: logic,\n        blueprint: blueprint,\n      };\n\n      const file = JSON.stringify(automation);\n\n      //console.log(file);\n\n      if (this.editedIndex > -1) {\n        const id = this.editedItem.id;\n        await fetch(`http://127.0.0.1:5000/automation?id=${id}`, {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: file,\n        });\n        Object.assign(this.automations[this.editedIndex], this.editedItem);\n      } else {\n        await fetch(\"http://127.0.0.1:5000/automation\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: file,\n        });\n        this.automations.push(this.editedItem);\n      }\n\n      this.close();\n    },\n\n    async updateEnable(event, item) {\n      const id = item.id;\n\n      await fetch(`http://127.0.0.1:5000/automation?id=${id}`, {\n      method: \"PATCH\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        enable: !!event\n      })\n    });\n      \n    },\n\n    async onValidate() {\n      const editor = this.editor;\n\n      const endNode = this.editor.nodes.find((node) => node.name === \"End\");\n      const endComponent = editor.getComponent(\"End\");\n\n      this.$refs.form.validate()\n\n      console.log(JSON.stringify(endComponent.toJsonLogic?.(endNode)));\n    },\n\n    /*async onEditorImport() {\n      await this.editor.fromJSON(JSON.parse(this.editorJSON));\n    },\n\n    async onEditorSync() {\n      this.editorJSON = JSON.stringify(await this.editor.toJSON());\n    },*/\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}