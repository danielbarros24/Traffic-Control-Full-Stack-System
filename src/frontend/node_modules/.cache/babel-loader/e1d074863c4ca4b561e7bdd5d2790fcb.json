{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '../router/index';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    snackbars: []\n  },\n  mutations: {\n    SET_SNACKBAR: function SET_SNACKBAR(state, snackbar) {\n      state.snackbars = state.snackbars.concat(snackbar);\n    },\n    authUser: function authUser(state, userData) {\n      state.username = userData.username;\n      state.token = userData.token;\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.username = null;\n      state.token = null;\n    }\n  },\n  actions: {\n    setSnackbar: function setSnackbar(_ref, snackbar) {\n      var commit = _ref.commit;\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit('SET_SNACKBAR', snackbar);\n    },\n    login: function login(_ref2, authData) {\n      var commit = _ref2.commit;\n      axios.post('http://127.0.0.1:5000/login', {\n        username: authData.username,\n        password: authData.password\n      }).then(function (response) {\n        var success = response.data.success;\n\n        if (success === true) {\n          commit('authUser', {\n            username: authData.username,\n            token: response.data.token\n          });\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } else {\n          console.log('Login error');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    autoLogin: function autoLogin(_ref3) {\n      var commit = _ref3.commit;\n      var token = localStorage.getItem('token');\n      var username = localStorage.getItem('username');\n\n      if (!token || !username) {\n        return;\n      }\n\n      commit('authUser', {\n        username: username,\n        token: token\n      });\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    }\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.token !== null;\n    }\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/store/index.js"],"names":["Vue","Vuex","axios","router","use","Store","state","snackbars","mutations","SET_SNACKBAR","snackbar","concat","authUser","userData","username","token","clearAuthData","actions","setSnackbar","commit","showing","color","login","authData","post","password","then","response","success","data","localStorage","setItem","replace","console","log","catch","error","autoLogin","getItem","logout","removeItem","getters","isAuthenticated","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport router from '../router/index'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    snackbars: [],\n  },\n  mutations: {\n\n    SET_SNACKBAR(state, snackbar) {\n      state.snackbars= state.snackbars.concat(snackbar)\n    },\n\n    authUser(state, userData) {\n      state.username = userData.username;\n      state.token = userData.token;\n    },\n    clearAuthData(state) {\n      state.username = null;\n      state.token = null;\n    },\n    \n  },\n  actions: {\n    setSnackbar({commit}, snackbar) {\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit ('SET_SNACKBAR', snackbar);\n    },\n\n    login: ({commit}, authData) => {\n      axios.post('http://127.0.0.1:5000/login', {\n        username: authData.username,\n        password: authData.password,\n      }).then(response => {\n        let success = response.data.success;\n  \n        if (success === true) {\n          commit('authUser', { username: authData.username, token: response.data.token });\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } \n        else {\n          console.log('Login error');\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n    },\n    autoLogin({commit}) {\n      let token = localStorage.getItem('token');\n      let username = localStorage.getItem('username');\n  \n      if (!token || !username) {\n        return;\n      }\n  \n      commit('authUser', { username: username, token: token });\n    },\n    logout: ({commit}) => {\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    },\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.token !== null;\n    },\n  },\n  modules: {\n  },\n})\n"]},"metadata":{},"sourceType":"module"}