{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '../router/index';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    snackbars: []\n  },\n  mutations: {\n    SET_SNACKBAR: function SET_SNACKBAR(state, snackbar) {\n      state.snackbars = state.snackbars.concat(snackbar);\n    }\n  },\n  actions: {\n    setSnackbar: function setSnackbar(_ref, snackbar) {\n      var commit = _ref.commit;\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit('SET_SNACKBAR', snackbar);\n    },\n    login: function login(_ref2, authData) {\n      var commit = _ref2.commit;\n      axios.post('http://127.0.0.1:5000/login', {\n        username: authData.username,\n        password: authData.password\n      }).then(function (response) {\n        var success = response.data.success;\n\n        if (success === true) {\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } else {\n          console.log('Login error');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    autoLogin: function autoLogin(_ref3) {\n      var commit = _ref3.commit;\n      var token = localStorage.getItem('token');\n      var username = localStorage.getItem('username');\n\n      if (!token || !username) {\n        return;\n      }\n\n      commit('authUser', {\n        username: username,\n        token: token\n      });\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    }\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.token !== null;\n    }\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/src/store/index.js"],"names":["Vue","Vuex","axios","router","use","Store","state","snackbars","mutations","SET_SNACKBAR","snackbar","concat","actions","setSnackbar","commit","showing","color","login","authData","post","username","password","then","response","success","data","localStorage","setItem","token","replace","console","log","catch","error","autoLogin","getItem","logout","removeItem","getters","isAuthenticated","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport router from '../router/index'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    snackbars: [],\n  },\n  mutations: {\n\n    SET_SNACKBAR(state, snackbar) {\n      state.snackbars= state.snackbars.concat(snackbar)\n    },\n  },\n  actions: {\n    setSnackbar({commit}, snackbar) {\n      snackbar.showing = true;\n      snackbar.color = snackbar.color || 'primary';\n      commit ('SET_SNACKBAR', snackbar);\n    },\n\n    login: ({commit}, authData) => {\n      axios.post('http://127.0.0.1:5000/login', {\n        username: authData.username,\n        password: authData.password,\n      }).then(response => {\n        let success = response.data.success;\n  \n        if (success === true) {\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', authData.username);\n          router.replace('dashboard');\n        } \n        else {\n          console.log('Login error');\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n    },\n    autoLogin({commit}) {\n      let token = localStorage.getItem('token');\n      let username = localStorage.getItem('username');\n  \n      if (!token || !username) {\n        return;\n      }\n  \n      commit('authUser', { username: username, token: token });\n    },\n    logout: ({commit}) => {\n      commit('clearAuthData');\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      router.replace('login');\n    },\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.token !== null;\n    },\n  },\n  modules: {\n  },\n})\n"]},"metadata":{},"sourceType":"module"}