{"ast":null,"code":"// Styles\nimport \"../../../src/components/VColorPicker/VColorPicker.sass\"; // Components\n\nimport VSheet from '../VSheet/VSheet';\nimport VColorPickerPreview from './VColorPickerPreview';\nimport VColorPickerCanvas from './VColorPickerCanvas';\nimport VColorPickerEdit, { modes } from './VColorPickerEdit';\nimport VColorPickerSwatches from './VColorPickerSwatches'; // Helpers\n\nimport { parseColor, fromRGBA, extractColor, hasAlpha } from './util';\nimport mixins from '../../util/mixins';\nimport { deepEqual } from '../../util/helpers'; // Mixins\n\nimport Elevatable from '../../mixins/elevatable';\nimport Themeable from '../../mixins/themeable';\nexport default mixins(Elevatable, Themeable).extend({\n  name: 'v-color-picker',\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideSliders: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: v => Object.keys(modes).includes(v)\n    },\n    showSwatches: Boolean,\n    swatches: Array,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150\n    },\n    value: {\n      type: [Object, String]\n    },\n    width: {\n      type: [Number, String],\n      default: 300\n    }\n  },\n  data: () => ({\n    internalValue: fromRGBA({\n      r: 255,\n      g: 0,\n      b: 0,\n      a: 1\n    })\n  }),\n  computed: {\n    hideAlpha() {\n      if (!this.value) return false;\n      return !hasAlpha(this.value);\n    }\n\n  },\n  watch: {\n    value: {\n      handler(color) {\n        this.updateColor(parseColor(color, this.internalValue));\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    updateColor(color) {\n      this.internalValue = color;\n      const value = extractColor(this.internalValue, this.value);\n\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value);\n        this.$emit('update:color', this.internalValue);\n      }\n    },\n\n    genCanvas() {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n\n    genControls() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls'\n      }, [!this.hideSliders && this.genPreview(), !this.hideInputs && this.genEdit()]);\n    },\n\n    genEdit() {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': v => this.$emit('update:mode', v)\n        }\n      });\n    },\n\n    genPreview() {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n\n    genSwatches() {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          disabled: this.disabled,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    }\n\n  },\n\n  render(h) {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses,\n        ...this.elevationClasses\n      },\n      props: {\n        maxWidth: this.width\n      }\n    }, [!this.hideCanvas && this.genCanvas(), (!this.hideSliders || !this.hideInputs) && this.genControls(), this.showSwatches && this.genSwatches()]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VSheet","VColorPickerPreview","VColorPickerCanvas","VColorPickerEdit","modes","VColorPickerSwatches","parseColor","fromRGBA","extractColor","hasAlpha","mixins","deepEqual","Elevatable","Themeable","extend","name","props","canvasHeight","type","String","Number","default","disabled","Boolean","dotSize","flat","hideCanvas","hideSliders","hideInputs","hideModeSwitch","mode","validator","v","Object","keys","includes","showSwatches","swatches","Array","swatchesMaxHeight","value","width","data","internalValue","r","g","b","a","computed","hideAlpha","watch","handler","color","updateColor","immediate","methods","$emit","genCanvas","$createElement","height","on","genControls","staticClass","genPreview","genEdit","genSwatches","dark","light","maxHeight","render","h","class","themeClasses","elevationClasses","maxWidth"],"sourceRoot":"","sources":["../../../src/components/VColorPicker/VColorPicker.ts"],"sourcesContent":["// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\nimport VColorPickerPreview from './VColorPickerPreview'\nimport VColorPickerCanvas from './VColorPickerCanvas'\nimport VColorPickerEdit, { Mode, modes } from './VColorPickerEdit'\nimport VColorPickerSwatches from './VColorPickerSwatches'\n\n// Helpers\nimport { VColorPickerColor, parseColor, fromRGBA, extractColor, hasAlpha } from './util'\nimport mixins from '../../util/mixins'\nimport { deepEqual } from '../../util/helpers'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nexport default mixins(Elevatable, Themeable).extend({\n  name: 'v-color-picker',\n\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150,\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideSliders: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n    showSwatches: Boolean,\n    swatches: Array as PropType<string[][]>,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150,\n    },\n    value: {\n      type: [Object, String],\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    internalValue: fromRGBA({ r: 255, g: 0, b: 0, a: 1 }),\n  }),\n\n  computed: {\n    hideAlpha (): boolean {\n      if (!this.value) return false\n\n      return !hasAlpha(this.value)\n    },\n  },\n\n  watch: {\n    value: {\n      handler (color: any) {\n        this.updateColor(parseColor(color, this.internalValue))\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    updateColor (color: VColorPickerColor) {\n      this.internalValue = color\n      const value = extractColor(this.internalValue, this.value)\n\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value)\n        this.$emit('update:color', this.internalValue)\n      }\n    },\n    genCanvas (): VNode {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genControls (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls',\n      }, [\n        !this.hideSliders && this.genPreview(),\n        !this.hideInputs && this.genEdit(),\n      ])\n    },\n    genEdit (): VNode {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode,\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': (v: Mode) => this.$emit('update:mode', v),\n        },\n      })\n    },\n    genPreview (): VNode {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genSwatches (): VNode {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          disabled: this.disabled,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      },\n      props: {\n        maxWidth: this.width,\n      },\n    }, [\n      !this.hideCanvas && this.genCanvas(),\n      (!this.hideSliders || !this.hideInputs) && this.genControls(),\n      this.showSwatches && this.genSwatches(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}