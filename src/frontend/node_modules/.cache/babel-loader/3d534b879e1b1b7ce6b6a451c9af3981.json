{"ast":null,"code":"import _classCallCheck from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/home/daniel/Projects/Thesis/Jamadgy/python_backend/vue-flask/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.url.to-json.js\";\n//\n//\n//\n//\n//\n//\n//\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\nimport ReteNumControl from './ReteNumControl';\nexport default {\n  data: function data() {\n    return {\n      editor: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var numSocket, vehileSocket, NumControl, ConstantComponent, TempoDePermanenciaComponent, FluxoComponent, NumeroDeVeiculosComponent, FilaComponent, AddComponent, MultiplyComponent, DivisionComponent, EqualToComponent, DifferentThanComponent, GreaterThanComponent, LessThanComponent, GreaterThanOrEqualToComponent, LessThanOrEqualToComponent, ANDComponent, ORComponent, NOTComponent, container, components, editor, engine, n1, n2, add, sub;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              numSocket = new Socket('Number');\n              vehileSocket = new Socket('Vehicle');\n\n              NumControl = /*#__PURE__*/function (_Control) {\n                _inherits(NumControl, _Control);\n\n                var _super = _createSuper(NumControl);\n\n                function NumControl(emitter, key, readonly) {\n                  var _this2;\n\n                  _classCallCheck(this, NumControl);\n\n                  _this2 = _super.call(this, key);\n                  _this2.component = ReteNumControl;\n                  _this2.props = {\n                    emitter: emitter,\n                    ikey: key,\n                    readonly: readonly\n                  };\n                  return _this2;\n                }\n\n                _createClass(NumControl, [{\n                  key: \"setValue\",\n                  value: function setValue(val) {\n                    this.vueContext.value = val;\n                  }\n                }]);\n\n                return NumControl;\n              }(Control);\n\n              ConstantComponent = /*#__PURE__*/function (_Component) {\n                _inherits(ConstantComponent, _Component);\n\n                var _super2 = _createSuper(ConstantComponent);\n\n                function ConstantComponent() {\n                  _classCallCheck(this, ConstantComponent);\n\n                  return _super2.call(this, \"Constante\");\n                }\n\n                _createClass(ConstantComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"number\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return ConstantComponent;\n              }(Component);\n\n              TempoDePermanenciaComponent = /*#__PURE__*/function (_Component2) {\n                _inherits(TempoDePermanenciaComponent, _Component2);\n\n                var _super3 = _createSuper(TempoDePermanenciaComponent);\n\n                function TempoDePermanenciaComponent() {\n                  _classCallCheck(this, TempoDePermanenciaComponent);\n\n                  return _super3.call(this, \"Tempo de permanência\");\n                }\n\n                _createClass(TempoDePermanenciaComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('str', \"Vehicle Type\", vehileSocket);\n                    var inp2 = new Input('num', \"Time\", numSocket);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return TempoDePermanenciaComponent;\n              }(Component);\n\n              FluxoComponent = /*#__PURE__*/function (_Component3) {\n                _inherits(FluxoComponent, _Component3);\n\n                var _super4 = _createSuper(FluxoComponent);\n\n                function FluxoComponent() {\n                  _classCallCheck(this, FluxoComponent);\n\n                  return _super4.call(this, \"Fluxo\");\n                }\n\n                _createClass(FluxoComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Number\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return FluxoComponent;\n              }(Component);\n\n              NumeroDeVeiculosComponent = /*#__PURE__*/function (_Component4) {\n                _inherits(NumeroDeVeiculosComponent, _Component4);\n\n                var _super5 = _createSuper(NumeroDeVeiculosComponent);\n\n                function NumeroDeVeiculosComponent() {\n                  _classCallCheck(this, NumeroDeVeiculosComponent);\n\n                  return _super5.call(this, \"Número de veículos\");\n                }\n\n                _createClass(NumeroDeVeiculosComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Number\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return NumeroDeVeiculosComponent;\n              }(Component);\n\n              FilaComponent = /*#__PURE__*/function (_Component5) {\n                _inherits(FilaComponent, _Component5);\n\n                var _super6 = _createSuper(FilaComponent);\n\n                function FilaComponent() {\n                  _classCallCheck(this, FilaComponent);\n\n                  return _super6.call(this, \"Fila\");\n                }\n\n                _createClass(FilaComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var out1 = new Output('num', \"Number\", numSocket);\n                    return node.addControl(new NumControl(this.editor, 'num')).addOutput(out1);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    outputs['num'] = node.data.num;\n                  }\n                }]);\n\n                return FilaComponent;\n              }(Component);\n\n              AddComponent = /*#__PURE__*/function (_Component6) {\n                _inherits(AddComponent, _Component6);\n\n                var _super7 = _createSuper(AddComponent);\n\n                function AddComponent() {\n                  _classCallCheck(this, AddComponent);\n\n                  return _super7.call(this, \"+\");\n                }\n\n                _createClass(AddComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum + a;\n                    }, 0);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return AddComponent;\n              }(Component);\n\n              MultiplyComponent = /*#__PURE__*/function (_Component7) {\n                _inherits(MultiplyComponent, _Component7);\n\n                var _super8 = _createSuper(MultiplyComponent);\n\n                function MultiplyComponent() {\n                  _classCallCheck(this, MultiplyComponent);\n\n                  return _super8.call(this, \"x\");\n                }\n\n                _createClass(MultiplyComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum * a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return MultiplyComponent;\n              }(Component);\n\n              DivisionComponent = /*#__PURE__*/function (_Component8) {\n                _inherits(DivisionComponent, _Component8);\n\n                var _super9 = _createSuper(DivisionComponent);\n\n                function DivisionComponent() {\n                  _classCallCheck(this, DivisionComponent);\n\n                  return _super9.call(this, \"/\");\n                }\n\n                _createClass(DivisionComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addControl(new NumControl(this.editor, 'preview', true)).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return DivisionComponent;\n              }(Component);\n\n              EqualToComponent = /*#__PURE__*/function (_Component9) {\n                _inherits(EqualToComponent, _Component9);\n\n                var _super10 = _createSuper(EqualToComponent);\n\n                function EqualToComponent() {\n                  _classCallCheck(this, EqualToComponent);\n\n                  return _super10.call(this, \"=\");\n                }\n\n                _createClass(EqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return EqualToComponent;\n              }(Component);\n\n              DifferentThanComponent = /*#__PURE__*/function (_Component10) {\n                _inherits(DifferentThanComponent, _Component10);\n\n                var _super11 = _createSuper(DifferentThanComponent);\n\n                function DifferentThanComponent() {\n                  _classCallCheck(this, DifferentThanComponent);\n\n                  return _super11.call(this, \"!=\");\n                }\n\n                _createClass(DifferentThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return DifferentThanComponent;\n              }(Component);\n\n              GreaterThanComponent = /*#__PURE__*/function (_Component11) {\n                _inherits(GreaterThanComponent, _Component11);\n\n                var _super12 = _createSuper(GreaterThanComponent);\n\n                function GreaterThanComponent() {\n                  _classCallCheck(this, GreaterThanComponent);\n\n                  return _super12.call(this, \">\");\n                }\n\n                _createClass(GreaterThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return GreaterThanComponent;\n              }(Component);\n\n              LessThanComponent = /*#__PURE__*/function (_Component12) {\n                _inherits(LessThanComponent, _Component12);\n\n                var _super13 = _createSuper(LessThanComponent);\n\n                function LessThanComponent() {\n                  _classCallCheck(this, LessThanComponent);\n\n                  return _super13.call(this, \"<\");\n                }\n\n                _createClass(LessThanComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return LessThanComponent;\n              }(Component);\n\n              GreaterThanOrEqualToComponent = /*#__PURE__*/function (_Component13) {\n                _inherits(GreaterThanOrEqualToComponent, _Component13);\n\n                var _super14 = _createSuper(GreaterThanOrEqualToComponent);\n\n                function GreaterThanOrEqualToComponent() {\n                  _classCallCheck(this, GreaterThanOrEqualToComponent);\n\n                  return _super14.call(this, \">=\");\n                }\n\n                _createClass(GreaterThanOrEqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return GreaterThanOrEqualToComponent;\n              }(Component);\n\n              LessThanOrEqualToComponent = /*#__PURE__*/function (_Component14) {\n                _inherits(LessThanOrEqualToComponent, _Component14);\n\n                var _super15 = _createSuper(LessThanOrEqualToComponent);\n\n                function LessThanOrEqualToComponent() {\n                  _classCallCheck(this, LessThanOrEqualToComponent);\n\n                  return _super15.call(this, \"<=\");\n                }\n\n                _createClass(LessThanOrEqualToComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return LessThanOrEqualToComponent;\n              }(Component);\n\n              ANDComponent = /*#__PURE__*/function (_Component15) {\n                _inherits(ANDComponent, _Component15);\n\n                var _super16 = _createSuper(ANDComponent);\n\n                function ANDComponent() {\n                  _classCallCheck(this, ANDComponent);\n\n                  return _super16.call(this, \"AND\");\n                }\n\n                _createClass(ANDComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return ANDComponent;\n              }(Component);\n\n              ORComponent = /*#__PURE__*/function (_Component16) {\n                _inherits(ORComponent, _Component16);\n\n                var _super17 = _createSuper(ORComponent);\n\n                function ORComponent() {\n                  _classCallCheck(this, ORComponent);\n\n                  return _super17.call(this, \"OR\");\n                }\n\n                _createClass(ORComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return ORComponent;\n              }(Component);\n\n              NOTComponent = /*#__PURE__*/function (_Component17) {\n                _inherits(NOTComponent, _Component17);\n\n                var _super18 = _createSuper(NOTComponent);\n\n                function NOTComponent() {\n                  _classCallCheck(this, NOTComponent);\n\n                  return _super18.call(this, \"NOT\");\n                }\n\n                _createClass(NOTComponent, [{\n                  key: \"builder\",\n                  value: function builder(node) {\n                    var inp1 = new Input('num', \"Number\", numSocket, true);\n                    var out = new Output('num', \"Number\", numSocket);\n                    return node.addInput(inp1).addOutput(out);\n                  }\n                }, {\n                  key: \"worker\",\n                  value: function worker(node, inputs, outputs) {\n                    var sum = inputs['num'].reduce(function (partialSum, a) {\n                      return partialSum / a;\n                    }, 1);\n                    this.editor.nodes.find(function (n) {\n                      return n.id == node.id;\n                    }).controls.get('preview').setValue(sum);\n                    outputs['num'] = sum;\n                  }\n                }]);\n\n                return NOTComponent;\n              }(Component);\n\n              container = _this.$refs.nodeEditor;\n              components = [new ConstantComponent(), new TempoDePermanenciaComponent(), new FluxoComponent(), new NumeroDeVeiculosComponent(), new FilaComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent(), new DifferentThanComponent(), new GreaterThanComponent(), new LessThanComponent(), new GreaterThanOrEqualToComponent(), new LessThanOrEqualToComponent(), new ANDComponent(), new ORComponent(), new NOTComponent()];\n              editor = new NodeEditor('demo@0.1.0', container);\n              editor.use(ConnectionPlugin);\n              editor.use(VueRenderPlugin);\n              editor.use(ContextMenuPlugin);\n              editor.use(AreaPlugin);\n              editor.use(KeyboardPlugin);\n              engine = new Engine('demo@0.1.0');\n              components.map(function (c) {\n                editor.register(c);\n                engine.register(c);\n              });\n              _context2.next = 32;\n              return components[0].createNode({\n                num: 2\n              });\n\n            case 32:\n              n1 = _context2.sent;\n              _context2.next = 35;\n              return components[0].createNode({\n                num: 0\n              });\n\n            case 35:\n              n2 = _context2.sent;\n              _context2.next = 38;\n              return components[1].createNode();\n\n            case 38:\n              add = _context2.sent;\n              _context2.next = 41;\n              return components[2].createNode();\n\n            case 41:\n              sub = _context2.sent;\n              n1.position = [80, 200];\n              n2.position = [80, 400];\n              add.position = [500, 240];\n              sub.position = [800, 240];\n              editor.on('process nodecreated noderemoved connectioncreated connectionremoved', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log('process');\n                        _context.next = 3;\n                        return engine.abort();\n\n                      case 3:\n                        _context.next = 5;\n                        return engine.process(editor.toJSON());\n\n                      case 5:\n                        console.log(editor.toJSON());\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              editor.view.resize();\n              AreaPlugin.zoomAt(editor);\n              editor.trigger('process');\n\n            case 50:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["data","editor","mounted","numSocket","vehileSocket","NumControl","emitter","ikey","readonly","Control","ConstantComponent","addControl","addOutput","out1","outputs","Component","TempoDePermanenciaComponent","addInput","inp1","out","FluxoComponent","NumeroDeVeiculosComponent","FilaComponent","AddComponent","MultiplyComponent","DivisionComponent","EqualToComponent","DifferentThanComponent","GreaterThanComponent","LessThanComponent","GreaterThanOrEqualToComponent","LessThanOrEqualToComponent","ANDComponent","ORComponent","NOTComponent","container","components","engine","num","n1","n2","add","sub","console","AreaPlugin"],"sourceRoot":"src/components/rete","sources":["ReteEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\"><div class=\"node-editor\" ref=\"nodeEditor\"></div></div>\n    <canvas id=\"canvasOutput\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { Socket, NodeEditor, Control, Output, Input, Component, Engine } from \"rete\";\n\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport VueRenderPlugin from \"rete-vue-render-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport KeyboardPlugin from 'rete-keyboard-plugin';\n\nimport ReteNumControl from './ReteNumControl'\n\nexport default {\n  data() {\n    return {\n      editor: null\n    };\n  },\n\n  async mounted() {\n    var numSocket = new Socket('Number');\n    var vehileSocket = new Socket('Vehicle');\n\n    class NumControl extends Control {\n      constructor(emitter, key, readonly) {\n        super(key);\n        \n        this.component = ReteNumControl;\n        this.props = { emitter, ikey: key, readonly };\n      }\n\n      setValue(val) {\n        this.vueContext.value = val;\n      }\n    }\n\n    class ConstantComponent extends Component {\n        constructor(){\n            super(\"Constante\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"number\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class TempoDePermanenciaComponent extends Component {\n        constructor(){\n            super(\"Tempo de permanência\");\n        }\n\n        builder(node) {\n            var inp1 = new Input('str', \"Vehicle Type\", vehileSocket);\n            var inp2 = new Input('num',\"Time\", numSocket);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class FluxoComponent extends Component {\n        constructor(){\n            super(\"Fluxo\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Number\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class NumeroDeVeiculosComponent extends Component {\n        constructor(){\n            super(\"Número de veículos\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Number\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class FilaComponent extends Component {\n        constructor(){\n            super(\"Fila\");\n        }\n\n        builder(node) {\n            var out1 = new Output('num', \"Number\", numSocket);\n            return node\n              .addControl(new NumControl(this.editor, 'num'))\n              .addOutput(out1);\n        }\n\n        worker(node, inputs, outputs) {\n            outputs['num'] = node.data.num;\n        }\n    }\n\n    class AddComponent extends Component {\n        constructor(){\n            super(\"+\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) => partialSum + a, 0);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class MultiplyComponent extends Component {\n        constructor(){\n            super(\"x\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum * a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class DivisionComponent extends Component {\n        constructor(){\n            super(\"/\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addControl(new NumControl(this.editor, 'preview', true))\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class EqualToComponent extends Component {\n        constructor(){\n            super(\"=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class DifferentThanComponent extends Component {\n        constructor(){\n            super(\"!=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class GreaterThanComponent extends Component {\n        constructor(){\n            super(\">\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class LessThanComponent extends Component {\n        constructor(){\n            super(\"<\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class GreaterThanOrEqualToComponent extends Component {\n        constructor(){\n            super(\">=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class LessThanOrEqualToComponent extends Component {\n        constructor(){\n            super(\"<=\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class ANDComponent extends Component {\n        constructor(){\n            super(\"AND\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class ORComponent extends Component {\n        constructor(){\n            super(\"OR\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n\n    class NOTComponent extends Component {\n        constructor(){\n            super(\"NOT\");\n        }\n        \n        builder(node) {\n            var inp1 = new Input('num',\"Number\", numSocket, true);\n            var out = new Output('num', \"Number\", numSocket);\n\n            return node\n                .addInput(inp1)\n                .addOutput(out);\n        }\n        \n        worker(node, inputs, outputs) {\n            var sum = inputs['num'].reduce((partialSum, a) =>  partialSum / a, 1);\n            this.editor.nodes.find(n => n.id == node.id).controls.get('preview').setValue(sum);\n            outputs['num'] = sum;\n        }\n    }\n    \n\n    var container = this.$refs.nodeEditor\n    var components = [new ConstantComponent(), new TempoDePermanenciaComponent(), new FluxoComponent(), new NumeroDeVeiculosComponent(), \n      new FilaComponent(), new AddComponent(), new MultiplyComponent(), new DivisionComponent(), new EqualToComponent(), \n      new DifferentThanComponent(), new GreaterThanComponent(), new LessThanComponent(), new GreaterThanOrEqualToComponent(), new LessThanOrEqualToComponent(), \n      new ANDComponent(), new ORComponent(), new NOTComponent()];\n    var editor = new NodeEditor('demo@0.1.0', container);\n\n    editor.use(ConnectionPlugin);\n    editor.use(VueRenderPlugin);\n    editor.use(ContextMenuPlugin);\n    editor.use(AreaPlugin);\n    editor.use(KeyboardPlugin);\n\n    var engine = new Engine('demo@0.1.0');\n    components.map(c => {\n        editor.register(c);\n        engine.register(c);\n    });\n\n    var n1 = await components[0].createNode({num: 2});\n    var n2 = await components[0].createNode({num: 0});\n    var add = await components[1].createNode();\n    var sub = await components[2].createNode();\n    \n\n    n1.position = [80, 200];\n    n2.position = [80, 400];\n    add.position = [500, 240];\n    sub.position = [800, 240];\n\n    editor.on('process nodecreated noderemoved connectioncreated connectionremoved', async () => {\n      console.log('process');\n        await engine.abort();\n        await engine.process(editor.toJSON());\n        console.log(editor.toJSON())\n    });\n    \n    editor.view.resize();\n    AreaPlugin.zoomAt(editor);\n    editor.trigger('process');\n  }\n};\n</script>\n\n<style>\n.node-editor {\n  text-align: left;\n  overflow: hidden;\n}\n.node .control input, .node .input-control input {\n  width: 140px;\n}\nselect, input {\n  width: 100%;\n  border-radius: 30px;\n  background-color: white;\n  padding: 2px 6px;\n  border: 1px solid #999;\n  font-size: 110%;\n  width: 170px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}